{"version":3,"sources":["webpack:///src/app/instructor/schedule/add-schedule/add-schedule.component.html","webpack:///src/app/instructor/schedule/add-schedule/add-schedule.component.ts","webpack:///src/app/instructor/schedule/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/instructor/schedule/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/instructor/schedule/schedule-routing.module.ts","webpack:///src/app/instructor/schedule/schedule.model.ts","webpack:///src/app/instructor/schedule/schedule.module.ts","webpack:///src/app/instructor/schedule/schedule.service.ts"],"names":["AddScheduleComponent","fb","dialog","calendarService","snackBar","scheduleList","filterOptions","calendarData","filterItems","calendarOptions","headerToolbar","left","center","right","initialView","weekends","editable","selectable","selectMirror","dayMaxEvents","eventClick","handleEventClick","bind","eventsSet","handleEvents","dialogTitle","calendar","Calendar","addCusForm","createCalendarForm","getScheduleList","getScheduleDetails","getScheduleDetailsForInstructor","sessionStorage","client","currentUser","subscribe","res","console","log","i","length","push","status","title","start","Date","startDate","end","endDate","className","schedule_color","id","lead_time","schedule_name","schedule_id","schedule_view","schedule_view_assignment","schedule_assignment","calendarEvents","tempEvents","events","event","filter","checked","splice","indexOf","filterEvent","element","list","x","map","y","includes","clickInfo","row","_def","extendedProps","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","action","direction","subs","sink","afterClosed","result","reset","group","Validators","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","toastrService","showDeleteBtn","formControl","FormControl","hasError","close","ViewAssignList","MAT_DIALOG_DATA","routes","path","component","ScheduleRoutingModule","RouterModule","getRandomID","schedule_owner","formatDate","S4","Math","random","toString","substring","FullCalendarModule","ScheduleModule","ScheduleService","NgxDatatableModule","MatChipsModule","CKEditorModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MatMenuModule","MaterialFileInputModule","MatProgressSpinnerModule","MatStepperModule","NgxMaskModule","TranslateModule","MatAutocompleteModule","OwlDateTimeModule","OwlNativeDateTimeModule","http","API_URL","httpOptions","headers","HttpHeaders","dataChange","BehaviorSubject","value","dialogData","get","pipe","catchError","errorHandler","error","errorMessage","ErrorEvent","message","throwError","environment","authToken","post"],"mappings":"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","file":"src_app_instructor_schedule_schedule_module_ts-es5.js","sourcesContent":["<section class=\"content\">\n        <div class=\"container-fluid\">\n          <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">{{'SCHEDULE.TITLE' | translate}}</h4>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-2 col-sm-12 p-l-30\">\n                      <div class=\"m-b-25\">\n                        <!-- <button mat-raised-button color=\"primary\" (click)=\"addNewEvent()\">Add Event</button> -->\n                      </div>\n                      <!-- <p>My Calendars</p> -->\n                      <div class=\"filter-container\">\n                        <ul>\n                          <li *ngFor=\"let filter of scheduleList\">\n                            <mat-checkbox [checked]=\"filter.checked\" [value]=\"filter.status\" color=\"primary\"\n                              (change)=\"changeCategory($event, filter)\">\n                              {{filter.status}}\n                            </mat-checkbox>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <div class=\"col-md-10 col-sm-12\">\n                      <div class=\"panel-body\">\n                        <full-calendar [options]='calendarOptions'>\n                        </full-calendar>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      ","import { Component, ViewChild, OnInit } from '@angular/core';\nimport {\n  CalendarOptions,\n  DateSelectArg,\n  EventClickArg,\n  EventApi,\n} from '@fullcalendar/angular';\nimport { EventInput } from '@fullcalendar/angular';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ScheduleService } from '../schedule.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { FormDialogComponent } from '../dialogs/form-dialog/form-dialog.component';\nimport { Calendar } from '../schedule.model';\nimport { UnsubscribeOnDestroyAdapter } from '../../../shared/UnsubscribeOnDestroyAdapter';\nimport { formatDate } from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-schedule',\n  templateUrl: './add-schedule.component.html',\n  styleUrls: ['./add-schedule.component.scss']\n})\nexport class AddScheduleComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n  @ViewChild('calendar', { static: false })\n  calendar: Calendar | null;\n  public addCusForm: FormGroup;\n  scheduleList=[];\n\n  dialogTitle: string;\n  filterOptions = 'All';\n  calendarData=[];\n  filterItems =[]\n\n  calendarEvents: EventInput[];\n  tempEvents: EventInput[];\n\n  constructor(\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    public calendarService: ScheduleService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n    this.dialogTitle = 'Add New Event';\n    this.calendar = new Calendar({});\n    this.addCusForm = this.createCalendarForm(this.calendar);\n    this.getScheduleList();\n\n  }\n\n  public ngOnInit(): void {\n    \n    this.getScheduleDetails();\n    \n  }\n\n  getScheduleDetails(){\n    this.calendarData=[];\n    this.calendarService.getScheduleDetailsForInstructor(sessionStorage.client,sessionStorage.currentUser)\n    .subscribe(res=>{\n      console.log(\"----res['data']----\",res['data'])\n      for(let i=0;i<res['data'].length;i++){\n        this.scheduleList.push({\n          'status':res['data'][i].status,\n          'checked':true\n        })\n        this.filterItems.push(res['data'][i].status)\n        this.calendarData.push({\n          // id: res['data'][i].id,\n          title: res['data'][i].status,\n          start: new Date(res['data'][i].startDate),\n          end: new Date(res['data'][i].endDate),  \n          className: res['data'][i].schedule_color,\n          // groupId: res['data'][i].schedule_view,\n          id: res['data'][i].id,\n          lead_time: res['data'][i].lead_time,\n          schedule_name: res['data'][i].schedule_id,\n          // schedule_owner:res['data'][i].schedule_owner,\n          schedule_view:res['data'][i].schedule_view,\n          schedule_view_assignment:res['data'][i].schedule_assignment,\n          startDate: new Date(res['data'][i].startDate),\n          endDate: new Date(res['data'][i].endDate)\n        })\n      }\n      this.calendarEvents=this.calendarData;\n      this.tempEvents = this.calendarEvents;\n      this.calendarOptions.events = this.calendarEvents;\n    })\n  }\n\n  getScheduleList(){\n    this.calendarService.getScheduleList()\n    .subscribe(res=>{\n        // this.scheduleList=res['data'];\n        // for(let i=0;i<this.scheduleList.length;i++){\n        //   this.scheduleList[i].checked=true;\n        //   this.filterItems.push(this.scheduleList[i].status)\n        // }\n    })\n  }\n\n  calendarOptions: CalendarOptions = {\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\n    },\n    initialView: 'dayGridMonth',\n    weekends: true,\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    eventClick: this.handleEventClick.bind(this),\n    eventsSet: this.handleEvents.bind(this),\n  };\n\n  \n\n  changeCategory(event: MatCheckboxChange, filter) {\n    console.log(\"---------\",filter)\n    if (event.checked) {\n      this.filterItems.push(filter.status);\n    } else {\n      this.filterItems.splice(this.filterItems.indexOf(filter.status), 1);\n    }\n    this.filterEvent(this.filterItems);\n  }\n\n  filterEvent(element) {\n    const list = this.calendarEvents.filter((x) =>\n      element.map((y) => y).includes(x.title)\n    );\n\n    this.calendarOptions.events = list;\n  }\n\n  handleEventClick(clickInfo: EventClickArg) {\n    this.eventClick(clickInfo);\n  }\n\n  eventClick(row) {\n    console.log(\"row===\",row.event._def.extendedProps);\n    const calendarData: any = {\n      id: row.event.id,\n      title: row.event.title,\n      lead_time: row.event._def.extendedProps.lead_time,\n      schedule_name: row.event._def.extendedProps.schedule_name,\n      // schedule_owner:row.event._def.extendedProps.schedule_owner,\n      schedule_view:row.event._def.extendedProps.schedule_view,\n      schedule_view_assignment:row.event._def.extendedProps.schedule_view_assignment,\n      startDate: row.event.start,\n      endDate: row.event.end\n    };\n\n    let tempDirection;\n    if (localStorage.getItem('isRtl') === 'true') {\n      tempDirection = 'rtl';\n    } else {\n      tempDirection = 'ltr';\n    }\n\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        calendar: calendarData,\n        action: 'edit',\n      },\n      direction: tempDirection,\n    });\n\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'submit') {\n        this.getScheduleDetails();\n        this.addCusForm.reset();\n      } else if (result === 'delete') {\n        this.getScheduleDetails();\n      }\n    });\n  }\n\n  \n\n  handleEvents(events: EventApi[]) {\n    // this.currentEvents = events;\n  }\n\n  createCalendarForm(calendar): FormGroup {\n    return this.fb.group({\n      id: [calendar.id],\n      lead_time: [\n        calendar.lead_time,\n        [Validators.required, Validators.pattern('[a-zA-Z]+([a-zA-Z ]+)*')],\n      ],\n      schedule_name: [calendar.schedule_name],\n      // schedule_owner:[calendar.schedule_owner],\n      schedule_view: [calendar.schedule_view],\n      schedule_view_assignment:[calendar.schedule_view_assignment],\n      startDate: [calendar.startDate, [Validators.required]],\n      endDate: [calendar.endDate, [Validators.required]],\n    });\n  }\n\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n\n\n\n}\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { ScheduleService } from '../../schedule.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Calendar } from '../../schedule.model';\r\nimport { formatDate } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass']\r\n})\r\n\r\n\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  calendarForm: FormGroup;\r\n  calendar;\r\n  showDeleteBtn = false;\r\n  ViewAssignList;\r\n  scheduleList;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public calendarService: ScheduleService,\r\n    private fb: FormBuilder,private toastrService: ToastrService,\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.calendar.title;\r\n      this.calendar = data.calendar;\r\n    }\r\n    \r\n    this.getScheduleList();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n \r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n\r\n  getScheduleList(){\r\n    this.calendarService.getScheduleList()\r\n    .subscribe(res=>{\r\n        this.scheduleList=res['data'];\r\n        console.log(\"this.ViewAssignList====\",this.ViewAssignList)\r\n    })\r\n  }\r\n}\r\n","<div class=\"addContainer\" >\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 p-l-10 font-17\">\r\n            {{'SCHEDULE.VIEWTITLE' | translate}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content style=\"overflow: hidden;\">\r\n      <div class=\"row\">\r\n        <ul class=\"list-group list-group-unbordered\">\r\n          <li class=\"list-group-item\">\r\n            <b>{{'SCHEDULE.LIST.SCHEDULE' | translate}} </b>\r\n            <div class=\"profile-desc-item float-end\">{{calendar.title}}</div>\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            <b>{{'SCHEDULE.LIST.START-DATE' | translate}} </b>\r\n            <div class=\"profile-desc-item float-end\"> {{calendar.startDate | date:\"dd-MM-yyyy hh:mm a\"}}</div>\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            <b>{{'SCHEDULE.LIST.END-DATE' | translate}} </b>\r\n            <div class=\"profile-desc-item float-end\"> {{calendar.endDate | date:\"dd-MM-yyyy hh:mm a\"}}</div>\r\n          </li>\r\n          </ul>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddScheduleComponent } from './add-schedule/add-schedule.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddScheduleComponent\r\n  },\r\n  // {\r\n  //   path: 'edit-package/:id',\r\n  //   component: EditScheduleComponent\r\n  // },\r\n  // {\r\n  //   path: 'about-student',\r\n  //   component: AboutStudentComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ScheduleRoutingModule {}\r\n","import { formatDate } from '@angular/common';\r\nexport class Calendar {\r\n    id: number;\r\n    lead_time: string;\r\n    schedule_name: string;\r\n    schedule_owner:string;\r\n    schedule_view:string;\r\n    schedule_view_assignment:string;\r\n    startDate: string;\r\n    endDate: string;\r\n\r\n    constructor(calendar) {\r\n        {\r\n            this.id = calendar.id || this.getRandomID();\r\n            this.lead_time = calendar.lead_time || '';\r\n            this.schedule_name = calendar.schedule_name || '';\r\n            this.schedule_owner = calendar.schedule_owner || '';\r\n            this.schedule_view = calendar.schedule_view || '';\r\n            this.schedule_view_assignment = calendar.schedule_view_assignment || '';\r\n            this.startDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n            this.endDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n        }\r\n    }\r\n    public getRandomID(): string {\r\n        const S4 = () => {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return S4() + S4();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { ScheduleRoutingModule } from './schedule-routing.module';\r\nimport { ScheduleService } from './schedule.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { FullCalendarModule } from \"@fullcalendar/angular\";\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from \"ng-pick-datetime\";  \r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport { FormDialogComponent as calFormComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\n\r\nimport { AddScheduleComponent } from './add-schedule/add-schedule.component';\r\n\r\n\r\n\r\nFullCalendarModule.registerPlugins([\r\n  dayGridPlugin,\r\n  timeGridPlugin,\r\n  listPlugin,\r\n  interactionPlugin,\r\n]);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddScheduleComponent,calFormComponent\r\n  ],\r\n  imports: [NgxDatatableModule,MatChipsModule,\r\n    CKEditorModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    ScheduleRoutingModule,\r\n    MatProgressSpinnerModule,MatStepperModule,\r\n    NgxMaskModule,TranslateModule,\r\n    MatAutocompleteModule,\r\n    FullCalendarModule, OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n  ],\r\n  providers: [ScheduleService],\r\n})\r\nexport class ScheduleModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Calendar } from \"./schedule.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { environment } from '../../../environments/environment'\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ScheduleService {\r\n\r\n  private readonly API_URL = \"assets/data/calendar.json\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  dataChange: BehaviorSubject<Calendar[]> = new BehaviorSubject<Calendar[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private http: HttpClient) {}\r\n  get data(): Calendar[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  getAllCalendars(): Observable<Calendar[]> {\r\n    return this.http\r\n      .get<Calendar[]>(this.API_URL)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n\r\n  deleteCalendar(calendar: Calendar): void {\r\n    this.dialogData = calendar;\r\n  }\r\n  errorHandler(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n\r\n  getScheduleList(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getScheduleList`)\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  getScheduleDetailsForInstructor(client,authToken){\r\n    //this.dialogData = calendar;\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/instructor/getScheduleDetailsForInstructor`,{client,authToken})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  \r\n\r\n}\r\n"]}