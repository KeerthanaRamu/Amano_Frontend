{"version":3,"sources":["./src/app/su/client/client-list/client-list.component.ts","./src/app/su/client/client-list/client-list.component.html","./src/app/su/client/client-routing.module.ts","./src/app/su/client/client.module.ts","./src/app/su/client/client.service.ts"],"names":[],"mappings":"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","file":"src_app_su_client_client_module_ts-es2015.js","sourcesContent":["import { Component, OnInit,ViewChild } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ClientService } from '../client.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.sass']\n})\nexport class ClientListComponent implements OnInit {\n  data=[];\n  filteredData = [];\n  addClient:FormGroup;\n  editClient:FormGroup;\n  rowToDelete: any;\n  constructor(\n    private fb: FormBuilder,\n    private clientService:ClientService,\n    private modalService: NgbModal,\n    private toastrService: ToastrService,) { }\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ngOnInit(): void {\n    this.getClientList();\n    this.addClient = this.fb.group({\n      client_code: ['',Validators.required],\n      client_name: ['',Validators.required],\n      client_address: [''],\n      client_logo: [''],\n      contact_person:['',Validators.required],\n      contact_designation:['',Validators.required],\n      contact_mobileno:['',Validators.required],\n      contact_emailid:['',Validators.required]\n    });\n\n    this.editClient = this.fb.group({\n      id:[''],\n      client_code: ['',Validators.required],\n      client_name: ['',Validators.required],\n      client_address: [''],\n      client_logo: [''],\n      contact_person:['',Validators.required],\n      contact_designation:['',Validators.required],\n      contact_mobileno:['',Validators.required],\n      contact_emailid:['',Validators.required]\n    });\n  }\n\n  columns = [\n    { name: 'Client Code' },\n    { name: 'Client Name' },\n    { name: 'Address' },\n  ]; \n\n  getClientList(){\n    this.clientService.getClientList()\n    .subscribe(res=>{\n      console.log(\"client--------\",res);\n      this.data=res;\n      this.filteredData=res;\n    })\n  }\n\n  addRow(content) {\n    this.clientService.getClientCode()\n    .subscribe(res=>{\n      this.addClient.patchValue({\n        'client_code':res['clientCode']\n      })\n    })\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title',size:'lg' });\n  }\n\n  onFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.addClient.patchValue({\n          'client_logo':reader.result\n        })\n      }\n    }\n  }\n\n  setClientDetails(){\n    this.clientService.setClientDetails(this.addClient.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Created Successfully!!');\n        this.getClientList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size:'lg' });\n    this.editClient.patchValue({\n      id: row.id,\n      client_code: row.client_code,\n      client_name: row.client_name,\n      client_address: row.client_address,\n      client_logo: row.client_logo,\n      contact_person:row.contact_person,\n      contact_designation:row.contact_designation,\n      contact_mobileno:row.contact_mobileno,\n      contact_emailid:row.contact_emailid\n    });  \n  }\n\n  onFileChangeUpdate(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.editClient.patchValue({\n          'client_logo':reader.result\n        })\n      }\n    }\n  }\n\n  updateClientDetails(){\n    this.clientService.updateClientDetails(this.editClient.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Updated Successfully!!');\n        this.getClientList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n  \n  deleteRow(row,rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n    this.rowToDelete=row;\n  }\n\n  deleteClientDetails(){\n    this.clientService.deleteClientDetails(this.rowToDelete)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Deleted Successfully!!');\n        this.getClientList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  filterDatatable(event) {\n      // get the value of the key pressed and make it lowercase\n      const val = event.target.value.toLowerCase();\n      // get the amount of columns in the table\n      const colsAmt = this.columns.length;\n      // get the key names of each column in the dataset\n      const keys = Object.keys(this.filteredData[0]);\n      // assign filtered matches to the active datatable\n      this.data = this.filteredData.filter(function (item) {\n        // iterate through each row's column data\n        for (let i = 0; i < colsAmt; i++) {\n          // check for a match\n          if (\n            item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n            !val\n          ) {\n            // found match, return true to add to result set\n            return true;\n          }\n        }\n      });\n      // whenever the filter changes, always go back to the first page\n      this.table.offset = 0;\n  }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">All Clients</h4>\n                  </li>\n                  <!-- <li class=\"breadcrumb-item bcrumb-1\">\n                    <a routerLink=\"/admin/dashboard/main\">\n                      <i class=\"fas fa-home\"></i> Home</a>\n                  </li>\n                  <li class=\"breadcrumb-item bcrumb-2\">\n                    <a href=\"#\" onClick=\"return false;\">Clients</a>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <div class=\"card\">\n                <div class=\"body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                    <div class=\"ngxTableHeader\">\n                        <ul class=\"header-buttons-left ms-0 mb-0\">\n                        <li class=\"dropdown\">\n                            <h2>\n                            <strong>Clients</strong></h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </li>\n                        </ul>\n                        <ul class=\"header-buttons\">\n                        <li>\n                            <button mat-mini-fab color=\"primary\" (click)='addRow(addRecord)'>\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                        </li>\n                        </ul>\n                    </div>\n                    <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                        <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"client_logo\" [width]=\"100\">\n                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                            <td class=\"table-img padding-0\">\n                            <img width=\"40\" src=\"{{ value ? value : 'assets/images/nologo.png' }}\" />\n                            </td>\n                        </ng-template>\n                        </ngx-datatable-column>\n                        <ngx-datatable-column name=\"Company Code\" prop=\"client_code\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"Company Name\" prop=\"client_name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"Address\" prop=\"client_address\" [width]=\"200\"></ngx-datatable-column>\n                        <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\n                                        </ngx-datatable-column> -->\n                        <!-- action buttons -->\n                        <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editRow(row, rowIndex, editRecord)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteRow(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column>\n                    </ngx-datatable>\n                    <!-- Add Record Modal Window -->\n                    <ng-template #addRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                            <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                New Client</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form class=\"register-form\" [formGroup]=\"addClient\" (ngSubmit)=\"setClientDetails()\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Company Code</mat-label>\n                                    <input matInput formControlName=\"client_code\"  readonly required>\n                                    <mat-icon matSuffix>business</mat-icon>\n                                    <mat-error *ngIf=\"addClient.get('client_code').hasError('required')\">\n                                        Company Code is required\n                                    </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Company Name</mat-label>\n                                        <input matInput formControlName=\"client_name\" required>\n                                        <mat-icon matSuffix>business</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('client_name').hasError('required')\">\n                                            Company Name is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Name</mat-label>\n                                        <input matInput formControlName=\"contact_person\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_person').hasError('required')\">\n                                            Contact Person is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Designation</mat-label>\n                                        <input matInput formControlName=\"contact_designation\" required>\n                                        <mat-icon matSuffix>school</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_designation').hasError('required')\">\n                                            Contact Person Designation is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Mobile No</mat-label>\n                                        <input matInput formControlName=\"contact_mobileno\" required>\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_mobileno').hasError('required')\">\n                                            Contact Person Mobile No is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Email Id</mat-label>\n                                        <input matInput formControlName=\"contact_emailid\" required>\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_emailid').hasError('required')\">\n                                            Contact Person Email Id is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"Company Logo\" (change)=\"onFileChange($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Address</mat-label>\n                                    <textarea matInput formControlName=\"client_address\"></textarea>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                <button class=\"btn-space\" [disabled]=\"!addClient.valid\" mat-raised-button\n                                color=\"primary\">Submit</button>\n                                <button type=\"button\" mat-button data-dismiss=\"modal\">Cancel</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n                    <!-- Edit Record Modal Window -->\n                    <ng-template #editRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                Update Client</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form [formGroup]=\"editClient\" (ngSubmit)=\"updateClientDetails()\">\n                            <div class=\"input-field col s12 d-none\">\n                            <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Company Code</mat-label>\n                                    <input matInput formControlName=\"client_code\"  readonly required>\n                                    <mat-icon matSuffix>business</mat-icon>\n                                    <mat-error *ngIf=\"editClient.get('client_code').hasError('required')\">\n                                        Company Code is required\n                                    </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Company Name</mat-label>\n                                        <input matInput formControlName=\"client_name\" required>\n                                        <mat-icon matSuffix>business</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('client_name').hasError('required')\">\n                                            Company Name is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Name</mat-label>\n                                        <input matInput formControlName=\"contact_person\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_person').hasError('required')\">\n                                            Contact Person is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Designation</mat-label>\n                                        <input matInput formControlName=\"contact_designation\" required>\n                                        <mat-icon matSuffix>school</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_designation').hasError('required')\">\n                                            Contact Person Designation is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Mobile No</mat-label>\n                                        <input matInput formControlName=\"contact_mobileno\" required>\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_mobileno').hasError('required')\">\n                                            Contact Person Mobile No is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Email Id</mat-label>\n                                        <input matInput formControlName=\"contact_emailid\" required>\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_emailid').hasError('required')\">\n                                            Contact Person Email Id is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"Company Logo\" (change)=\"onFileChangeUpdate($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Address</mat-label>\n                                    <textarea matInput formControlName=\"client_address\"></textarea>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\">Update</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">Cancel</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n\n\n                    <ng-template #deleteRecord let-modal>\n                        <div class=\"modal-header deleteRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                Delete Client</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Are you sure?</p>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deleteClientDetails()\">Delete</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">Cancel</button>\n                            </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'client-list',\r\n    component: ClientListComponent,\r\n  },\r\n  // {\r\n  //   path: 'dashboard2',\r\n  //   component: Dashboard2Component,\r\n  // }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ClientRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport {ClientService} from '../client/client.service'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClientListComponent\r\n  ],  \r\n  imports: [\r\n    CommonModule,NgxDatatableModule,MatFormFieldModule,\r\n    ClientRoutingModule,FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,MatSnackBarModule,MatSelectModule,MaterialFileInputModule\r\n  ],\r\n  providers: [ClientService],\r\n})\r\nexport class ClientModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClientService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  getClientList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getClientList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getClientCode(){\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getClientCode`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  setClientDetails(clientData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/setClientDetails`,{clientData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateClientDetails(clientData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/updateClientDetails`,{clientData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteClientDetails(clientData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/deleteClientDetails`,{clientData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}