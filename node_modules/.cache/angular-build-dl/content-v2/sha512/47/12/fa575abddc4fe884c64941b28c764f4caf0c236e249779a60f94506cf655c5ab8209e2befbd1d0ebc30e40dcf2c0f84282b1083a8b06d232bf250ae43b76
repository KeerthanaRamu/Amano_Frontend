{"version":3,"sources":["webpack:///src/app/su/client/client-list/client-list.component.html","webpack:///src/app/su/client/client-list/client-list.component.ts","webpack:///src/app/su/client/client-routing.module.ts","webpack:///src/app/su/client/client.module.ts","webpack:///src/app/su/client/client.service.ts"],"names":["ClientListComponent","fb","clientService","modalService","toastrService","data","filteredData","columns","name","getClientList","addClient","group","client_code","Validators","client_name","client_address","client_logo","contact_person","contact_designation","contact_mobileno","contact_emailid","editClient","id","subscribe","res","console","log","content","getClientCode","patchValue","open","ariaLabelledBy","size","event","reader","FileReader","target","files","length","file","readAsDataURL","onload","result","setClientDetails","value","success","dismissAll","error","row","rowIndex","updateClientDetails","rowToDelete","deleteClientDetails","val","toLowerCase","colsAmt","keys","Object","filter","item","i","toString","indexOf","table","offset","DatatableComponent","filterDatatable","addRow","routes","path","component","ClientRoutingModule","RouterModule","ClientModule","ClientService","CommonModule","NgxDatatableModule","MatFormFieldModule","FormsModule","ReactiveFormsModule","NgxEchartsModule","echarts","PerfectScrollbarModule","MatIconModule","NgApexchartsModule","MatButtonModule","MatMenuModule","MatInputModule","MatSnackBarModule","MatSelectModule","MaterialFileInputModule","http","get","environment","pipe","map","clientData","post"],"mappings":"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","file":"src_app_su_client_client_module_ts-es5.js","sourcesContent":["<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">All Clients</h4>\n                  </li>\n                  <!-- <li class=\"breadcrumb-item bcrumb-1\">\n                    <a routerLink=\"/admin/dashboard/main\">\n                      <i class=\"fas fa-home\"></i> Home</a>\n                  </li>\n                  <li class=\"breadcrumb-item bcrumb-2\">\n                    <a href=\"#\" onClick=\"return false;\">Clients</a>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <div class=\"card\">\n                <div class=\"body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                    <div class=\"ngxTableHeader\">\n                        <ul class=\"header-buttons-left ms-0 mb-0\">\n                        <li class=\"dropdown\">\n                            <h2>\n                            <strong>Clients</strong></h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </li>\n                        </ul>\n                        <ul class=\"header-buttons\">\n                        <li>\n                            <button mat-mini-fab color=\"primary\" (click)='addRow(addRecord)'>\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                        </li>\n                        </ul>\n                    </div>\n                    <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                        <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"client_logo\" [width]=\"100\">\n                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                            <td class=\"table-img padding-0\">\n                            <img width=\"40\" src=\"{{ value ? value : 'assets/images/nologo.png' }}\" />\n                            </td>\n                        </ng-template>\n                        </ngx-datatable-column>\n                        <ngx-datatable-column name=\"Company Code\" prop=\"client_code\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"Company Name\" prop=\"client_name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"Address\" prop=\"client_address\" [width]=\"200\"></ngx-datatable-column>\n                        <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\n                                        </ngx-datatable-column> -->\n                        <!-- action buttons -->\n                        <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editRow(row, rowIndex, editRecord)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteRow(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column>\n                    </ngx-datatable>\n                    <!-- Add Record Modal Window -->\n                    <ng-template #addRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                            <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                New Client</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form class=\"register-form\" [formGroup]=\"addClient\" (ngSubmit)=\"setClientDetails()\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Company Code</mat-label>\n                                    <input matInput formControlName=\"client_code\"  readonly required>\n                                    <mat-icon matSuffix>business</mat-icon>\n                                    <mat-error *ngIf=\"addClient.get('client_code').hasError('required')\">\n                                        Company Code is required\n                                    </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Company Name</mat-label>\n                                        <input matInput formControlName=\"client_name\" required>\n                                        <mat-icon matSuffix>business</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('client_name').hasError('required')\">\n                                            Company Name is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Name</mat-label>\n                                        <input matInput formControlName=\"contact_person\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_person').hasError('required')\">\n                                            Contact Person is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Designation</mat-label>\n                                        <input matInput formControlName=\"contact_designation\" required>\n                                        <mat-icon matSuffix>school</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_designation').hasError('required')\">\n                                            Contact Person Designation is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Mobile No</mat-label>\n                                        <input matInput formControlName=\"contact_mobileno\" required>\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_mobileno').hasError('required')\">\n                                            Contact Person Mobile No is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Email Id</mat-label>\n                                        <input matInput formControlName=\"contact_emailid\" required>\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"addClient.get('contact_emailid').hasError('required')\">\n                                            Contact Person Email Id is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"Company Logo\" (change)=\"onFileChange($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Address</mat-label>\n                                    <textarea matInput formControlName=\"client_address\"></textarea>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                <button class=\"btn-space\" [disabled]=\"!addClient.valid\" mat-raised-button\n                                color=\"primary\">Submit</button>\n                                <button type=\"button\" mat-button data-dismiss=\"modal\">Cancel</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n                    <!-- Edit Record Modal Window -->\n                    <ng-template #editRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                Update Client</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form [formGroup]=\"editClient\" (ngSubmit)=\"updateClientDetails()\">\n                            <div class=\"input-field col s12 d-none\">\n                            <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Company Code</mat-label>\n                                    <input matInput formControlName=\"client_code\"  readonly required>\n                                    <mat-icon matSuffix>business</mat-icon>\n                                    <mat-error *ngIf=\"editClient.get('client_code').hasError('required')\">\n                                        Company Code is required\n                                    </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Company Name</mat-label>\n                                        <input matInput formControlName=\"client_name\" required>\n                                        <mat-icon matSuffix>business</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('client_name').hasError('required')\">\n                                            Company Name is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Name</mat-label>\n                                        <input matInput formControlName=\"contact_person\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_person').hasError('required')\">\n                                            Contact Person is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Designation</mat-label>\n                                        <input matInput formControlName=\"contact_designation\" required>\n                                        <mat-icon matSuffix>school</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_designation').hasError('required')\">\n                                            Contact Person Designation is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Mobile No</mat-label>\n                                        <input matInput formControlName=\"contact_mobileno\" required>\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_mobileno').hasError('required')\">\n                                            Contact Person Mobile No is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>Contact Person Email Id</mat-label>\n                                        <input matInput formControlName=\"contact_emailid\" required>\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"editClient.get('contact_emailid').hasError('required')\">\n                                            Contact Person Email Id is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"Company Logo\" (change)=\"onFileChangeUpdate($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                    <mat-label>Address</mat-label>\n                                    <textarea matInput formControlName=\"client_address\"></textarea>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\">Update</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">Cancel</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n\n\n                    <ng-template #deleteRecord let-modal>\n                        <div class=\"modal-header deleteRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                Delete Client</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Are you sure?</p>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deleteClientDetails()\">Delete</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">Cancel</button>\n                            </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ClientService } from '../client.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.sass']\n})\nexport class ClientListComponent implements OnInit {\n  data=[];\n  filteredData = [];\n  addClient:FormGroup;\n  editClient:FormGroup;\n  rowToDelete: any;\n  constructor(\n    private fb: FormBuilder,\n    private clientService:ClientService,\n    private modalService: NgbModal,\n    private toastrService: ToastrService,) { }\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ngOnInit(): void {\n    this.getClientList();\n    this.addClient = this.fb.group({\n      client_code: ['',Validators.required],\n      client_name: ['',Validators.required],\n      client_address: [''],\n      client_logo: [''],\n      contact_person:['',Validators.required],\n      contact_designation:['',Validators.required],\n      contact_mobileno:['',Validators.required],\n      contact_emailid:['',Validators.required]\n    });\n\n    this.editClient = this.fb.group({\n      id:[''],\n      client_code: ['',Validators.required],\n      client_name: ['',Validators.required],\n      client_address: [''],\n      client_logo: [''],\n      contact_person:['',Validators.required],\n      contact_designation:['',Validators.required],\n      contact_mobileno:['',Validators.required],\n      contact_emailid:['',Validators.required]\n    });\n  }\n\n  columns = [\n    { name: 'Client Code' },\n    { name: 'Client Name' },\n    { name: 'Address' },\n  ]; \n\n  getClientList(){\n    this.clientService.getClientList()\n    .subscribe(res=>{\n      console.log(\"client--------\",res);\n      this.data=res;\n      this.filteredData=res;\n    })\n  }\n\n  addRow(content) {\n    this.clientService.getClientCode()\n    .subscribe(res=>{\n      this.addClient.patchValue({\n        'client_code':res['clientCode']\n      })\n    })\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title',size:'lg' });\n  }\n\n  onFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.addClient.patchValue({\n          'client_logo':reader.result\n        })\n      }\n    }\n  }\n\n  setClientDetails(){\n    this.clientService.setClientDetails(this.addClient.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Created Successfully!!');\n        this.getClientList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size:'lg' });\n    this.editClient.patchValue({\n      id: row.id,\n      client_code: row.client_code,\n      client_name: row.client_name,\n      client_address: row.client_address,\n      client_logo: row.client_logo,\n      contact_person:row.contact_person,\n      contact_designation:row.contact_designation,\n      contact_mobileno:row.contact_mobileno,\n      contact_emailid:row.contact_emailid\n    });  \n  }\n\n  onFileChangeUpdate(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.editClient.patchValue({\n          'client_logo':reader.result\n        })\n      }\n    }\n  }\n\n  updateClientDetails(){\n    this.clientService.updateClientDetails(this.editClient.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Updated Successfully!!');\n        this.getClientList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n  \n  deleteRow(row,rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n    this.rowToDelete=row;\n  }\n\n  deleteClientDetails(){\n    this.clientService.deleteClientDetails(this.rowToDelete)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Deleted Successfully!!');\n        this.getClientList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  filterDatatable(event) {\n      // get the value of the key pressed and make it lowercase\n      const val = event.target.value.toLowerCase();\n      // get the amount of columns in the table\n      const colsAmt = this.columns.length;\n      // get the key names of each column in the dataset\n      const keys = Object.keys(this.filteredData[0]);\n      // assign filtered matches to the active datatable\n      this.data = this.filteredData.filter(function (item) {\n        // iterate through each row's column data\n        for (let i = 0; i < colsAmt; i++) {\n          // check for a match\n          if (\n            item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n            !val\n          ) {\n            // found match, return true to add to result set\n            return true;\n          }\n        }\n      });\n      // whenever the filter changes, always go back to the first page\n      this.table.offset = 0;\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'client-list',\r\n    component: ClientListComponent,\r\n  },\r\n  // {\r\n  //   path: 'dashboard2',\r\n  //   component: Dashboard2Component,\r\n  // }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ClientRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport {ClientService} from '../client/client.service'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClientListComponent\r\n  ],  \r\n  imports: [\r\n    CommonModule,NgxDatatableModule,MatFormFieldModule,\r\n    ClientRoutingModule,FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,MatSnackBarModule,MatSelectModule,MaterialFileInputModule\r\n  ],\r\n  providers: [ClientService],\r\n})\r\nexport class ClientModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClientService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  getClientList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getClientList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getClientCode(){\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getClientCode`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  setClientDetails(clientData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/setClientDetails`,{clientData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateClientDetails(clientData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/updateClientDetails`,{clientData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteClientDetails(clientData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/deleteClientDetails`,{clientData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"]}