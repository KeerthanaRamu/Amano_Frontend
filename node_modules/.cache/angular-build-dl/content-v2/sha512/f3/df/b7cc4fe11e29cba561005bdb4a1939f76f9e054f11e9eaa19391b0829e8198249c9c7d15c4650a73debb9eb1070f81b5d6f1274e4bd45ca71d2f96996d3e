{"version":3,"sources":["webpack:///src/app/admin/students/about-student/about-student.component.html","webpack:///src/app/admin/students/about-student/about-student.component.ts","webpack:///src/app/admin/students/add-student/add-student.component.html","webpack:///src/app/admin/students/add-student/add-student.component.ts","webpack:///src/app/admin/students/add-student/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/admin/students/add-student/confirm-dialog/confirm-dialog.html","webpack:///src/app/admin/students/all-students/all-students.component.html","webpack:///src/app/admin/students/all-students/all-students.component.ts","webpack:///src/app/admin/students/edit-student/edit-student.component.html","webpack:///src/app/admin/students/edit-student/edit-student.component.ts","webpack:///src/app/admin/students/students-routing.module.ts","webpack:///src/app/admin/students/students.module.ts","webpack:///src/app/admin/students/students.service.ts"],"names":["AboutStudentComponent","cdRef","fb","studentService","languageService","dialog","modalService","toastrService","router","route","spinner","translateVal","localStorage","lang","studentId","snapshot","paramMap","get","loadData","languageChanged","subscribe","value","getParticularStudentDetails","sessionStorage","client","res","studentData","console","log","studentDocData","autocompleteObjectValidator","control","AddStudentComponent","isLinear","race","FormControl","validators","Validators","nricType","nationality","postalCode","existing_license","preference","placeBirth","hide","showOtherRace","validation_msgs","type","message","personalDetailsForm","group","name","nric_number","passport_number","gender","ic_address","address1","address2","city","state","email_address","mobile_number","other_race","date_of_birth","preferenceForm","emergency_name","emergency_number","user_name","password","expiry_date","documentForm","FormGroup","photo","photo_name","nric_front","nric_front_name","nric_rear","nric_rear_name","passport_front","passport_front_name","work_permit","work_permit_name","existing_license_front","existing_license_front_name","existing_license_rear","existing_license_rear_name","getNRICTypeList","getRaceList","getNationalityList","getExistingLicense","getPreferenceList","getPostalCode","getPlaceBirth","PersonalDetails","localPersonalData","JSON","parse","patchValue","setValue","PreferenceDetails","confirmPreferenceData","localPreferenceData","documentDetails","localDocumentData","photo_preview","nric_front_preview","nric_rear_preview","passport_front_preview","work_permit_preview","existing_license_front_preview","existing_license_rear_preview","confirmDocumentData","raceData","raceList","valueChanges","pipe","startWith","map","_filterRace","slice","nricTypeData","nricTypeList","_filterNRIC","postalCodeData","postalCodeList","postal_code","_filterPostalCode","nationalityData","nationalityList","country_name","_filterNationality","existingLicenseData","existingLicenseList","_filterExistingLicense","preferenceData","preferenceList","_filterPreference","placeBirthData","placeBirthList","_filterPlaceBirth","user","filterValue","toLowerCase","filter","option","includes","event","id","restrictList","indexOf","charAt","length","substr","checkNRICExistence","Date","error","checkPassportExistence","setItem","stringify","stepper","checkUsernameExistence","next","filetype","reader","FileReader","target","files","file","readAsDataURL","onload","result","showStudent","confirmPersonalData","open","ariaLabelledBy","setStudentDetails","currentUser","success","dismissAll","removeItem","reset","getICTypeChange","getNRICNumberChange","getPassportNumberChange","getNationalityChange","getPostalCodeChange","onSelectionChange","getPersonalDetails","getPreferenceDetails","onFileChangePhoto","saveStudentData","ConfirmDialogComponent","dialogRef","studentsService","close","confirmDelete","onNoClick","AllStudentsComponent","httpClient","snackBar","columns","data","filteredData","navigate","getStudentListPerClient","val","colsAmt","keys","Object","item","i","toString","table","offset","row","rowIndex","deleteRecord","rowToDelete","deleteStudentDetails","DatatableComponent","filterDatatable","addNewStudent","refresh","EditStudentComponent","personalDetailsEditForm","preferenceEditForm","documentEditForm","show","setTimeout","getStudentDetailToEdit","resObjStud","resObjDoc","address_nric","email_id","license_expiry_date","profile_img","work_permit_front","raceObj","elem","race_id","nricObj","nric_type","nationalityObj","nationality_id","postalObj","postalcode_id","placeBirthObj","placebirth_id","existsLicenseObj","existing_license_id","prefObj","prefered_lang_id","updateConfirmStudentDetails","routes","path","component","StudentsRoutingModule","RouterModule","StudentsModule","StudentService","NgxSpinnerModule","NgxDatatableModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MatMenuModule","MaterialFileInputModule","MatProgressSpinnerModule","MatStepperModule","NgxMaskModule","TranslateModule","MatAutocompleteModule","http","environment","post","personalDetailsFormData","preferenceFormData","documentFormData","authToken"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHkB;;AAAyC;;AAAI;;AAC7C;;;;;;AAiBQ;;AACE;;AAAG;;;;AAAiD;;AACpD;;AAAyC;;AAA4B;;AACvE;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAE3C;;AACI;;AAAG;;;;AAAqD;;AACxD;;AAAyC;;AAAgC;;AAC3E;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAuDvC;;AACE;;AAAG;;;;AAAsD;;AACzD;;AAAyC;;AAA2B;;AACtE;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAuCzD;;AAAyC;;AAAI;;AAC7C;;;;;;AAAA;;AAAA;;;;;;AAYM;;AACE;;AAAI;;;;AAA2D;;AAC/D;;AAAyC;;AAA+B;;AAC1E;;;;;;AAFM;;AAAA;;AACqC;;AAAA;;;;;;AAE3C;;AACE;;AAAG;;;;AAA6D;;AAChE;;AAAyC;;AAAiC;;AAC5E;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAE3C;;AACI;;AAAG;;;;AAAqD;;AACxD;;AAAyC;;AAA0B;;AACrE;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAE3C;;AACE;;AAAG;;;;AAAqD;;AACxD;;AAAyC;;AAAyB;;AACpE;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAE3C;;AACE;;AAAG;;;;AAA6D;;AAChE;;AAAyC;;AAAiC;;AAC5E;;;;;;AAFK;;AAAA;;AACsC;;AAAA;;;;;;AAajD;;AAAyC;;AAAY;;AACrD;;;;;;AAAA;;AAAA;;;;;;AAQM;;AACE;;AAAG;;;;AAAuD;;AAC1D;;AAAyC;;AAAyE;;AACpH;;;;;;AAFK;;AAAA;;AAC2C;;AAAA;;;;;;AAEhD;;AACE;;AAAI;;;;AAAsD;;AAC1D;;AAAyC;;AAAwE;;AACnH;;;;;;AAFM;;AAAA;;AAC0C;;AAAA;;;;;;AAEhD;;AACE;;AAAG;;;;AAA2D;;AAC9D;;AAAyC;;AAA6E;;AACxH;;;;;;AAFK;;AAAA;;AAC2C;;AAAA;;;;;;AAEhD;;AACI;;AAAG;;;;AAAwD;;AAC3D;;AAAyC;;AAAgF;;AAC3H;;;;;;AAFK;;AAAA;;AAC2C;;AAAA;;;;;;AAEhD;;AACE;;AAAG;;;;AAAmE;;AACtE;;AAAyC;;AAAoF;;AAC/H;;;;;;AAFK;;AAAA;;AAC2C;;AAAA;;;;;;AAEhD;;AACE;;AAAG;;;;AAAkE;;AACrE;;AAAyC;;AAAmF;;AAC9H;;;;;;AAFK;;AAAA;;AAC2C;;AAAA;;;;UChS/DA,sB;AAOX,wCACUC,KADV,EAC0CC,EAD1C,EAEUC,cAFV,EAEgDC,eAFhD,EAEuFC,MAFvF,EAGUC,YAHV,EAGyCC,aAHzC,EAG8EC,MAH9E,EAIUC,KAJV,EAIwCC,OAJxC,EAIkE;AAAA;;AAHxD,eAAAT,KAAA,GAAAA,KAAA;AAAgC,eAAAC,EAAA,GAAAA,EAAA;AAChC,eAAAC,cAAA,GAAAA,cAAA;AAAsC,eAAAC,eAAA,GAAAA,eAAA;AAAuC,eAAAC,MAAA,GAAAA,MAAA;AAC7E,eAAAC,YAAA,GAAAA,YAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAAqC,eAAAC,MAAA,GAAAA,MAAA;AACpE,eAAAC,KAAA,GAAAA,KAAA;AAA8B,eAAAC,OAAA,GAAAA,OAAA;AANxC,eAAAC,YAAA,GAAcC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAApD;AASE,eAAKC,SAAL,GAAe,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAf;AAEA;;;;iBAEF,oBAAQ;AAAA;;AACN,iBAAKC,QAAL;AACA,iBAAKd,eAAL,CAAqBe,eAArB,CAAqCC,SAArC,CAA+C,UAAAC,KAAK,EAAI;AACtD,mBAAI,CAACV,YAAL,GAAmBC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAzD;;AACA,mBAAI,CAACK,QAAL;AACD,aAHD;AAKD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKf,cAAL,CAAoBmB,2BAApB,CAAgD,KAAKR,SAArD,EAA+DS,cAAc,CAACC,MAA9E,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACZ,oBAAI,CAACC,WAAL,GAAiBD,GAAG,CAAC,UAAD,CAAH,CAAgB,CAAhB,CAAjB;AACAE,qBAAO,CAACC,GAAR,CAAY,MAAI,CAACF,WAAL,CAAiB,UAAQ,MAAI,CAACf,YAA9B,CAAZ;AACA,oBAAI,CAACe,WAAL,CAAiB,UAAjB,IAA6B,MAAI,CAACA,WAAL,CAAiB,UAAQ,MAAI,CAACf,YAA9B,CAA7B;AACA,oBAAI,CAACe,WAAL,CAAiB,YAAjB,IAA+B,MAAI,CAACA,WAAL,CAAiB,WAAS,MAAI,CAACf,YAA/B,CAA/B;AACA,oBAAI,CAACe,WAAL,CAAiB,MAAjB,IAAyB,MAAI,CAACA,WAAL,CAAiB,UAAQ,MAAI,CAACf,YAA9B,CAAzB;AACA,oBAAI,CAACe,WAAL,CAAiB,YAAjB,IAA+B,MAAI,CAACA,WAAL,CAAiB,UAAQ,MAAI,CAACf,YAA9B,CAA/B;AACA,oBAAI,CAACe,WAAL,CAAiB,kBAAjB,IAAqC,MAAI,CAACA,WAAL,CAAiB,eAAa,MAAI,CAACf,YAAnC,CAArC;AACA,oBAAI,CAACkB,cAAL,GAAoBJ,GAAG,CAAC,SAAD,CAAH,CAAe,CAAf,CAApB;AACH,aAVD;AAWD;;;;;;;yBAvCUzB,sB,EAAqB,6H,EAAA,wH,EAAA,8H,EAAA,4I,EAAA,gI,EAAA,iI,EAAA,sH,EAAA,oH,EAAA,4H,EAAA,2H;AAAA,O;;;cAArBA,sB;AAAqB,0C;AAAA,kB;AAAA,iB;AAAA,w2B;AAAA;AAAA;ADnBlC;;AACI;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAe;;AACxC;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAqB;;AAC5C;;AAAyB;;AAAyB;;AACpD;;AACA;;AACA;;AACE;;AACA;;AAAM;;AACR;;AACA;;AACE;;AACE;;AAA0B;;AAAK;;AAAI;;AAA8B;;AACrE;;AACA;;AACE;;AAIA;;AACE;;AAAI;;AAAuB;;AAC3B;;AAAO;;AAAM;;AACf;;AACA;;AAIF;;AACF;;AACF;;AACF;;AAyDF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAIA;;AACE;;AACE;;AACE;;AAAI;;AAAQ;;;;AAAgD;;AAAS;;AACvE;;AACA;;AACE;;AACI;;AACE;;AAAG;;;;AAAiD;;AACpD;;AAAyC;;AAAqB;;AAChE;;AACA;;AACE;;AAAI;;;;AAAoD;;AACxD;;AAAyC;;AAAyB;;AACpE;;AACA;;AAIA;;AAIE;;AACE;;AAAG;;;;AAAgD;;AACnD;;AAAyC;;;;AAAkD;;AAC7F;;AACA;;AACE;;AAAG;;;;AAAmD;;AACtD;;AAAyC;;AAAuB;;AAClE;;AACA;;AACI;;AAAG;;;;AAAuD;;AAC1D;;AAAyC;;AAA2B;;AACtE;;AACA;;AACE;;AAAG;;;;AAAwD;;AAC3D;;AAAyC;;AAA6B;;AACxE;;AACA;;AACE;;AAAG;;;;AAAuD;;AAC1D;;AAAyC;;AAA6B;;AACxE;;AACA;;AACE;;AAAG;;;;AAAqD;;AACxD;;AAAyC;;AAAyB;;AACpE;;AAEA;;AACE;;AAAG;;;;AAAqD;;AACxD;;AAAyC;;AAAyB;;AACpE;;AACA;;AACE;;AAAG;;;;AAAwD;;AAC3D;;AAAyC;;AAA4B;;AACvE;;AACA;;AACE;;AAAG;;;;AAAiD;;AACpD;;AAAyC;;AAAqB;;AAChE;;AACA;;AACE;;AAAG;;;;AAAkD;;AACrD;;AAAyC;;AAAsB;;AACjE;;AACA;;AACE;;AAAG;;;;AAAkD;;AACrD;;AAAyC;;AAAyB;;AACpE;;AACA;;AACE;;AAAG;;;;AAAqD;;AACxD;;AAAyC;;AAA8B;;AACzE;;AACA;;AACE;;AAAG;;;;AAAiD;;AACpD;;AAAyC;;AAAqB;;AAChE;;AACE;;AAKR;;AACF;;AACF;;AACF;;AACF;;AA4BF;;AAEA;;AACE;;AAIA;;AACE;;AACE;;AAAQ;;;;AAAgD;;AAAS;;AACrE;;AACA;;AACI;;AACI;;AACE;;AAAG;;;;AAAuD;;AAC1D;;AAAyC;;AAA2B;;AACtE;;AACA;;AAIA;;AAIA;;AAIE;;AAIA;;AAIA;;AACI;;AAAG;;;;AAAuD;;AAC1D;;AAAyC;;;;AAAwD;;AACnG;;AACN;;AACF;;AACF;;AACJ;;AAEA;;AACI;;AAIA;;AACE;;AACE;;AAAQ;;;;AAAgD;;AAAS;;AACrE;;AACA;;AACI;;AACI;;AAIA;;AAIA;;AAIA;;AAIE;;AAIA;;AAKJ;;AACF;;AACF;;AACJ;;AACJ;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA3SuC;;AAAA;;AACE;;AAAA;;AAEtB;;AAAA;;AAEH;;AAAA;;AACM;;AAAA;;AAI+B;;AAAA;;AAQ/B;;AAAA;;AAgFU;;AAAA;;AAKH;;AAAA;;AACsC;;AAAA;;AAGrC;;AAAA;;AACqC;;AAAA;;AAEd;;AAAA;;AAIA;;AAAA;;AAKtB;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGpC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAItC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAGtC;;AAAA;;AACsC;;AAAA;;AAEZ;;AAAA;;AA8CjC;;AAAA;;AAKC;;AAAA;;AACsC;;AAAA;;AAEd;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIE;;AAAA;;AAIA;;AAAA;;AAKtB;;AAAA;;AACsC;;AAAA;;AAczC;;AAAA;;AAIyB;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIE;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhRH;;;;;;AAAA;;;;;;AAOd;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASR;;AACI;;AACJ;;;;;;;;AAFwD;;AACpD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAoBV;;AACI;;;;AACR;;;;AADQ;;AAAA;;;;;;AAUJ;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAYN;;AACM;;;;AACR;;;;AADQ;;AAAA;;;;;;AAWA;;AACI;;AACJ;;;;;;;;AAF0D;;AACtD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAWlB;;AACI;;AACJ;;;;;;AAF2D;;AACvD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAUV;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAyBR;;AACI;;AACJ;;;;;;AAF0D;;AACtD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAaV;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASR;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASR;;AACI;;;;AACJ;;;;AADI;;AAAA;;;;;;AAWJ;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAWJ;;AACI;;AACJ;;;;;;;;AAFwD;;AACpD;;AAAA;;;;;;AAIA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAUd;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AALhB;;AACI;;AACI;;AAAW;;;;AAAqD;;AAChE;;AACA;;AAGJ;;AACJ;;;;;;AANmB;;AAAA;;AACkC;;AAAA;;AACjC;;AAAA;;;;;;AAcE;;;;;;AAAA;;;;;;AAOd;;AACI;;AACJ;;;;;;;;AAF8D;;AAC1D;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAyBN;;AACI;;AACJ;;;;;;;;AAFmE;;AAC/D;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAUd;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAoBR;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAYR;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AARpB;;AACI;;AACI;;AACI;;AAAW;;;;AAAsD;;AACjE;;AACA;;AACA;;AACA;;AAGJ;;AACJ;;AACJ;;;;;;;;AATuB;;AAAA;;AACK;;AAAA,0FAAyB,UAAzB,EAAyB,8BAAzB;;AACiB;;AAAA;;AAErB;;AAAA;;;;;;AAeE;;;;;;AAAA;;;;;;AAKV;;;;;;AAAK;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASZ;;;;;;AAAK;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASZ;;;;;;AAAK;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAYZ;;;;;;AAAK;;;;;;AAUL;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAQZ;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAQhB;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAUL;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAWZ;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAsDpC;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAuC;;AAAO;;AAC9J;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAiBhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAgC;;AAAO;;AACvJ;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAEhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAgC;;AAAO;;AACvJ;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAoBhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAuD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC1J;;;;;;AADyC;;AAAA;;AAAwE;;AAAA;;;;;;AAK7G;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC5J;;;;;;AAD0C;;AAAA;;AAAyE;;AAAA;;;;;;AAEnH;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAA4D;;AAAI;;AAAO;;AAAM;;AAAwC;;AAAO;;AACtK;;;;;;AAD0C;;AAAA;;AAA6E;;AAAA;;;;;;AAEvH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAA8D;;AAAI;;AAAO;;AAAM;;AAA0C;;AAAO;;AACzK;;;;;;AADyC;;AAAA;;AAA+E;;AAAA;;;;;;AAExH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAmC;;AAAO;;AAC1J;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAEhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AACzJ;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAEhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAA8D;;AAAI;;AAAO;;AAAM;;AAAwC;;AAAO;;AACvK;;;;;;AADyC;;AAAA;;AAA+E;;AAAA;;;;;;AAExH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAwD;;AAAI;;AAAO;;AAAM;;;;AAAyD;;AAAO;;AAClL;;;;;;AADyC;;AAAA;;AAAyE;;AAAA;;;;;;AAKlH;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAA6C;;AAAO;;AAClK;;;;;;AAD0C;;AAAA;;AAAoE;;AAAA;;;;;;AAE9G;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAAkD;;AAAO;;AAC5K;;;;;;AAD0C;;AAAA;;AAAyE;;AAAA;;;;;;AAEnH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAuD;;AAAI;;AAAO;;AAAM;;AAAiD;;AAAO;;AACzK;;;;;;AADyC;;AAAA;;AAAwE;;AAAA;;;;;;AAEjH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAA2D;;AAAK;;AAAO;;AAAM;;AAAsD;;AAAO;;AACnL;;;;;;AADyC;;AAAA;;AAA6E;;AAAA;;;;;;AAEtH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAyD;;AAAI;;AAAO;;AAAM;;AAAmD;;AAAO;;AAC7K;;;;;;AADyC;;AAAA;;AAA0E;;AAAA;;;;;;AAEnH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAoE;;AAAI;;AAAO;;AAAM;;AAA8D;;AAAO;;AACnM;;;;;;AADyC;;AAAA;;AAAqF;;AAAA;;;;;;AAE9H;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAmE;;AAAI;;AAAO;;AAAM;;AAA6D;;AAAO;;AACjM;;;;;;AADyC;;AAAA;;AAAoF;;AAAA;;;;;;;;AAnH7I;;AACA;;AAAgD;;AAC5C;;AACI;;AACI;;;;AAAmD;;AAC3D;;AACA;;AACJ;;AACA;;AAAuD;AAAA;;AAAA;AAAA,mBAAS,kBAAc,aAAd,CAAT;AAAqC,WAArC;;AACnD;;AAAyB;;AAA0B;;AAAK;;AAAI;;AAChE;;AACA;;AACA;;AACI;;AAA8B;;;;AAAgD;;AAC1E;;AACI;;AACI;;AAAG;;AAAgC;;AAAG;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAA4B;;AAAO;;AACjJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAAqD;;AAAI;;AAAO;;AAAM;;AAAgC;;AAAO;;AACvJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAkD;;AAAI;;AAAO;;AAAM;;AAAmC;;AAAO;;AACtJ;;AACA;;AAGA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAiD;;AAAI;;AAAO;;AAAM;;;;AAAyD;;AAAO;;AAC3K;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAoD;;AAAI;;AAAO;;AAAM;;AAA8B;;AAAO;;AACnJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC3J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAyD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC5J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC3J;;AACA;;AAGA;;AAGA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAyD;;AAAI;;AAAO;;AAAM;;AAAgC;;AAAO;;AAC1J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAkD;;AAAI;;AAAO;;AAAM;;AAA4B;;AAAO;;AAC/I;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAA6B;;AAAO;;AACjJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAAqC;;AAAO;;AACzJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAqC;;AAAO;;AAC5J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAkD;;AAAI;;AAAQ;;AAAM;;AAA4B;;AAAO;;AAChJ;;AACA;;AAGJ;;AACA;;AAA8B;;;;AAAgD;;AAC1E;;AACI;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGJ;;AACA;;AAA8B;;;;AAAgD;;AAC9E;;AACI;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;;;AAAmC;;AAChI;;AAAiC;AAAA;;AAAA;AAAA,mBAAS,iBAAT;AAAsB,WAAtB;;AAAwB;;;;AAAmC;;AAChG;;AACA;;;;;;AAxHQ;;AAAA;;AASsB;;AAAA;;AAGoB;;AAAA;;AAAoE;;AAAA;;AAGpE;;AAAA;;AAAsE;;AAAA;;AAGvE;;AAAA;;AAAmE;;AAAA;;AAEvG;;AAAA;;AAIoC;;AAAA;;AAAkE;;AAAA;;AAGlE;;AAAA;;AAAqE;;AAAA;;AAGrE;;AAAA;;AAAyE;;AAAA;;AAGzE;;AAAA;;AAA0E;;AAAA;;AAG1E;;AAAA;;AAAyE;;AAAA;;AAE7G;;AAAA;;AAGA;;AAAA;;AAIoC;;AAAA;;AAA0E;;AAAA;;AAG1E;;AAAA;;AAAmE;;AAAA;;AAGnE;;AAAA;;AAAoE;;AAAA;;AAGpE;;AAAA;;AAAoE;;AAAA;;AAGpE;;AAAA;;AAAuE;;AAAA;;AAGvE;;AAAA;;AAAoE;;AAAA;;AAEvG;;AAAA;;AAIoB;;AAAA;;AAEjB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIqB;;AAAA;;AAErB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAOgF;;AAAA;;AACpC;;AAAA;;;;;;;;;;;ACnoBzE,eAAS8B,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACV,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAEU,OAAO,CAACV;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAUYW,oB;AA+EX,sCAAoB/B,KAApB,EAAoDC,EAApD,EACUC,cADV,EACgDC,eADhD,EACuFC,MADvF,EAEUC,YAFV,EAEyCC,aAFzC,EAEuE;AAAA;;AAFnD,eAAAN,KAAA,GAAAA,KAAA;AAAgC,eAAAC,EAAA,GAAAA,EAAA;AAC1C,eAAAC,cAAA,GAAAA,cAAA;AAAsC,eAAAC,eAAA,GAAAA,eAAA;AAAuC,eAAAC,MAAA,GAAAA,MAAA;AAC7E,eAAAC,YAAA,GAAAA,YAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AA/EzC,eAAA0B,QAAA,GAAW,KAAX;AAYA,eAAAC,IAAA,GAAO,IAAI,4CAAAC,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAP;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAAH,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAX;AACA,eAAAE,WAAA,GAAa,IAAI,4CAAAJ,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAb;AACA,eAAAG,UAAA,GAAY,IAAI,4CAAAL,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAZ;AACA,eAAAI,gBAAA,GAAkB,IAAI,4CAAAN,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B;AAAd,WAApB,CAAlB;AACA,eAAAY,UAAA,GAAW,IAAI,4CAAAP,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAX;AACA,eAAAM,UAAA,GAAW,IAAI,4CAAAR,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAX;AAuBA,eAAA1B,YAAA,GAAcC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAApD;AAEA,eAAA+B,IAAA,GAAO,IAAP;AACA,eAAAC,aAAA,GAAc,KAAd;AAEO,eAAAC,eAAA,GAAkB;AACvB,oBAAQ,CACN;AAAEC,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADM,EAEN;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFM,CADe;AAKvB,wBAAY,CACV;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADU,EAEV;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFU,CALW;AASvB,2BAAe,CACb;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADa,EAEb;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFa,CATQ;AAavB,0BAAc,CACZ;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADY,EAEZ;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFY,CAbS;AAiBvB,gCAAoB,CAClB;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADkB,CAjBG;AAoBvB,0BAAc,CACZ;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADY,EAEZ;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFY,CApBS;AAwBvB,0BAAc,CACZ;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADY,EAEZ;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFY;AAxBS,WAAlB;AAkCL,eAAKC,mBAAL,GAA2B,KAAK/C,EAAL,CAAQgD,KAAR,CAAc;AACvCC,gBAAI,EAAE,CAAC,EAAD,EAAI,CAAC,4CAAAd,UAAA,SAAD,CAAJ,CADiC;AAEvCe,uBAAW,EAAE,CAAC,EAAD,CAF0B;AAGvCC,2BAAe,EAAE,CAAC,EAAD,CAHsB;AAIvCC,kBAAM,EAAC,CAAC,EAAD,EAAK,4CAAAjB,UAAA,SAAL,CAJgC;AAKvCkB,sBAAU,EAAE,CAAC,EAAD,EAAK,4CAAAlB,UAAA,SAAL,CAL2B;AAMvCmB,oBAAQ,EAAE,CAAC,EAAD,CAN6B;AAOvCC,oBAAQ,EAAE,CAAC,EAAD,CAP6B;AAQvCC,gBAAI,EAAE,CAAC,EAAD,EAAK,4CAAArB,UAAA,SAAL,CARiC;AASvCsB,iBAAK,EAAE,CAAC,EAAD,EAAK,4CAAAtB,UAAA,SAAL,CATgC;AAUvCuB,yBAAa,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAvB,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAAL,CAVwB;AAWvCwB,yBAAa,EAAE,CAAC,EAAD,EAAK,4CAAAxB,UAAA,SAAL,CAXwB;AAYvCyB,sBAAU,EAAE,CAAC,EAAD,CAZ2B;AAavCC,yBAAa,EAAE,CAAC,EAAD,EAAK,4CAAA1B,UAAA,SAAL;AAbwB,WAAd,CAA3B;AAeA,eAAK2B,cAAL,GAAsB,KAAK9D,EAAL,CAAQgD,KAAR,CAAc;AAClCe,0BAAc,EAAE,CAAC,EAAD,CADkB;AAElCC,4BAAgB,EAAE,CAAC,EAAD,CAFgB;AAGlCC,qBAAS,EAAE,CAAC,EAAD,EAAK,4CAAA9B,UAAA,SAAL,CAHuB;AAIlC+B,oBAAQ,EAAE,CAAC,EAAD,EAAK,4CAAA/B,UAAA,SAAL,CAJwB;AAKlCgC,uBAAW,EAAC,CAAC,EAAD;AALsB,WAAd,CAAtB;AAOA,eAAKC,YAAL,GAAmB,IAAI,4CAAAC,SAAJ,CAAc;AAC/BC,iBAAK,EAAE,IAAI,4CAAArC,WAAJ,CAAgB,EAAhB,EAAmB,4CAAAE,UAAA,SAAnB,CADwB;AAE/BoC,sBAAU,EAAE,IAAI,4CAAAtC,WAAJ,CAAgB,EAAhB,EAAmB,4CAAAE,UAAA,SAAnB,CAFmB;AAG/BqC,sBAAU,EAAE,IAAI,4CAAAvC,WAAJ,CAAgB,EAAhB,CAHmB;AAI/BwC,2BAAe,EAAE,IAAI,4CAAAxC,WAAJ,CAAgB,EAAhB,CAJc;AAK/ByC,qBAAS,EAAE,IAAI,4CAAAzC,WAAJ,CAAgB,EAAhB,CALoB;AAM/B0C,0BAAc,EAAE,IAAI,4CAAA1C,WAAJ,CAAgB,EAAhB,CANe;AAO/B2C,0BAAc,EAAE,IAAI,4CAAA3C,WAAJ,CAAgB,EAAhB,CAPe;AAQ/B4C,+BAAmB,EAAE,IAAI,4CAAA5C,WAAJ,CAAgB,EAAhB,CARU;AAS/B6C,uBAAW,EAAE,IAAI,4CAAA7C,WAAJ,CAAgB,EAAhB,CATkB;AAU/B8C,4BAAgB,EAAE,IAAI,4CAAA9C,WAAJ,CAAgB,EAAhB,CAVa;AAW/B+C,kCAAsB,EAAE,IAAI,4CAAA/C,WAAJ,CAAgB,EAAhB,CAXO;AAY/BgD,uCAA2B,EAAE,IAAI,4CAAAhD,WAAJ,CAAgB,EAAhB,CAZE;AAa/BiD,iCAAqB,EAAE,IAAI,4CAAAjD,WAAJ,CAAgB,EAAhB,CAbQ;AAc/BkD,sCAA0B,EAAE,IAAI,4CAAAlD,WAAJ,CAAgB,EAAhB;AAdG,WAAd,CAAnB;AAgBD;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAKmD,eAAL;AACA,iBAAKC,WAAL;AACA,iBAAKC,kBAAL;AACA,iBAAKC,kBAAL;AACA,iBAAKC,iBAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,aAAL;AACA,iBAAKxF,eAAL,CAAqBe,eAArB,CAAqCC,SAArC,CAA+C,UAAAC,KAAK,EAAI;AACtD,oBAAI,CAACV,YAAL,GAAmBC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAzD;;AACA,oBAAI,CAACyE,eAAL;;AACA,oBAAI,CAACC,WAAL;;AACA,oBAAI,CAACC,kBAAL;;AACA,oBAAI,CAACC,kBAAL;;AACA,oBAAI,CAACC,iBAAL;;AACA,oBAAI,CAACE,aAAL;AACD,aARD;;AAUA,gBAAGhF,YAAY,CAACiF,eAAhB,EAAgC;AAC9B,kBAAIC,iBAAiB,GAACC,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAACiF,eAAxB,CAAtB;AACA,mBAAK5C,mBAAL,CAAyBgD,UAAzB,CAAoC;AAClC9C,oBAAI,EAAE2C,iBAAiB,CAAC3C,IADU;AAElCC,2BAAW,EAAE0C,iBAAiB,CAAC1C,WAFG;AAGlCC,+BAAe,EAAEyC,iBAAiB,CAACzC,eAHD;AAIlCC,sBAAM,EAACwC,iBAAiB,CAACxC,MAJS;AAKlCC,0BAAU,EAACuC,iBAAiB,CAACvC,UALK;AAMlCC,wBAAQ,EAAEsC,iBAAiB,CAACtC,QANM;AAOlCC,wBAAQ,EAAEqC,iBAAiB,CAACrC,QAPM;AAQlCC,oBAAI,EAAEoC,iBAAiB,CAACpC,IARU;AASlCC,qBAAK,EAAEmC,iBAAiB,CAACnC,KATS;AAUlCC,6BAAa,EAAEkC,iBAAiB,CAAClC,aAVC;AAWlCC,6BAAa,EAAEiC,iBAAiB,CAACjC,aAXC;AAYlCC,0BAAU,EAAEgC,iBAAiB,CAAChC,UAZI;AAalCC,6BAAa,EAAE+B,iBAAiB,CAAC/B;AAbC,eAApC;AAeD;;AAED,gBAAGnD,YAAY,CAACsB,IAAhB,EAAqB;AACpB,mBAAKA,IAAL,CAAUgE,QAAV,CAAmBH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAACsB,IAAxB,CAAnB;AACA;;AAED,gBAAGtB,YAAY,CAAC0B,QAAhB,EAAyB;AACvB,mBAAKA,QAAL,CAAc4D,QAAd,CAAuBH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC0B,QAAxB,CAAvB;AACA;;AAED,gBAAG1B,YAAY,CAAC2B,WAAhB,EAA4B;AAC3B,mBAAKA,WAAL,CAAiB2D,QAAjB,CAA0BH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC2B,WAAxB,CAA1B;AACA;;AAED,gBAAG3B,YAAY,CAAC+B,UAAhB,EAA2B;AAC1B,mBAAKA,UAAL,CAAgBuD,QAAhB,CAAyBH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC+B,UAAxB,CAAzB;AACA;;AAED,gBAAG/B,YAAY,CAAC4B,UAAhB,EAA2B;AAC1B,mBAAKA,UAAL,CAAgB0D,QAAhB,CAAyBH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC4B,UAAxB,CAAzB;AACA;;AAED,gBAAG5B,YAAY,CAACuF,iBAAhB,EAAkC;AACjC,mBAAKC,qBAAL,GAA2BL,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAACuF,iBAAxB,CAA3B;AACA,kBAAIE,mBAAmB,GAACN,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAACuF,iBAAxB,CAAxB;AACA,mBAAKnC,cAAL,CAAoBiC,UAApB,CAA+B;AAC7BhC,8BAAc,EAAEoC,mBAAmB,CAACpC,cADP;AAE7BC,gCAAgB,EAAEmC,mBAAmB,CAACnC,gBAFT;AAG7BC,yBAAS,EAAEkC,mBAAmB,CAAClC,SAHF;AAI7BC,wBAAQ,EAAEiC,mBAAmB,CAACjC,QAJD;AAK7BC,2BAAW,EAACgC,mBAAmB,CAAChC;AALH,eAA/B;AAOA;;AAED,gBAAGzD,YAAY,CAAC8B,UAAhB,EAA2B;AAC1B,mBAAKA,UAAL,CAAgBwD,QAAhB,CAAyBH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC8B,UAAxB,CAAzB;AACA;;AAED,gBAAG9B,YAAY,CAAC6B,gBAAhB,EAAiC;AAChC,mBAAKA,gBAAL,CAAsByD,QAAtB,CAA+BH,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC6B,gBAAxB,CAA/B;AACA;;AAED,gBAAG7B,YAAY,CAAC0F,eAAhB,EAAgC;AAC9B,kBAAIC,iBAAiB,GAACR,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC0F,eAAxB,CAAtB;AACA,mBAAKhC,YAAL,CAAkB2B,UAAlB,CAA6B;AAC5BzB,qBAAK,EAAE+B,iBAAiB,CAAC/B,KADG;AAE5BC,0BAAU,EAAE8B,iBAAiB,CAAC9B,UAFF;AAG5BC,0BAAU,EAAE6B,iBAAiB,CAAC7B,UAHF;AAI5BC,+BAAe,EAAE4B,iBAAiB,CAAC5B,eAJP;AAK5BC,yBAAS,EAAE2B,iBAAiB,CAAC3B,SALD;AAM5BC,8BAAc,EAAE0B,iBAAiB,CAAC1B,cANN;AAO5BC,8BAAc,EAAEyB,iBAAiB,CAACzB,cAPN;AAQ5BC,mCAAmB,EAAEwB,iBAAiB,CAACxB,mBARX;AAS5BC,2BAAW,EAAEuB,iBAAiB,CAACvB,WATH;AAU5BC,gCAAgB,EAAEsB,iBAAiB,CAACtB,gBAVR;AAW5BC,sCAAsB,EAAEqB,iBAAiB,CAACrB,sBAXd;AAY5BC,2CAA2B,EAAEoB,iBAAiB,CAACpB,2BAZnB;AAa5BC,qCAAqB,EAAEmB,iBAAiB,CAACnB,qBAbb;AAc5BC,0CAA0B,EAAEkB,iBAAiB,CAAClB;AAdlB,eAA7B;AAiBA,mBAAKmB,aAAL,GAAmBD,iBAAiB,CAAC/B,KAArC;AACA,mBAAKiC,kBAAL,GAAwBF,iBAAiB,CAAC7B,UAA1C;AACA,mBAAKgC,iBAAL,GAAuBH,iBAAiB,CAAC3B,SAAzC;AACA,mBAAK+B,sBAAL,GAA4BJ,iBAAiB,CAACzB,cAA9C;AACA,mBAAK8B,mBAAL,GAAyBL,iBAAiB,CAACvB,WAA3C;AACA,mBAAK6B,8BAAL,GAAqCN,iBAAiB,CAACrB,sBAAvD;AACA,mBAAK4B,6BAAL,GAAoCP,iBAAiB,CAACnB,qBAAtD;AACD;;AAEDzD,mBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqC,KAAKmF,mBAA1C;AAEJ;;;iBAED,uBAAW;AAAA;;AACT,iBAAKC,QAAL,GAAc,EAAd;AACA,iBAAK7G,cAAL,CAAoBoF,WAApB,GACGnE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,oBAAI,CAACuF,QAAL,GAAcvF,GAAd;AACAE,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,MAAI,CAACoF,QAArC;AACA,oBAAI,CAACC,QAAL,GAAgB,MAAI,CAAC/E,IAAL,CAAUgF,YAAV,CAAuBC,IAAvB,CACd,sCAAAC,SAAA,EAAU,EAAV,CADc,EAEd,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,MAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFc,EAGd,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,MAAI,CAACmE,WAAL,CAAiBnE,IAAjB,CAAH,GAA4B,MAAI,CAAC6D,QAAL,CAAcO,KAAd,EAArC;AAAA,eAAR,CAHc,CAAhB;AAKD,aATH;AAUD;;;iBAED,2BAAe;AAAA;;AACb,iBAAKC,YAAL,GAAkB,EAAlB;AACA,iBAAKrH,cAAL,CAAoBmF,eAApB,GACGlE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,oBAAI,CAAC+F,YAAL,GAAkB/F,GAAlB;AACA,oBAAI,CAACgG,YAAL,GAAoB,MAAI,CAACnF,QAAL,CAAc4E,YAAd,CAA2BC,IAA3B,CAClB,sCAAAC,SAAA,EAAU,EAAV,CADkB,EAElB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,MAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFkB,EAGlB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,MAAI,CAACuE,WAAL,CAAiBvE,IAAjB,CAAH,GAA4B,MAAI,CAACqE,YAAL,CAAkBD,KAAlB,EAArC;AAAA,eAAR,CAHkB,CAApB;AAKD,aARH;AASD;;;iBAED,yBAAa;AAAA;;AACX,iBAAKC,YAAL,GAAkB,EAAlB;AACA,iBAAKrH,cAAL,CAAoBwF,aAApB,GACGvE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,oBAAI,CAACkG,cAAL,GAAoBlG,GAApB;AACA,oBAAI,CAACmG,cAAL,GAAsB,MAAI,CAACpF,UAAL,CAAgB0E,YAAhB,CAA6BC,IAA7B,CACpB,sCAAAC,SAAA,EAAU,EAAV,CADoB,EAEpB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACwG,WAA/C;AAAA,eAAT,CAFoB,EAGpB,sCAAAR,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,MAAI,CAAC2E,iBAAL,CAAuB3E,IAAvB,CAAH,GAAkC,MAAI,CAACwE,cAAL,CAAoBJ,KAApB,EAA3C;AAAA,eAAR,CAHoB,CAAtB;AAKD,aARH;AASD;;;iBAED,8BAAkB;AAAA;;AAChB,iBAAKpH,cAAL,CAAoBqF,kBAApB,GACGpE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,oBAAI,CAACsG,eAAL,GAAqBtG,GAArB;AACA,oBAAI,CAACuG,eAAL,GAAuB,MAAI,CAACzF,WAAL,CAAiB2E,YAAjB,CAA8BC,IAA9B,CACrB,sCAAAC,SAAA,EAAU,EAAV,CADqB,EAErB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4G,YAA/C;AAAA,eAAT,CAFqB,EAGrB,sCAAAZ,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,MAAI,CAAC+E,kBAAL,CAAwB/E,IAAxB,CAAH,GAAmC,MAAI,CAAC4E,eAAL,CAAqBR,KAArB,EAA5C;AAAA,eAAR,CAHqB,CAAvB;AAKD,aARH;AASD;;;iBAED,8BAAkB;AAAA;;AAChB,iBAAKpH,cAAL,CAAoBsF,kBAApB,GACGrE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,oBAAI,CAAC0G,mBAAL,GAAyB1G,GAAzB;AACA,oBAAI,CAAC2G,mBAAL,GAA2B,MAAI,CAAC3F,gBAAL,CAAsByE,YAAtB,CAAmCC,IAAnC,CACzB,sCAAAC,SAAA,EAAU,EAAV,CADyB,EAEzB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,MAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFyB,EAGzB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,MAAI,CAACkF,sBAAL,CAA4BlF,IAA5B,CAAH,GAAuC,MAAI,CAACgF,mBAAL,CAAyBZ,KAAzB,EAAhD;AAAA,eAAR,CAHyB,CAA3B;AAKD,aARH;AASD;;;iBAED,6BAAiB;AAAA;;AACf,iBAAKpH,cAAL,CAAoBuF,iBAApB,GACGtE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,oBAAI,CAAC6G,cAAL,GAAoB7G,GAApB;AACA,oBAAI,CAAC8G,cAAL,GAAsB,MAAI,CAAC7F,UAAL,CAAgBwE,YAAhB,CAA6BC,IAA7B,CACpB,sCAAAC,SAAA,EAAU,EAAV,CADoB,EAEpB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,MAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFoB,EAGpB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,MAAI,CAACqF,iBAAL,CAAuBrF,IAAvB,CAAH,GAAkC,MAAI,CAACmF,cAAL,CAAoBf,KAApB,EAA3C;AAAA,eAAR,CAHoB,CAAtB;AAKD,aARH;AASD;;;iBAGD,yBAAa;AAAA;;AACX,iBAAKkB,cAAL,GAAoB,EAApB;AACA,iBAAKtI,cAAL,CAAoByF,aAApB,GACGxE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAACgH,cAAL,GAAoBhH,GAApB;AACA,qBAAI,CAACiH,cAAL,GAAsB,OAAI,CAAC/F,UAAL,CAAgBuE,YAAhB,CAA6BC,IAA7B,CACpB,sCAAAC,SAAA,EAAU,EAAV,CADoB,EAEpB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,OAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFoB,EAGpB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAACwF,iBAAL,CAAuBxF,IAAvB,CAAH,GAAkC,OAAI,CAACsF,cAAL,CAAoBlB,KAApB,EAA3C;AAAA,eAAR,CAHoB,CAAtB;AAKD,aARH;AASD;;;iBAED,mBAAUqB,IAAV,EAAc;AACZ,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,uBAAc+H,IAAd,EAAkB;AAChB,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,8BAAqB+H,IAArB,EAAyB;AACvB,mBAAOA,IAAI,IAAIA,IAAI,CAACX,YAAb,GAA4BW,IAAI,CAACX,YAAjC,GAAgD,EAAvD;AACD;;;iBAED,6BAAoBW,IAApB,EAAwB;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACf,WAAb,GAA2Be,IAAI,CAACf,WAAhC,GAA8C,EAArD;AACD;;;iBAED,kCAAyBe,IAAzB,EAA6B;AAC3B,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,6BAAoB+H,IAApB,EAAwB;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,6BAAoB+H,IAApB,EAAwB;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAEO,qBAAYsC,IAAZ,EAAwB;AAAA;;AAC9B,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAK9B,QAAL,CAAc+B,MAAd,CAAqB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAA3B,CAAP;AACD;;;iBAEO,qBAAY1F,IAAZ,EAAwB;AAAA;;AAC9B,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKtB,YAAL,CAAkBuB,MAAlB,CAAyB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAA/B,CAAP;AACD;;;iBAEO,4BAAmB1F,IAAnB,EAA+B;AACrC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKf,eAAL,CAAqBgB,MAArB,CAA4B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACf,YAAP,CAAoBa,WAApB,GAAkCG,QAAlC,CAA2CJ,WAA3C,CAAJ;AAAA,aAAlC,CAAP;AACD;;;iBAGO,2BAAkB1F,IAAlB,EAA8B;AACpC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKnB,cAAL,CAAoBoB,MAApB,CAA2B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACnB,WAAP,CAAmBiB,WAAnB,GAAiCG,QAAjC,CAA0CJ,WAA1C,CAAJ;AAAA,aAAjC,CAAP;AACD;;;iBAGO,gCAAuB1F,IAAvB,EAAmC;AAAA;;AACzC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKX,mBAAL,CAAyBY,MAAzB,CAAgC,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAAtC,CAAP;AACD;;;iBAGO,2BAAkB1F,IAAlB,EAA8B;AAAA;;AACpC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKR,cAAL,CAAoBS,MAApB,CAA2B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAAjC,CAAP;AACD;;;iBAGO,2BAAkB1F,IAAlB,EAA8B;AAAA;;AACpC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKL,cAAL,CAAoBM,MAApB,CAA2B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAAjC,CAAP;AACD;;;iBAGD,2BAAkBK,KAAlB,EAAuB;AACrBvH,mBAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCsH,KAAK,CAACF,MAAN,CAAa3H,KAArD;;AACA,gBAAG6H,KAAK,CAACF,MAAN,CAAa3H,KAAb,CAAmB8H,EAAnB,KAA0B,CAA7B,EAA+B;AAC7B,mBAAKtG,aAAL,GAAmB,IAAnB;AACD,aAFD,MAEK;AACH,mBAAKA,aAAL,GAAmB,KAAnB;AACD;AACF;;;iBAED,2BAAe;AACblB,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAKqB,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAjD,EAA6D,KAAKd,QAAlE;AACA,gBAAM8G,YAAY,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB,CAFa,CAGb;;AACA,gBAAGA,YAAY,CAACC,OAAb,CAAqB,KAAK/G,QAAL,CAAcjB,KAAd,CAAoB8H,EAAzC,KAAgD,CAAnD,EAAqD;AACnD,kBAAI,KAAKlG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAA/B,CAA2CkG,MAA3C,CAAkD,KAAKrG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAA/B,CAA2CmG,MAA3C,GAAkD,CAApG,CAAD,GAA2G,CAA3G,IAAgH,CAAnH,EAAqH;AACnH,qBAAKtG,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAC3C,wBAAM,EAAC;AAAR,iBAApC;AACD,eAFD,MAEK;AACH,qBAAKL,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAC3C,wBAAM,EAAC;AAAR,iBAApC;AACD;AACF,aAND,MAMK;AACH,mBAAKL,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAC3C,sBAAM,EAAC;AAAR,eAApC;AACD;AACF;;;iBAED,+BAAmB;AAAA;;AACjB3B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,KAAKqB,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,CAAlB;AACA,iBAAKrJ,cAAL,CAAoBsJ,kBAApB,CAAuC,KAAKxG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAtE,EAAkF7B,cAAc,CAACC,MAAjG,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,KAApB,EAA0B;AACxBE,uBAAO,CAACC,GAAR,CAAa,OAAI,CAACqB,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,IAAyD,GAAzD,GAA8D,OAAI,CAACvG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,CAA7D,GAAsH,GAAtH,GAA2H,OAAI,CAACvG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,CAAtI;;AACA,uBAAI,CAACvG,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAClC,+BAAa,EAAC,IAAI2F,IAAJ,CAAU,OAAI,CAACzG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,IAAyD,GAAzD,GAA8D,OAAI,CAACvG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,CAA7D,GAAsH,GAAtH,GAA2H,OAAI,CAACvG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAAhC,CAA6CoG,MAA7C,CAAoD,CAApD,EAAsD,CAAtD,CAAnI;AAAf,iBAApC;;AACA,oBAAMJ,YAAY,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB,CAHwB,CAIxB;;AACA,oBAAGA,YAAY,CAACC,OAAb,CAAqB,OAAI,CAAC/G,QAAL,CAAcjB,KAAd,CAAoB8H,EAAzC,KAAgD,CAAnD,EAAqD;AACnD,sBAAI,OAAI,CAAClG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAA/B,CAA2CkG,MAA3C,CAAkD,OAAI,CAACrG,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAA/B,CAA2CmG,MAA3C,GAAkD,CAApG,CAAD,GAA2G,CAA3G,IAAgH,CAAnH,EAAqH;AACnH,2BAAI,CAACtG,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAC3C,4BAAM,EAAC;AAAR,qBAApC;AACD,mBAFD,MAEK;AACH,2BAAI,CAACL,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAC3C,4BAAM,EAAC;AAAR,qBAApC;AACD;AACF,iBAND,MAMK;AACH,yBAAI,CAACL,mBAAL,CAAyBgD,UAAzB,CAAoC;AAAC3C,0BAAM,EAAC;AAAR,mBAApC;AACD;AACF,eAdD,MAcK;AACH,uBAAI,CAAC/C,aAAL,CAAmBoJ,KAAnB,CAAyB,4BAAzB;;AACA,uBAAI,CAAC1G,mBAAL,CAAyB5B,KAAzB,CAA+B+B,WAA/B,GAA2C,EAA3C;AACD;AAEF,aArBD;AAuBD;;;iBAED,mCAAuB;AAAA;;AACrB,iBAAKjD,cAAL,CAAoByJ,sBAApB,CAA2C,KAAK3G,mBAAL,CAAyB5B,KAAzB,CAA+BgC,eAA1E,EAA0F9B,cAAc,CAACC,MAAzG,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,KAApB,EAA0B,CACzB,CADD,MACK;AACH,uBAAI,CAAClB,aAAL,CAAmBoJ,KAAnB,CAAyB,gCAAzB;;AACA,uBAAI,CAAC1G,mBAAL,CAAyB5B,KAAzB,CAA+BgC,eAA/B,GAA+C,EAA/C;AACD;AACF,aAPD;AAQD;;;iBAED,+BAAmB;AACjB1B,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKY,UAAL,CAAgBnB,KAA5C;AACA,iBAAK4B,mBAAL,CAAyBgD,UAAzB,CAAoC;AAClCvC,kBAAI,EAAC,KAAKlB,UAAL,CAAgBnB,KAAhB,CAAsBqC,IADO;AAElCC,mBAAK,EAAC,KAAKnB,UAAL,CAAgBnB,KAAhB,CAAsBsC;AAFM,aAApC;AAKD;;;iBAED,gCAAoB;AAClBhC,mBAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,KAAKW,WAAL,CAAiBlB,KAAvD;AAED;;;iBAED,8BAAkB;AAChBM,mBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0C,KAAKM,IAA/C;AACAtB,wBAAY,CAACiJ,OAAb,CAAqB,iBAArB,EAAuC9D,IAAI,CAAC+D,SAAL,CAAe,KAAK7G,mBAAL,CAAyB5B,KAAxC,CAAvC;AACAT,wBAAY,CAACiJ,OAAb,CAAqB,MAArB,EAA4B9D,IAAI,CAAC+D,SAAL,CAAe,KAAK5H,IAAL,CAAUb,KAAzB,CAA5B;AACAT,wBAAY,CAACiJ,OAAb,CAAqB,UAArB,EAAgC9D,IAAI,CAAC+D,SAAL,CAAe,KAAKxH,QAAL,CAAcjB,KAA7B,CAAhC;AACAT,wBAAY,CAACiJ,OAAb,CAAqB,aAArB,EAAmC9D,IAAI,CAAC+D,SAAL,CAAe,KAAKvH,WAAL,CAAiBlB,KAAhC,CAAnC;AACAT,wBAAY,CAACiJ,OAAb,CAAqB,YAArB,EAAkC9D,IAAI,CAAC+D,SAAL,CAAe,KAAKtH,UAAL,CAAgBnB,KAA/B,CAAlC;AACAT,wBAAY,CAACiJ,OAAb,CAAqB,YAArB,EAAkC9D,IAAI,CAAC+D,SAAL,CAAe,KAAKnH,UAAL,CAAgBtB,KAA/B,CAAlC;AACD;;;iBAED,8BAAqB0I,OAArB,EAAwC;AAAA;;AACtCpI,mBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0C,KAAKM,IAA/C;AACA,iBAAK/B,cAAL,CAAoB6J,sBAApB,CAA2C,KAAKhG,cAAL,CAAoB3C,KAApB,CAA0B8C,SAArE,EAA+E5C,cAAc,CAACC,MAA9F,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,KAApB,EAA0B;AACxBb,4BAAY,CAACiJ,OAAb,CAAqB,mBAArB,EAAyC9D,IAAI,CAAC+D,SAAL,CAAe,OAAI,CAAC9F,cAAL,CAAoB3C,KAAnC,CAAzC;AACAT,4BAAY,CAACiJ,OAAb,CAAqB,YAArB,EAAkC9D,IAAI,CAAC+D,SAAL,CAAe,OAAI,CAACpH,UAAL,CAAgBrB,KAA/B,CAAlC;AACAT,4BAAY,CAACiJ,OAAb,CAAqB,kBAArB,EAAwC9D,IAAI,CAAC+D,SAAL,CAAe,OAAI,CAACrH,gBAAL,CAAsBpB,KAArC,CAAxC;AACA0I,uBAAO,CAACE,IAAR;AACD,eALD,MAKK;AACH,uBAAI,CAAC1J,aAAL,CAAmBoJ,KAAnB,CAAyB,0BAAzB;;AACA,uBAAI,CAAC3F,cAAL,CAAoB3C,KAApB,CAA0B8C,SAA1B,GAAoC,EAApC;AACD;AACF,aAXD;AAYD;;;iBAGD,2BAAkB+E,KAAlB,EAAwBgB,QAAxB,EAAkC;AAAA;;AAChC,gBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACA,gBAAIlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,IAAsBpB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBf,MAA7C,EAAqD;AACnD,uDAAeL,KAAK,CAACmB,MAAN,CAAaC,KAA5B;AAAA,kBAAOC,IAAP;;AACAJ,oBAAM,CAACK,aAAP,CAAqBD,IAArB;;AACAJ,oBAAM,CAACM,MAAP,GAAgB,YAAM;AACpB9I,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,OAAI,CAACsI,QAAQ,GAAC,UAAV,CAAxB;AACA,uBAAI,CAACA,QAAQ,GAAC,UAAV,CAAJ,GAA0BC,MAAM,CAACO,MAAjC;;AACA,uBAAI,CAACpG,YAAL,CAAkB2B,UAAlB,qBACGiE,QADH,EACaC,MAAM,CAACO,MADpB;;AAGA/I,uBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmC,OAAI,CAAC0C,YAAxC;AACD,eAPD;AAQD;AACF;;;iBAGD,yBAAgBqG,WAAhB,EAA6B;AAC3B/J,wBAAY,CAACiJ,OAAb,CAAqB,iBAArB,EAAuC9D,IAAI,CAAC+D,SAAL,CAAe,KAAKxF,YAAL,CAAkBjD,KAAjC,CAAvC;AACA,iBAAK+E,qBAAL,GAA2BL,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAACuF,iBAAxB,CAA3B;AACA,iBAAKyE,mBAAL,GAAyB7E,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAACiF,eAAxB,CAAzB;AACA,iBAAKkB,mBAAL,GAAyBhB,IAAI,CAACC,KAAL,CAAWpF,YAAY,CAAC0F,eAAxB,CAAzB;AACA,iBAAKhG,YAAL,CAAkBuK,IAAlB,CAAuBF,WAAvB,EAAoC;AAAEG,4BAAc,EAAE;AAAlB,aAApC,EAL2B,CAM3B;AACA;AACA;AACA;AACD;;;iBAGD,oCAAwB;AAAA;;AACtB,iBAAK3K,cAAL,CAAoB4K,iBAApB,CAAsC,KAAK9H,mBAAL,CAAyB5B,KAA/D,EAAqE,KAAKa,IAAL,CAAUb,KAA/E,EAAqF,KAAKiB,QAAL,CAAcjB,KAAnG,EAAyG,KAAKkB,WAAL,CAAiBlB,KAA1H,EAAgI,KAAKmB,UAAL,CAAgBnB,KAAhJ,EAAsJ,KAAKoB,gBAAL,CAAsBpB,KAA5K,EAAkL,KAAKqB,UAAL,CAAgBrB,KAAlM,EAAwM,KAAKsB,UAAL,CAAgBtB,KAAxN,EAA8N,KAAK2C,cAAL,CAAoB3C,KAAlP,EAAwP,KAAKiD,YAAL,CAAkBjD,KAA1Q,EAAgRE,cAAc,CAACyJ,WAA/R,EAA2SzJ,cAAc,CAACC,MAA1T,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,SAApB,EAA8B;AAC5B,uBAAI,CAAClB,aAAL,CAAmB0K,OAAnB,CAA2B,2BAA3B;;AACA,uBAAI,CAAC3K,YAAL,CAAkB4K,UAAlB;;AACAtK,4BAAY,CAACuK,UAAb,CAAwB,iBAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,MAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,UAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,aAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,YAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,YAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,mBAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,YAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,kBAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,iBAAxB;;AACA,uBAAI,CAAClI,mBAAL,CAAyBmI,KAAzB;;AACA,uBAAI,CAACpH,cAAL,CAAoBoH,KAApB;;AACA,uBAAI,CAAC9G,YAAL,CAAkB8G,KAAlB;;AACA,uBAAI,CAAClJ,IAAL,CAAUgE,QAAV,CAAmB,EAAnB;;AACA,uBAAI,CAAC5D,QAAL,CAAc4D,QAAd,CAAuB,EAAvB;;AACA,uBAAI,CAAC3D,WAAL,CAAiB2D,QAAjB,CAA0B,EAA1B;;AACA,uBAAI,CAAC1D,UAAL,CAAgB0D,QAAhB,CAAyB,EAAzB;;AACA,uBAAI,CAACzD,gBAAL,CAAsByD,QAAtB,CAA+B,EAA/B;;AACA,uBAAI,CAACxD,UAAL,CAAgBwD,QAAhB,CAAyB,EAAzB;;AACA,uBAAI,CAACvD,UAAL,CAAgBuD,QAAhB,CAAyB,EAAzB;;AACA,uBAAI,CAACM,aAAL,GAAmB,EAAnB;AACA,uBAAI,CAACC,kBAAL,GAAwB,EAAxB;AACA,uBAAI,CAACC,iBAAL,GAAuB,EAAvB;AACA,uBAAI,CAACC,sBAAL,GAA4B,EAA5B;AACA,uBAAI,CAACC,mBAAL,GAAyB,EAAzB;AACA,uBAAI,CAACC,8BAAL,GAAqC,EAArC;AACA,uBAAI,CAACC,6BAAL,GAAmC,EAAnC;AACD;AAEF,aAlCD;AAmCD;;;;;;;yBA9iBU9E,oB,EAAmB,6H,EAAA,wH,EAAA,8H,EAAA,4I,EAAA,gI,EAAA,iI,EAAA,sH;AAAA,O;;;cAAnBA,oB;AAAmB,wC;AAAA,kB;AAAA,iB;AAAA,u6H;AAAA;AAAA;;;AD5BhC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuB;;;;AAA4C;;AACvE;;AASJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAQ;;;;AAA4C;;AACpD;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAiD;;AAC5D;;AACA;;AAAoB;;AAAI;;AACxB;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAmD;;AAC9D;;AACA;;AAAsE;AAAA,qBAAkB,IAAAqJ,eAAA,EAAlB;AAAmC,aAAnC;;AACtE;;;;AAGA;;AACA;;AAKF;;AACN;;AACA;;AACI;;AACI;;AAAW;;;;AAAgD;;AAC3D;;AAA2F;AAAA,qBAAQ,IAAAC,mBAAA,EAAR;AAA6B,aAA7B;;AAA3F;;AACA;;AAAoB;;AAAmB;;AAC3C;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAAkL;AAAA,qBAAQ,IAAAC,uBAAA,EAAR;AAAiC,aAAjC;;AAAlL;;AACA;;AAAoB;;AAAmB;;AACvC;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAgD;;AAC3D;;AACA;;AACA;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAmD;;AAC9D;;AACI;;AAAyB;;AAAI;;AAC7B;;AAA2B;;AAAM;;AACjC;;AAA2B;;AAAM;;AACnC;;AACA;;AAGN;;AACJ;;AACJ;;AACA;;AACQ;;AACQ;;AACI;;AAAW;;;;AAAuD;;AAClE;;AACA;;AACA;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACR;;AACI;;AACI;;AAAW;;;;AAAwD;;AACnE;;AACA;;AAAqF;AAAA,qBAAkB,IAAAC,oBAAA,EAAlB;AAAwC,aAAxC;;AACrF;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAuD;;AAClE;;AACA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAEJ;;AACA;;AACJ;;AACI;;AACI;;AAAW;;;;AAAwD;;AACnE;;AACA;;AAAwF;AAAA,qBAAkB,IAAAC,mBAAA,EAAlB;AAAuC,aAAvC;;AACxF;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAiD;;AAC5D;;AACA;;AAAoB;;AAAa;;AACjC;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAkD;;AAC7D;;AACA;;AAAoB;;AAAQ;;AAC5B;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAkD;;AAC7D;;AACA;;AAAoB;;AAAK;;AACzB;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAqD;;AAChE;;AACA;;AAAoB;;AAAK;;AACzB;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAiD;;AAGxD;;AACA;;AAA4E;AAAA,qBAAkB,IAAAC,iBAAA,QAAlB;AAA2C,aAA3C;;AAC5E;;;;AAGA;;AACA;;AAKR;;AACJ;;AACA;;AASJ;;AACA;;AACI;;AAC4I;AAAA,qBAAS,IAAAC,kBAAA,EAAT;AAA6B,aAA7B;;AAA+B;;;;AAAiC;;AAChN;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAuD;;AAClE;;AACA;;AACA;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAA0D;;AACrE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAA4D;;AACvE;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAA4D;;AACnE;;AACA;;AACA;;;;AAGA;;AACA;;AAKR;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAEI;;AAKA;AAAA;AAAA;;AAGF;;AAAU;;AAER;;AAAW;;AACf;;AAGJ;;AACJ;;AACJ;;AACA;;AAaA;;AACI;;AAAwE;;;;AAAiC;;AACzG;;AACwD;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,oBAAA,KAAT;AAAsC,aAAtC;;AAAwC;;;;AAAiC;;AACrI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACI;;AACE;;AACM;;AACI;;AACJ;;AACA;;AAII;;AACI;;AAAiH;AAAA,qBAAU,IAAAC,iBAAA,SAAyB,OAAzB,CAAV;AAA2C,aAA3C;;;;AACjH;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACJ;;AACL;;AACH;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAII;;AACI;;AAA2H;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,YAAzB,CAAV;AAAgD,aAAhD;;;;AAC3H;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAII;;AACI;;AAAyH;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,WAAzB,CAAV;AAA+C,aAA/C;;;;AACzH;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACA;;AACR;;AACJ;;AACJ;;AACA;;AAAiB;;AAAK;;AACtB;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAIA;;AACI;;AAAoI;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,gBAAzB,CAAV;AAAoD,aAApD;;;;AACpI;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACC;;AACL;;AACJ;;AACA;;AACI;;AACI;;AAGA;;AAII;;AACI;;AAA8H;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,aAAzB,CAAV;AAAiD,aAAjD;;;;AAC9H;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACF;;AACF;;AACR;;AACA;;AACI;;AACI;;AAGA;;AAIA;;AACI;;AAAoJ;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,wBAAzB,CAAV;AAA4D,aAA5D;;;;AACpJ;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AAAiB;;AAAK;;AACtB;;AACI;;AACI;;AACI;;AAGA;;AAII;;AACI;;AAAiJ;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,uBAAzB,CAAV;AAA2D,aAA3D;;;;AACjJ;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AACN;;AACA;;AAAwE;;;;AAAiC;;AACzG;;AAA0C;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,eAAA,MAAT;AAAqC,aAArC;;AAAwE;;;;AAAgC;;AAClJ;;AACJ;;AACA;;AACA;;AACJ;;AAQJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;;;;;;;;;;;;;;;;;;;AA5gBmD;;AAAA;;AAmBnB;;AAAA;;AAIgB;;AAAA;;AACd;;AAAA;;AACA;;AAAA;;AAKiB;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AACiB;;AAAA,kGAAwB,iBAAxB,EAAwB,GAAxB;;AACgB;;AAAA;;AACb;;AAAA;;AAIG;;AAAA;;AASvB;;AAAA;;AACyD;;AAAA;;AAQzD;;AAAA;;AACuC;;AAAA,yIAA+D,UAA/D,EAA+D,sDAA/D;;AAEtC;;AAAA;;AAOD;;AAAA;;AACK;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAOD;;AAAA;;AAMG;;AAAA;;AASK;;AAAA;;AACiB;;AAAA,oGAA0B,iBAA1B,EAA0B,IAA1B;;AACwB;;AAAA;;AACrB;;AAAA;;AAIG;;AAAA;;AAS/B;;AAAA;;AACiB;;AAAA,qGAA2B,iBAA3B,EAA2B,IAA3B;;AACoB;;AAAA;;AACjB;;AAAA;;AAIG;;AAAA;;AASvB;;AAAA;;AAEC;;AAAA;;AASD;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AACiB;;AAAA,oGAA0B,iBAA1B,EAA0B,IAA1B;;AACwB;;AAAA;;AACrB;;AAAA;;AAIG;;AAAA;;AAWvB;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AAGC;;AAAA;;AASD;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AAGqB;;AAAA,8FAAoB,iBAApB,EAAoB,IAApB;;AACkB;;AAAA;;AACX;;AAAA;;AAID;;AAAA;;AAO1B;;AAAA;;AAYnB;;AAAA;;AAA0K;;AAAA;;AAKzK;;AAAA;;AAKiB;;AAAA;;AACiB;;AAAA,oGAA0B,iBAA1B,EAA0B,IAA1B;;AACwB;;AAAA;;AACjB;;AAAA;;AAID;;AAAA;;AASvB;;AAAA;;AAMA;;AAAA;;AAQA;;AAAA;;AACqB;;AAAA,0GAAgC,iBAAhC,EAAgC,IAAhC;;AACqB;;AAAA;;AACd;;AAAA;;AAID;;AAAA;;AAS3B;;AAAA;;AAEC;;AAAA;;AAOD;;AAAA;;AAEP;;AAAA;;AAOA;;AAAA,qGAAmC,cAAnC,EAAmC,QAAnC;;AAEQ;;AAAA;;AAGA;;AAAA;;AAMN;;AAAA;;AAc0D;;AAAA;;AAExE;;AAAA;;AAAgG;;AAAA;;AAI9F;;AAAA;;AACA;;AAAA;;AAMwC;;AAAA;;AAE7B;;AAAA;;AAKoD;;AAAA;;AAGrC;;AAAA;;AAUmB;;AAAA;;AAElC;;AAAA;;AAKyD;;AAAA;;AAAuH;;AAGjK;;AAAA;;AAUkB;;AAAA;;AAEjC;;AAAA;;AAKwD;;AAAA;;AAAqH;;AAG9J;;AAAA;;AAauB;;AAAA;;AAEtC;;AAAA;;AAK0D;;AAAA;;AAA+H;;AAG9K;;AAAA;;AASI;;AAAA;;AAGf;;AAAA;;AAK2D;;AAAA;;AAAyH;;AAGrK;;AAAA;;AASA;;AAAA;;AAGf;;AAAA;;AAKkE;;AAAA;;AAA+I;;AAGtM;;AAAA;;AAYI;;AAAA;;AAGf;;AAAA;;AAKoE;;AAAA;;AAA6I;;AAGlM;;AAAA;;AASwC;;AAAA;;AACS;;AAAA;;AAAiC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEvfjIC,uB;AACX,yCACSC,SADT,EAEE;AACOC,uBAHT,EAGwC;AAAA;;AAF/B,eAAAD,SAAA,GAAAA,SAAA;AAEA,eAAAC,eAAA,GAAAA,eAAA;AACL;;;;iBACJ,qBAAS;AACP,iBAAKD,SAAL,CAAeE,KAAf;AACD;;;iBACD,yBAAa,CACX;AACD;;;;;;;yBAXUH,uB,EAAsB,mI,EAAA,8H;AAAA,O;;;cAAtBA,uB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,0S;AAAA;AAAA;ACRnC;;AACI;;AAAqB;;AAAa;;AAClC;;AACI;;AACI;;AACI;;AAAG;;AAAgC;;AAAM;;AAAO;;AACpD;;AACA;;AACI;;AAAG;;AAAgC;;AAAY;;AAAO;;AAC1D;;AACA;;AACI;;AACI;;AAA+B;;AAAQ;;AAC3C;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA4D;AAAA,qBAAS,IAAAI,aAAA,EAAT;AAAwB,aAAxB;;AACxD;;AACJ;;AACA;;AAAwB;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AACtE;;AACJ;;;;AAL6C;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6Cb;;AACA;;AACA;;;;;;AADgB;;AAAA;;;;;;;;AAgBhB;;AACA;;AAA4D;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAA8C;;AAC9C;;AACJ;;AACA;;AAA4D;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAA8C;;AAC9C;;AACJ;;AACA;;AAA8D;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1D;;AAAgD;;AAChD;;AACJ;;AACA;;;;;;;;AActB;;AACA;;AAAgD;;AAC5C;;AACI;;AACE;;;;AAAkD;;AACxD;;AACA;;AACJ;;AACA;;AAAuD;AAAA;;AAAA;AAAA,mBAAS,kBAAc,aAAd,CAAT;AAAqC,WAArC;;AACnD;;AAAyB;;AAA0B;;AAAK;;AAAI;;AAChE;;AACA;;AACA;;AACI;;AAAG;;;;AAAqC;;AACxC;;AACA;;AACI;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;;;AAAgC;;AACzH;;AAAiC;AAAA;;AAAA;AAAA,mBAAS,iBAAT;AAAsB,WAAtB;;AAAwB;;;;AAAmC;;AAChG;;AACA;;AACJ;;;;AAhBU;;AAAA;;AASH;;AAAA;;AAG0F;;AAAA;;AAChC;;AAAA;;;;UCvG9DC,qB;AAgBX,uCACSC,UADT,EAESjM,MAFT,EAGS4L,eAHT,EAIUM,QAJV,EAIwC/L,MAJxC,EAKUF,YALV,EAMUC,aANV,EAMqC;AAAA;;AAL5B,eAAA+L,UAAA,GAAAA,UAAA;AACA,eAAAjM,MAAA,GAAAA,MAAA;AACA,eAAA4L,eAAA,GAAAA,eAAA;AACC,eAAAM,QAAA,GAAAA,QAAA;AAA8B,eAAA/L,MAAA,GAAAA,MAAA;AAC9B,eAAAF,YAAA,GAAAA,YAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAnBV,eAAAiM,OAAA,GAAU,CACR;AAAErJ,gBAAI,EAAE;AAAR,WADQ,EAER;AAAEA,gBAAI,EAAE;AAAR,WAFQ,EAGR;AAAEA,gBAAI,EAAE;AAAR,WAHQ,EAIR;AAACA,gBAAI,EAAE;AAAP,WAJQ,EAKR;AAACA,gBAAI,EAAE;AAAP,WALQ,EAMR;AAACA,gBAAI,EAAE;AAAP,WANQ,CAAV;AAQA,eAAAsJ,IAAA,GAAK,EAAL;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAA/L,YAAA,GAAcC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAApD;AAWC;;;;iBAGD,oBAAW;AACT,iBAAKK,QAAL;AACD;;;iBACD,mBAAU;AACR,iBAAKA,QAAL;AACD;;;iBAED,yBAAgB;AACd,iBAAKV,MAAL,CAAYmM,QAAZ,CAAqB,CAAC,6BAAD,CAArB;AACD;;;iBAEM,oBAAW;AAAA;;AACd,iBAAKV,eAAL,CAAqBW,uBAArB,CAA6CrL,cAAc,CAACC,MAA5D,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,qBAAI,CAACgL,IAAL,GAAUhL,GAAG,CAAC,MAAD,CAAb;AACA,qBAAI,CAACiL,YAAL,GAAkBjL,GAAG,CAAC,MAAD,CAArB;AAED,aALD;AAMH;;;iBAED,yBAAgByH,KAAhB,EAAuB;AACrB;AACA,gBAAM2D,GAAG,GAAG3D,KAAK,CAACmB,MAAN,CAAahJ,KAAb,CAAmByH,WAAnB,EAAZ,CAFqB,CAGrB;;AACA,gBAAMgE,OAAO,GAAG,KAAKN,OAAL,CAAajD,MAA7B,CAJqB,CAKrB;;AACA,gBAAMwD,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKL,YAAL,CAAkB,CAAlB,CAAZ,CAAb,CANqB,CAOrB;;AACA,iBAAKD,IAAL,GAAY,KAAKC,YAAL,CAAkB3D,MAAlB,CAAyB,UAAUkE,IAAV,EAAgB;AACnD;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAApB,EAA6BI,CAAC,EAA9B,EAAkC;AAChC;AACA,oBACED,IAAI,CAACF,IAAI,CAACG,CAAD,CAAL,CAAJ,CAAcC,QAAd,GAAyBrE,WAAzB,GAAuCO,OAAvC,CAA+CwD,GAA/C,MAAwD,CAAC,CAAzD,IACA,CAACA,GAFH,EAGE;AACA;AACA,yBAAO,IAAP;AACD;AACF;AACF,aAZW,CAAZ,CARqB,CAqBrB;;AACA,iBAAKO,KAAL,CAAWC,MAAX,GAAoB,CAApB;AACD;;;iBAED,qBAAYC,GAAZ,EAAiBC,QAAjB,EAAyB;AACvB5L,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB0L,GAAvB;AACA,iBAAK9M,MAAL,CAAYmM,QAAZ,CAAqB,CAAC,8BAAD,EAAgCW,GAAG,CAACnE,EAApC,CAArB;AACD;;;iBAED,uBAAcmE,GAAd,EAAmBC,QAAnB,EAA6BC,YAA7B,EAAyC;AACvC,iBAAKlN,YAAL,CAAkBuK,IAAlB,CAAuB2C,YAAvB,EAAqC;AAAE1C,4BAAc,EAAE;AAAlB,aAArC;AACA,iBAAK2C,WAAL,GAAiBH,GAAjB;AACD;;;iBAED,gCAAoB;AAAA;;AAClB,iBAAKrB,eAAL,CAAqByB,oBAArB,CAA0C,KAAKD,WAA/C,EAA2DlM,cAAc,CAACyJ,WAA1E,EAAsFzJ,cAAc,CAACC,MAArG,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,SAApB,EAA8B;AAC5B,uBAAI,CAAClB,aAAL,CAAmB0K,OAAnB,CAA2B,yBAA3B;;AACA,uBAAI,CAAC3K,YAAL,CAAkB4K,UAAlB;;AACA,uBAAI,CAAChK,QAAL;AACD;AACF,aAPD;AASD;;;iBAED,qBAAYoM,GAAZ,EAAiBC,QAAjB,EAAyB;AACvB,iBAAK/M,MAAL,CAAYmM,QAAZ,CAAqB,CAAC,+BAAD,EAAiCW,GAAG,CAACnE,EAArC,CAArB;AACD;;;;;;;yBAhGUkD,qB,EAAoB,6H,EAAA,gI,EAAA,8H,EAAA,qI,EAAA,oH,EAAA,iI,EAAA,sH;AAAA,O;;;cAApBA,qB;AAAoB,yC;AAAA;AAAA;sEAyBpB,qDAAAsB,kB,EAAoB,C;;;;;;;;;;;;;;AD9CjC;;AACQ;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;;;AAAgD;;AACzE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACM;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAQ;;;;AAAgD;;AAAS;;AACrE;;AACA;;AACI;;AAA0B;;AAAsC;;AAAM;;AAAI;;AAC1E;;AACA;AAAA,qBAAS,IAAAC,eAAA,QAAT;AAAgC,aAAhC;;AADA;;AAEJ;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAqC;AAAA,qBAAS,IAAAC,aAAA,EAAT;AAAwB,aAAxB;;AACnC;;AAA4B;;AAAG;;AACjC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqC;AAAA,qBAAS,IAAAC,OAAA,EAAT;AAAkB,aAAlB;;AACnC;;AAA4B;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAGA;;AACA;;AAKA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAKA;;;;AACA;;AAgBA;;AACJ;;AACE;;AACF;;AACF;;AACF;;AACF;;AACN;;AACF;;AACF;;AACF;;AACA;;;;AAnGqC;;AAAA;;AAmBK;;AAAA;;AAgCmB;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,UAAb,EAAa,OAAb,EAAa,YAAb,EAAa,OAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,IAAb,EAAa,OAAb,EAAa,EAAb;;AAGgC;;AAAA;;AAOjD;;AAAA;;AAAoE;;AACpE;;AAAA;;AAA2E;;AAC3E;;AAAA;;AAAmF;;AACnF;;AAAA;;AAAwE;;AACxE;;AAAA;;AAAiF;;AACjF;;AAAA;;AAAyE;;AAKzE;;AAAA;;AAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpC/D;;;;;;AAAA;;;;;;AAOd;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASR;;AACI;;AACJ;;;;;;;;AAFwD;;AACpD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAoBV;;AACI;;;;AACR;;;;AADQ;;AAAA;;;;;;AAUJ;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAYN;;AACM;;;;AACR;;;;AADQ;;AAAA;;;;;;AAWA;;AACI;;AACJ;;;;;;;;AAF0D;;AACtD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAWlB;;AACI;;AACJ;;;;;;AAF2D;;AACvD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAUV;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAyBR;;AACI;;AACJ;;;;;;AAF0D;;AACtD;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAaV;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASR;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASR;;AACI;;AACJ;;;;;;AAUA;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAWJ;;AACI;;AACJ;;;;;;;;AAFwD;;AACpD;;AAAA;;;;;;AAIA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAUd;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AALhB;;AACI;;AACI;;AAAW;;;;AAAqD;;AAChE;;AACA;;AAGJ;;AACJ;;;;;;AANmB;;AAAA;;AACkC;;AAAA;;AACjC;;AAAA;;;;;;AAcE;;;;;;AAAA;;;;;;AAOd;;AACI;;AACJ;;;;;;;;AAF8D;;AAC1D;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAyBN;;AACI;;AACJ;;;;;;;;AAFmE;;AAC/D;;AAAA;;;;;;AAIA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFN;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAUd;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAoBR;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAYR;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AARpB;;AACI;;AACI;;AACI;;AAAW;;;;AAAsD;;AACjE;;AACA;;AACA;;AACA;;AAGJ;;AACJ;;AACJ;;;;;;;;AATuB;;AAAA;;AACK;;AAAA,0FAAyB,UAAzB,EAAyB,8BAAzB;;AACiB;;AAAA;;AAErB;;AAAA;;;;;;AAeE;;;;;;AAAA;;;;;;AAKV;;;;;;AAAK;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASZ;;;;;;AAAK;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AASZ;;;;;;AAAK;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAYZ;;;;;;AAAK;;;;;;AAUL;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAQZ;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAQhB;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAUL;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAWZ;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAUD;;AACQ;;;;AACR;;;;AADQ;;AAAA;;;;;;AAsDpC;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAiD;;AAAO;;AACxK;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAiBhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAA0C;;AAAO;;AACjK;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAEhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAA0C;;AAAO;;AACjK;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAoBhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAuD;;AAAI;;AAAO;;AAAM;;AAA4C;;AAAO;;AACpK;;;;;;AADyC;;AAAA;;AAAwE;;AAAA;;;;;;AAK7G;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC5J;;;;;;AAD0C;;AAAA;;AAAyE;;AAAA;;;;;;AAEnH;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAA4D;;AAAI;;AAAO;;AAAM;;AAA2C;;AAAO;;AACzK;;;;;;AAD0C;;AAAA;;AAA6E;;AAAA;;;;;;AAEvH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAA8D;;AAAI;;AAAO;;AAAM;;AAA6C;;AAAO;;AAC5K;;;;;;AADyC;;AAAA;;AAA+E;;AAAA;;;;;;AAExH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAsC;;AAAO;;AAC7J;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAEhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAAqC;;AAAO;;AAC5J;;;;;;AADyC;;AAAA;;AAAuE;;AAAA;;;;;;AAEhH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAA8D;;AAAI;;AAAO;;AAAM;;AAAwC;;AAAO;;AACvK;;;;;;AADyC;;AAAA;;AAA+E;;AAAA;;;;;;AAExH;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAwD;;AAAI;;AAAO;;AAAM;;;;AAA4D;;AAAO;;AACrL;;;;;;AADyC;;AAAA;;AAAyE;;AAAA;;;;;;;;AA3FlI;;AACA;;AAAgD;;AAC5C;;AACI;;AACI;;;;AAAmD;;AAC3D;;AACA;;AACJ;;AACA;;AAAuD;AAAA;;AAAA;AAAA,mBAAS,kBAAc,aAAd,CAAT;AAAqC,WAArC;;AACnD;;AAAyB;;AAA0B;;AAAK;;AAAI;;AAChE;;AACA;;AACA;;AACI;;AAA8B;;;;AAAgD;;AAC1E;;AACI;;AACI;;AAAG;;AAAgC;;AAAG;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAAsC;;AAAO;;AAC3J;;AACA;;AACI;;AAAG;;AAA+B;;AAAI;;;;AAAqD;;AAAI;;AAAO;;AAAM;;AAAgC;;AAAO;;AACvJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAkD;;AAAI;;AAAO;;AAAM;;AAA6C;;AAAO;;AAChK;;AACA;;AAGA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAiD;;AAAI;;AAAO;;AAAM;;;;AAAmE;;AAAO;;AACrL;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAoD;;AAAI;;AAAO;;AAAM;;AAAwC;;AAAO;;AAC7J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC3J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAyD;;AAAI;;AAAO;;AAAM;;AAAkC;;AAAO;;AAC5J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAwD;;AAAI;;AAAO;;AAAM;;AAA4C;;AAAO;;AACrK;;AACA;;AAGA;;AAGA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAyD;;AAAI;;AAAO;;AAAM;;AAAgC;;AAAO;;AAC1J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAkD;;AAAI;;AAAO;;AAAM;;AAAsC;;AAAO;;AACzJ;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAAuC;;AAAO;;AAC3J;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAmD;;AAAI;;AAAO;;AAAM;;AAA+C;;AAAO;;AACnK;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAsD;;AAAI;;AAAO;;AAAM;;AAA+C;;AAAO;;AACtK;;AACA;;AACI;;AAAG;;AAA+B;;AAAG;;;;AAAkD;;AAAI;;AAAQ;;AAAM;;AAA4B;;AAAO;;AAChJ;;AACA;;AAGJ;;AACA;;AAA8B;;;;AAAgD;;AAC1E;;AACI;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGJ;;AAEJ;;AACJ;;AACA;;AACI;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;;;AAAoC;;AACpI;;AAAiC;AAAA;;AAAA;AAAA,mBAAS,iBAAT;AAAsB,WAAtB;;AAAwB;;;;AAAmC;;AAChG;;AACA;;;;;;AAjGQ;;AAAA;;AASsB;;AAAA;;AAGoB;;AAAA;;AAAoE;;AAAA;;AAGpE;;AAAA;;AAAsE;;AAAA;;AAGvE;;AAAA;;AAAmE;;AAAA;;AAEvG;;AAAA;;AAIoC;;AAAA;;AAAkE;;AAAA;;AAGlE;;AAAA;;AAAqE;;AAAA;;AAGrE;;AAAA;;AAAyE;;AAAA;;AAGzE;;AAAA;;AAA0E;;AAAA;;AAG1E;;AAAA;;AAAyE;;AAAA;;AAE7G;;AAAA;;AAGA;;AAAA;;AAIoC;;AAAA;;AAA0E;;AAAA;;AAG1E;;AAAA;;AAAmE;;AAAA;;AAGnE;;AAAA;;AAAoE;;AAAA;;AAGpE;;AAAA;;AAAoE;;AAAA;;AAGpE;;AAAA;;AAAuE;;AAAA;;AAGvE;;AAAA;;AAAoE;;AAAA;;AAEvG;;AAAA;;AAIoB;;AAAA;;AAEjB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAQmF;;AAAA;;AACvC;;AAAA;;;;;;;;;;;AClnB7E,eAAShM,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACV,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAEU,OAAO,CAACV;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAQY0M,qB;AAgFX,uCAAoB9N,KAApB,EAAoDC,EAApD,EACUC,cADV,EACgDC,eADhD,EACuFC,MADvF,EAEUC,YAFV,EAEyCC,aAFzC,EAE8EC,MAF9E,EAGUC,KAHV,EAGwCC,OAHxC,EAGoE;AAAA;;AAAA;;AAHhD,eAAAT,KAAA,GAAAA,KAAA;AAAgC,eAAAC,EAAA,GAAAA,EAAA;AAC1C,eAAAC,cAAA,GAAAA,cAAA;AAAsC,eAAAC,eAAA,GAAAA,eAAA;AAAuC,eAAAC,MAAA,GAAAA,MAAA;AAC7E,eAAAC,YAAA,GAAAA,YAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAAqC,eAAAC,MAAA,GAAAA,MAAA;AACpE,eAAAC,KAAA,GAAAA,KAAA;AAA8B,eAAAC,OAAA,GAAAA,OAAA;AAjFxC,eAAAuB,QAAA,GAAW,KAAX;AAaA,eAAAC,IAAA,GAAO,IAAI,4CAAAC,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAP;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAAH,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAX;AACA,eAAAE,WAAA,GAAa,IAAI,4CAAAJ,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAb;AACA,eAAAG,UAAA,GAAY,IAAI,4CAAAL,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAZ;AACA,eAAAI,gBAAA,GAAkB,IAAI,4CAAAN,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B;AAAd,WAApB,CAAlB;AACA,eAAAY,UAAA,GAAW,IAAI,4CAAAP,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAX;AACA,eAAAM,UAAA,GAAW,IAAI,4CAAAR,WAAJ,CAAgB,EAAhB,EAAoB;AAAEC,sBAAU,EAAE,CAACN,2BAA2B,EAA5B,EAAgC,4CAAAO,UAAA,SAAhC;AAAd,WAApB,CAAX;AAuBA,eAAA1B,YAAA,GAAcC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAApD;AAEA,eAAA+B,IAAA,GAAO,IAAP;AACA,eAAAC,aAAA,GAAc,KAAd;AAEO,eAAAC,eAAA,GAAkB;AACvB,oBAAQ,CACN;AAAEC,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADM,EAEN;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFM,CADe;AAKvB,wBAAY,CACV;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADU,EAEV;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFU,CALW;AASvB,2BAAe,CACb;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADa,EAEb;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFa,CATQ;AAavB,0BAAc,CACZ;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADY,EAEZ;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFY,CAbS;AAiBvB,gCAAoB,CAClB;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADkB,CAjBG;AAoBvB,0BAAc,CACZ;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADY,EAEZ;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFY,CApBS;AAwBvB,0BAAc,CACZ;AAAED,kBAAI,EAAE,2BAAR;AAAqCC,qBAAO,EAAE;AAA9C,aADY,EAEZ;AAAED,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAFY;AAxBS,WAAlB;AAoCL,eAAKlC,SAAL,GAAe,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAf;AACA,eAAK+M,uBAAL,GAA+B,KAAK9N,EAAL,CAAQgD,KAAR,CAAc;AAC3CiG,cAAE,EAAC,CAAC,EAAD,CADwC;AAE3ChG,gBAAI,EAAE,CAAC,EAAD,EAAI,CAAC,4CAAAd,UAAA,SAAD,CAAJ,CAFqC;AAG3Ce,uBAAW,EAAE,CAAC,EAAD,CAH8B;AAI3CC,2BAAe,EAAE,CAAC,EAAD,CAJ0B;AAK3CC,kBAAM,EAAC,CAAC,EAAD,EAAK,4CAAAjB,UAAA,SAAL,CALoC;AAM3CkB,sBAAU,EAAE,CAAC,EAAD,EAAK,4CAAAlB,UAAA,SAAL,CAN+B;AAO3CmB,oBAAQ,EAAE,CAAC,EAAD,CAPiC;AAQ3CC,oBAAQ,EAAE,CAAC,EAAD,CARiC;AAS3CC,gBAAI,EAAE,CAAC,EAAD,EAAK,4CAAArB,UAAA,SAAL,CATqC;AAU3CsB,iBAAK,EAAE,CAAC,EAAD,EAAK,4CAAAtB,UAAA,SAAL,CAVoC;AAW3CuB,yBAAa,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAvB,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAAL,CAX4B;AAY3CwB,yBAAa,EAAE,CAAC,EAAD,EAAK,4CAAAxB,UAAA,SAAL,CAZ4B;AAa3CyB,sBAAU,EAAE,CAAC,EAAD,CAb+B;AAc3CC,yBAAa,EAAE,CAAC,EAAD,EAAK,4CAAA1B,UAAA,SAAL;AAd4B,WAAd,CAA/B;AAgBA,eAAK4L,kBAAL,GAA0B,KAAK/N,EAAL,CAAQgD,KAAR,CAAc;AACtCe,0BAAc,EAAE,CAAC,EAAD,CADsB;AAEtCC,4BAAgB,EAAE,CAAC,EAAD,CAFoB;AAGtCC,qBAAS,EAAE,CAAC,EAAD,EAAK,4CAAA9B,UAAA,SAAL,CAH2B;AAItC+B,oBAAQ,EAAE,CAAC,EAAD,EAAK,4CAAA/B,UAAA,SAAL,CAJ4B;AAKtCgC,uBAAW,EAAC,CAAC,EAAD;AAL0B,WAAd,CAA1B;AAOA,eAAK6J,gBAAL,GAAuB,IAAI,4CAAA3J,SAAJ,CAAc;AACnCC,iBAAK,EAAE,IAAI,4CAAArC,WAAJ,CAAgB,EAAhB,EAAmB,4CAAAE,UAAA,SAAnB,CAD4B;AAEnCoC,sBAAU,EAAE,IAAI,4CAAAtC,WAAJ,CAAgB,EAAhB,EAAmB,4CAAAE,UAAA,SAAnB,CAFuB;AAGnCqC,sBAAU,EAAE,IAAI,4CAAAvC,WAAJ,CAAgB,EAAhB,CAHuB;AAInCwC,2BAAe,EAAE,IAAI,4CAAAxC,WAAJ,CAAgB,EAAhB,CAJkB;AAKnCyC,qBAAS,EAAE,IAAI,4CAAAzC,WAAJ,CAAgB,EAAhB,CALwB;AAMnC0C,0BAAc,EAAE,IAAI,4CAAA1C,WAAJ,CAAgB,EAAhB,CANmB;AAOnC2C,0BAAc,EAAE,IAAI,4CAAA3C,WAAJ,CAAgB,EAAhB,CAPmB;AAQnC4C,+BAAmB,EAAE,IAAI,4CAAA5C,WAAJ,CAAgB,EAAhB,CARc;AASnC6C,uBAAW,EAAE,IAAI,4CAAA7C,WAAJ,CAAgB,EAAhB,CATsB;AAUnC8C,4BAAgB,EAAE,IAAI,4CAAA9C,WAAJ,CAAgB,EAAhB,CAViB;AAWnC+C,kCAAsB,EAAE,IAAI,4CAAA/C,WAAJ,CAAgB,EAAhB,CAXW;AAYnCgD,uCAA2B,EAAE,IAAI,4CAAAhD,WAAJ,CAAgB,EAAhB,CAZM;AAanCiD,iCAAqB,EAAE,IAAI,4CAAAjD,WAAJ,CAAgB,EAAhB,CAbY;AAcnCkD,sCAA0B,EAAE,IAAI,4CAAAlD,WAAJ,CAAgB,EAAhB;AAdO,WAAd,CAAvB;AAiBA,eAAKmD,eAAL;AACA,eAAKC,WAAL;AACA,eAAKC,kBAAL;AACA,eAAKC,kBAAL;AACA,eAAKC,iBAAL;AACA,eAAKC,aAAL;AACA,eAAKC,aAAL;AACA,eAAKxF,eAAL,CAAqBe,eAArB,CAAqCC,SAArC,CAA+C,UAAAC,KAAK,EAAI;AACtD,mBAAI,CAACV,YAAL,GAAmBC,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAzD;;AACA,mBAAI,CAACyE,eAAL;;AACA,mBAAI,CAACC,WAAL;;AACA,mBAAI,CAACC,kBAAL;;AACA,mBAAI,CAACC,kBAAL;;AACA,mBAAI,CAACC,iBAAL;;AACA,mBAAI,CAACE,aAAL;AACD,WARD;AASD;;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKlF,OAAL,CAAayN,IAAb;AACAC,sBAAU,CAAC,YAAI;AACb,qBAAI,CAACjO,cAAL,CAAoBkO,sBAApB,CAA2C,OAAI,CAACvN,SAAhD,EAA0DS,cAAc,CAACC,MAAzE,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,uBAAI,CAACf,OAAL,CAAakC,IAAb;;AACA,oBAAI0L,UAAU,GAAC7M,GAAG,CAAC,UAAD,CAAH,CAAgB,CAAhB,CAAf;AACAE,uBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B0M,UAA9B;AACA,oBAAIC,SAAS,GAAC9M,GAAG,CAAC,SAAD,CAAH,CAAe,CAAf,CAAd;;AACE,uBAAI,CAACuM,uBAAL,CAA6B/H,UAA7B,CAAwC;AACtCkD,oBAAE,EAACmF,UAAU,CAACnF,EADwB;AAEtChG,sBAAI,EAAEmL,UAAU,CAACnL,IAFqB;AAGtCC,6BAAW,EAACkL,UAAU,CAAClL,WAHe;AAItCC,iCAAe,EAAEiL,UAAU,CAACjL,eAJU;AAKtCC,wBAAM,EAACgL,UAAU,CAAChL,MALoB;AAMtCC,4BAAU,EAAC+K,UAAU,CAACE,YANgB;AAOtChL,0BAAQ,EAAC8K,UAAU,CAAC9K,QAPkB;AAQtCC,0BAAQ,EAAC6K,UAAU,CAAC7K,QARkB;AAStCC,sBAAI,EAAE4K,UAAU,CAAC5K,IATqB;AAUtCC,uBAAK,EAAE2K,UAAU,CAAC3K,KAVoB;AAWtCC,+BAAa,EAAE0K,UAAU,CAACG,QAXY;AAYtC5K,+BAAa,EAAEyK,UAAU,CAACzK,aAZY;AAatCC,4BAAU,EAACwK,UAAU,CAACxK,UAbgB;AActCC,+BAAa,EAAEuK,UAAU,CAACvK;AAdY,iBAAxC;;AAiBA,uBAAI,CAACkK,kBAAL,CAAwBhI,UAAxB,CAAmC;AACjChC,gCAAc,EAAEqK,UAAU,CAACrK,cADM;AAEjCC,kCAAgB,EAAEoK,UAAU,CAACpK,gBAFI;AAGjCC,2BAAS,EAAEmK,UAAU,CAACnK,SAHW;AAIjCC,0BAAQ,EAAEkK,UAAU,CAAClK,QAJY;AAKjCC,6BAAW,EAACiK,UAAU,CAACI;AALU,iBAAnC;;AAQA,uBAAI,CAACR,gBAAL,CAAsBjI,UAAtB,CAAiC;AAC/BzB,uBAAK,EAAE8J,UAAU,CAACK,WADa;AAE/BlK,4BAAU,EAAE6J,UAAU,CAACK,WAFQ;AAG/BjK,4BAAU,EAAE6J,SAAS,CAAC7J,UAHS;AAI/BC,iCAAe,EAAE4J,SAAS,CAAC7J,UAJI;AAK/BE,2BAAS,EAAE2J,SAAS,CAAC3J,SALU;AAM/BC,gCAAc,EAAE0J,SAAS,CAAC3J,SANK;AAO/BE,gCAAc,EAAEyJ,SAAS,CAACzJ,cAPK;AAQ/BC,qCAAmB,EAAEwJ,SAAS,CAACzJ,cARA;AAS/BE,6BAAW,EAAEuJ,SAAS,CAACK,iBATQ;AAU/B3J,kCAAgB,EAAEsJ,SAAS,CAACK,iBAVG;AAW/B1J,wCAAsB,EAAEqJ,SAAS,CAACrJ,sBAXH;AAY/BC,6CAA2B,EAAEoJ,SAAS,CAACrJ,sBAZR;AAa/BE,uCAAqB,EAAEmJ,SAAS,CAACnJ,qBAbF;AAc/BC,4CAA0B,EAAEkJ,SAAS,CAACnJ;AAdP,iBAAjC;;AAiBVzD,uBAAO,CAACC,GAAR,CAAY,iCAAZ,EAA8C,OAAI,CAAC+F,cAAnD;;AACU,oBAAIkH,OAAO,GAAC,OAAI,CAAC7H,QAAL,CAAc+B,MAAd,CAAqB,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACS,OAA3B;AAAmC,iBAAjE,CAAZ;;AACA,oBAAIC,OAAO,GAAC,OAAI,CAACxH,YAAL,CAAkBuB,MAAlB,CAAyB,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACW,SAA3B;AAAqC,iBAAvE,CAAZ;;AACA,oBAAIC,cAAc,GAAC,OAAI,CAACnH,eAAL,CAAqBgB,MAArB,CAA4B,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACa,cAA3B;AAA0C,iBAA/E,CAAnB;;AACA,oBAAIC,SAAS,GAAC,OAAI,CAACzH,cAAL,CAAoBoB,MAApB,CAA2B,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACe,aAA3B;AAAyC,iBAA7E,CAAd;;AACA,oBAAIC,aAAa,GAAC,OAAI,CAAC7G,cAAL,CAAoBM,MAApB,CAA2B,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACiB,aAA3B;AAAyC,iBAA7E,CAAlB;;AACA,oBAAIC,gBAAgB,GAAC,OAAI,CAACrH,mBAAL,CAAyBY,MAAzB,CAAgC,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACmB,mBAA3B;AAA+C,iBAAxF,CAArB;;AACA,oBAAIC,OAAO,GAAC,OAAI,CAACpH,cAAL,CAAoBS,MAApB,CAA2B,UAAC+F,IAAD,EAAQ;AAAC,yBAAOA,IAAI,CAAC3F,EAAL,IAASmF,UAAU,CAACqB,gBAA3B;AAA4C,iBAAhF,CAAZ;;AACA,uBAAI,CAACzN,IAAL,CAAUgE,QAAV,CAAmB2I,OAAO,CAAC,CAAD,CAA1B;;AACA,uBAAI,CAACvM,QAAL,CAAc4D,QAAd,CAAuB8I,OAAO,CAAC,CAAD,CAA9B;;AACA,uBAAI,CAACzM,WAAL,CAAiB2D,QAAjB,CAA0BgJ,cAAc,CAAC,CAAD,CAAxC;;AACA,uBAAI,CAACvM,UAAL,CAAgBuD,QAAhB,CAAyBoJ,aAAa,CAAC,CAAD,CAAtC;;AACA,uBAAI,CAAC9M,UAAL,CAAgB0D,QAAhB,CAAyBkJ,SAAS,CAAC,CAAD,CAAlC;;AACA,uBAAI,CAAC1M,UAAL,CAAgBwD,QAAhB,CAAyBwJ,OAAO,CAAC,CAAD,CAAhC;;AACA,uBAAI,CAACjN,gBAAL,CAAsByD,QAAtB,CAA+BsJ,gBAAgB,CAAC,CAAD,CAA/C;;AACA7N,uBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,OAAI,CAACM,IAAhC;AACH,eAhED;AAiED,aAlES,EAkER,GAlEQ,CAAV;AAqED;;;iBAED,uBAAW;AAAA;;AACT,iBAAK8E,QAAL,GAAc,EAAd;AACA,iBAAK7G,cAAL,CAAoBoF,WAApB,GACGnE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAACuF,QAAL,GAAcvF,GAAd;AACAE,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,OAAI,CAACoF,QAArC;AACA,qBAAI,CAACC,QAAL,GAAgB,OAAI,CAAC/E,IAAL,CAAUgF,YAAV,CAAuBC,IAAvB,CACd,sCAAAC,SAAA,EAAU,EAAV,CADc,EAEd,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,OAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFc,EAGd,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAACmE,WAAL,CAAiBnE,IAAjB,CAAH,GAA4B,OAAI,CAAC6D,QAAL,CAAcO,KAAd,EAArC;AAAA,eAAR,CAHc,CAAhB;AAKD,aATH;AAUD;;;iBAED,2BAAe;AAAA;;AACb,iBAAKC,YAAL,GAAkB,EAAlB;AACA,iBAAKrH,cAAL,CAAoBmF,eAApB,GACGlE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAAC+F,YAAL,GAAkB/F,GAAlB;AACA,qBAAI,CAACgG,YAAL,GAAoB,OAAI,CAACnF,QAAL,CAAc4E,YAAd,CAA2BC,IAA3B,CAClB,sCAAAC,SAAA,EAAU,EAAV,CADkB,EAElB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,OAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFkB,EAGlB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAACuE,WAAL,CAAiBvE,IAAjB,CAAH,GAA4B,OAAI,CAACqE,YAAL,CAAkBD,KAAlB,EAArC;AAAA,eAAR,CAHkB,CAApB;AAKD,aARH;AASD;;;iBAED,yBAAa;AAAA;;AACX,iBAAKpH,cAAL,CAAoBwF,aAApB,GACGvE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAACkG,cAAL,GAAoBlG,GAApB;AACDE,qBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqC,OAAI,CAAC+F,cAA1C;AACC,qBAAI,CAACC,cAAL,GAAsB,OAAI,CAACpF,UAAL,CAAgB0E,YAAhB,CAA6BC,IAA7B,CACpB,sCAAAC,SAAA,EAAU,EAAV,CADoB,EAEpB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACwG,WAA/C;AAAA,eAAT,CAFoB,EAGpB,sCAAAR,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAAC2E,iBAAL,CAAuB3E,IAAvB,CAAH,GAAkC,OAAI,CAACwE,cAAL,CAAoBJ,KAApB,EAA3C;AAAA,eAAR,CAHoB,CAAtB;AAKD,aATH;AAUD;;;iBAED,8BAAkB;AAAA;;AAChB,iBAAKpH,cAAL,CAAoBqF,kBAApB,GACGpE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAACsG,eAAL,GAAqBtG,GAArB;AACA,qBAAI,CAACuG,eAAL,GAAuB,OAAI,CAACzF,WAAL,CAAiB2E,YAAjB,CAA8BC,IAA9B,CACrB,sCAAAC,SAAA,EAAU,EAAV,CADqB,EAErB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4G,YAA/C;AAAA,eAAT,CAFqB,EAGrB,sCAAAZ,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAAC+E,kBAAL,CAAwB/E,IAAxB,CAAH,GAAmC,OAAI,CAAC4E,eAAL,CAAqBR,KAArB,EAA5C;AAAA,eAAR,CAHqB,CAAvB;AAKD,aARH;AASD;;;iBAED,8BAAkB;AAAA;;AAChB,iBAAKpH,cAAL,CAAoBsF,kBAApB,GACGrE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAAC0G,mBAAL,GAAyB1G,GAAzB;AACA,qBAAI,CAAC2G,mBAAL,GAA2B,OAAI,CAAC3F,gBAAL,CAAsByE,YAAtB,CAAmCC,IAAnC,CACzB,sCAAAC,SAAA,EAAU,EAAV,CADyB,EAEzB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,OAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFyB,EAGzB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAACkF,sBAAL,CAA4BlF,IAA5B,CAAH,GAAuC,OAAI,CAACgF,mBAAL,CAAyBZ,KAAzB,EAAhD;AAAA,eAAR,CAHyB,CAA3B;AAKD,aARH;AASD;;;iBAED,6BAAiB;AAAA;;AACf,iBAAKpH,cAAL,CAAoBuF,iBAApB,GACGtE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAAC6G,cAAL,GAAoB7G,GAApB;AACA,qBAAI,CAAC8G,cAAL,GAAsB,OAAI,CAAC7F,UAAL,CAAgBwE,YAAhB,CAA6BC,IAA7B,CACpB,sCAAAC,SAAA,EAAU,EAAV,CADoB,EAEpB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,OAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFoB,EAGpB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAACqF,iBAAL,CAAuBrF,IAAvB,CAAH,GAAkC,OAAI,CAACmF,cAAL,CAAoBf,KAApB,EAA3C;AAAA,eAAR,CAHoB,CAAtB;AAKD,aARH;AASD;;;iBAGD,yBAAa;AAAA;;AACX,iBAAKkB,cAAL,GAAoB,EAApB;AACA,iBAAKtI,cAAL,CAAoByF,aAApB,GACGxE,SADH,CACa,UAAAK,GAAG,EAAE;AACd,qBAAI,CAACgH,cAAL,GAAoBhH,GAApB;AACA,qBAAI,CAACiH,cAAL,GAAsB,OAAI,CAAC/F,UAAL,CAAgBuE,YAAhB,CAA6BC,IAA7B,CACpB,sCAAAC,SAAA,EAAU,EAAV,CADoB,EAEpB,sCAAAC,GAAA,EAAI,UAAAhG,KAAK;AAAA,uBAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC,OAAI,CAACV,YAAN,CAA9C;AAAA,eAAT,CAFoB,EAGpB,sCAAA0G,GAAA,EAAI,UAAAlE,IAAI;AAAA,uBAAKA,IAAI,GAAG,OAAI,CAACwF,iBAAL,CAAuBxF,IAAvB,CAAH,GAAkC,OAAI,CAACsF,cAAL,CAAoBlB,KAApB,EAA3C;AAAA,eAAR,CAHoB,CAAtB;AAKD,aARH;AASD;;;iBAED,mBAAUqB,IAAV,EAAc;AACZ,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,uBAAc+H,IAAd,EAAkB;AAChB,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,8BAAqB+H,IAArB,EAAyB;AACvB,mBAAOA,IAAI,IAAIA,IAAI,CAACX,YAAb,GAA4BW,IAAI,CAACX,YAAjC,GAAgD,EAAvD;AACD;;;iBAED,6BAAoBW,IAApB,EAAwB;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACf,WAAb,GAA2Be,IAAI,CAACf,WAAhC,GAA8C,EAArD;AACD;;;iBAED,kCAAyBe,IAAzB,EAA6B;AAC3B,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,6BAAoB+H,IAApB,EAAwB;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAED,6BAAoB+H,IAApB,EAAwB;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAZ,GAAkE+H,IAAI,CAAEhI,YAAY,CAACC,IAAb,IAAqB,IAArB,GAA4B,OAA5B,GAAsC,SAAxC,CAAtE,GAA4H,EAAnI;AACD;;;iBAEO,qBAAYsC,IAAZ,EAAwB;AAAA;;AAC9B,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAK9B,QAAL,CAAc+B,MAAd,CAAqB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAA3B,CAAP;AACD;;;iBAEO,qBAAY1F,IAAZ,EAAwB;AAAA;;AAC9B,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKtB,YAAL,CAAkBuB,MAAlB,CAAyB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAA/B,CAAP;AACD;;;iBAEO,4BAAmB1F,IAAnB,EAA+B;AACrC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKf,eAAL,CAAqBgB,MAArB,CAA4B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACf,YAAP,CAAoBa,WAApB,GAAkCG,QAAlC,CAA2CJ,WAA3C,CAAJ;AAAA,aAAlC,CAAP;AACD;;;iBAGO,2BAAkB1F,IAAlB,EAA8B;AACpC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKnB,cAAL,CAAoBoB,MAApB,CAA2B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACnB,WAAP,CAAmBiB,WAAnB,GAAiCG,QAAjC,CAA0CJ,WAA1C,CAAJ;AAAA,aAAjC,CAAP;AACD;;;iBAGO,gCAAuB1F,IAAvB,EAAmC;AAAA;;AACzC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKX,mBAAL,CAAyBY,MAAzB,CAAgC,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAAtC,CAAP;AACD;;;iBAGO,2BAAkB1F,IAAlB,EAA8B;AAAA;;AACpC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKR,cAAL,CAAoBS,MAApB,CAA2B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAAjC,CAAP;AACD;;;iBAGO,2BAAkB1F,IAAlB,EAA8B;AAAA;;AACpC,gBAAM0F,WAAW,GAAG1F,IAAI,CAAC2F,WAAL,EAApB;AACA,mBAAO,KAAKL,cAAL,CAAoBM,MAApB,CAA2B,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC,OAAI,CAACrI,YAAN,CAAN,CAA0BmI,WAA1B,GAAwCG,QAAxC,CAAiDJ,WAAjD,CAAJ;AAAA,aAAjC,CAAP;AACD;;;iBAGD,2BAAkBK,KAAlB,EAAuB;AACrBvH,mBAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCsH,KAAK,CAACF,MAAN,CAAa3H,KAArD;;AACA,gBAAG6H,KAAK,CAACF,MAAN,CAAa3H,KAAb,CAAmB8H,EAAnB,KAA0B,CAA7B,EAA+B;AAC7B,mBAAKtG,aAAL,GAAmB,IAAnB;AACD,aAFD,MAEK;AACH,mBAAKA,aAAL,GAAmB,KAAnB;AACD;AACF;;;iBAED,2BAAe;AACblB,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAKoM,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAArD,EAAiE,KAAKd,QAAtE;AACA,gBAAM8G,YAAY,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB,CAFa,CAGb;;AACA,gBAAGA,YAAY,CAACC,OAAb,CAAqB,KAAK/G,QAAL,CAAcjB,KAAd,CAAoB8H,EAAzC,KAAgD,CAAnD,EAAqD;AACnD,kBAAI,KAAK6E,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAAnC,CAA+CkG,MAA/C,CAAsD,KAAK0E,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAAnC,CAA+CmG,MAA/C,GAAsD,CAA5G,CAAD,GAAmH,CAAnH,IAAwH,CAA3H,EAA6H;AAC3H,qBAAKyE,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAC3C,wBAAM,EAAC;AAAR,iBAAxC;AACD,eAFD,MAEK;AACH,qBAAK0K,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAC3C,wBAAM,EAAC;AAAR,iBAAxC;AACD;AACF,aAND,MAMK;AACH,mBAAK0K,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAC3C,sBAAM,EAAC;AAAR,eAAxC;AACD;AACF;;;iBAED,+BAAmB;AAAA;;AACjB3B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,KAAKoM,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,CAAlB;AACA,iBAAKrJ,cAAL,CAAoBsJ,kBAApB,CAAuC,KAAKuE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAA1E,EAAsF7B,cAAc,CAACC,MAArG,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,KAApB,EAA0B;AACxBE,uBAAO,CAACC,GAAR,CAAa,OAAI,CAACoM,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,IAA6D,GAA7D,GAAkE,OAAI,CAACwE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,CAAjE,GAA8H,GAA9H,GAAmI,OAAI,CAACwE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,CAA9I;;AACA,uBAAI,CAACwE,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAClC,+BAAa,EAAC,IAAI2F,IAAJ,CAAU,OAAI,CAACsE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,IAA6D,GAA7D,GAAkE,OAAI,CAACwE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,CAAjE,GAA8H,GAA9H,GAAmI,OAAI,CAACwE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAApC,CAAiDoG,MAAjD,CAAwD,CAAxD,EAA0D,CAA1D,CAA3I;AAAf,iBAAxC;;AACA,oBAAMJ,YAAY,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB,CAHwB,CAIxB;;AACA,oBAAGA,YAAY,CAACC,OAAb,CAAqB,OAAI,CAAC/G,QAAL,CAAcjB,KAAd,CAAoB8H,EAAzC,KAAgD,CAAnD,EAAqD;AACnD,sBAAI,OAAI,CAAC6E,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAAnC,CAA+CkG,MAA/C,CAAsD,OAAI,CAAC0E,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAAnC,CAA+CmG,MAA/C,GAAsD,CAA5G,CAAD,GAAmH,CAAnH,IAAwH,CAA3H,EAA6H;AAC3H,2BAAI,CAACyE,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAC3C,4BAAM,EAAC;AAAR,qBAAxC;AACD,mBAFD,MAEK;AACH,2BAAI,CAAC0K,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAC3C,4BAAM,EAAC;AAAR,qBAAxC;AACD;AACF,iBAND,MAMK;AACH,yBAAI,CAAC0K,uBAAL,CAA6B/H,UAA7B,CAAwC;AAAC3C,0BAAM,EAAC;AAAR,mBAAxC;AACD;AACF,eAdD,MAcK;AACH,uBAAI,CAAC/C,aAAL,CAAmBoJ,KAAnB,CAAyB,4BAAzB;;AACA,uBAAI,CAACqE,uBAAL,CAA6B3M,KAA7B,CAAmC+B,WAAnC,GAA+C,EAA/C;AACD;AAEF,aArBD;AAuBD;;;iBAED,mCAAuB;AAAA;;AACrB,iBAAKjD,cAAL,CAAoByJ,sBAApB,CAA2C,KAAKoE,uBAAL,CAA6B3M,KAA7B,CAAmCgC,eAA9E,EAA8F9B,cAAc,CAACC,MAA7G,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,KAApB,EAA0B,CACzB,CADD,MACK;AACH,uBAAI,CAAClB,aAAL,CAAmBoJ,KAAnB,CAAyB,gCAAzB;;AACA,uBAAI,CAACqE,uBAAL,CAA6B3M,KAA7B,CAAmCgC,eAAnC,GAAmD,EAAnD;AACD;AACF,aAPD;AAQD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAGA,+BAAmB;AACjB1B,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKY,UAAL,CAAgBnB,KAA5C;AACA,iBAAK2M,uBAAL,CAA6B/H,UAA7B,CAAwC;AACtCvC,kBAAI,EAAC,KAAKlB,UAAL,CAAgBnB,KAAhB,CAAsBqC,IADW;AAEtCC,mBAAK,EAAC,KAAKnB,UAAL,CAAgBnB,KAAhB,CAAsBsC;AAFU,aAAxC;AAKD;;;iBAED,8BAAqBoG,OAArB,EAAwC;AACtCpI,mBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0C,KAAKM,IAA/C;AACA6H,mBAAO,CAACE,IAAR,GAFsC,CAGtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;iBAGD,2BAAkBf,KAAlB,EAAwBgB,QAAxB,EAAkC;AAAA;;AAChC,gBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACA,gBAAIlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,IAAsBpB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBf,MAA7C,EAAqD;AACnD,wDAAeL,KAAK,CAACmB,MAAN,CAAaC,KAA5B;AAAA,kBAAOC,IAAP;;AACAJ,oBAAM,CAACK,aAAP,CAAqBD,IAArB;;AACAJ,oBAAM,CAACM,MAAP,GAAgB,YAAM;AACpB9I,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,OAAI,CAACsI,QAAQ,GAAC,UAAV,CAAxB;AACA,uBAAI,CAACA,QAAQ,GAAC,UAAV,CAAJ,GAA0BC,MAAM,CAACO,MAAjC;;AACA,uBAAI,CAACwD,gBAAL,CAAsBjI,UAAtB,qBACGiE,QADH,EACaC,MAAM,CAACO,MADpB;;AAGA/I,uBAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuC,OAAI,CAACsM,gBAA5C;AACD,eAPD;AAQD;AACF;;;iBAGD,yBAAgBvD,WAAhB,EAA6B;AAC3B;AACA;AACA;AACA;AACA,iBAAKrK,YAAL,CAAkBuK,IAAlB,CAAuBF,WAAvB,EAAoC;AAAEG,4BAAc,EAAE;AAAlB,aAApC;AACD;;;iBAGD,uCAA2B;AAAA;;AACzB,iBAAK3K,cAAL,CAAoByP,2BAApB,CAAgD,KAAK5B,uBAAL,CAA6B3M,KAA7E,EAAmF,KAAKa,IAAL,CAAUb,KAA7F,EAAmG,KAAKiB,QAAL,CAAcjB,KAAjH,EAAuH,KAAKkB,WAAL,CAAiBlB,KAAxI,EAA8I,KAAKmB,UAAL,CAAgBnB,KAA9J,EAAoK,KAAKoB,gBAAL,CAAsBpB,KAA1L,EAAgM,KAAKqB,UAAL,CAAgBrB,KAAhN,EAAsN,KAAKsB,UAAL,CAAgBtB,KAAtO,EAA4O,KAAK4M,kBAAL,CAAwB5M,KAApQ,EAA0Q,KAAK6M,gBAAL,CAAsB7M,KAAhS,EAAsSE,cAAc,CAACyJ,WAArT,EAAiUzJ,cAAc,CAACC,MAAhV,EACCJ,SADD,CACW,UAAAK,GAAG,EAAE;AACd,kBAAGA,GAAG,CAAC,QAAD,CAAH,IAAiB,SAApB,EAA8B;AAC5B,uBAAI,CAAClB,aAAL,CAAmB0K,OAAnB,CAA2B,wBAA3B;;AACA,uBAAI,CAAC3K,YAAL,CAAkB4K,UAAlB;;AACAtK,4BAAY,CAACuK,UAAb,CAAwB,iBAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,MAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,UAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,aAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,YAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,YAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,mBAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,YAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,kBAAxB;AACAvK,4BAAY,CAACuK,UAAb,CAAwB,iBAAxB;;AACA,uBAAI,CAAC6C,uBAAL,CAA6B5C,KAA7B;;AACA,uBAAI,CAAC6C,kBAAL,CAAwB7C,KAAxB;;AACA,uBAAI,CAAC8C,gBAAL,CAAsB9C,KAAtB;;AACA,uBAAI,CAAClJ,IAAL,CAAUgE,QAAV,CAAmB,EAAnB;;AACA,uBAAI,CAAC5D,QAAL,CAAc4D,QAAd,CAAuB,EAAvB;;AACA,uBAAI,CAAC3D,WAAL,CAAiB2D,QAAjB,CAA0B,EAA1B;;AACA,uBAAI,CAAC1D,UAAL,CAAgB0D,QAAhB,CAAyB,EAAzB;;AACA,uBAAI,CAACzD,gBAAL,CAAsByD,QAAtB,CAA+B,EAA/B;;AACA,uBAAI,CAACxD,UAAL,CAAgBwD,QAAhB,CAAyB,EAAzB;;AACA,uBAAI,CAACvD,UAAL,CAAgBuD,QAAhB,CAAyB,EAAzB;;AACA,uBAAI,CAACM,aAAL,GAAmB,EAAnB;AACA,uBAAI,CAACC,kBAAL,GAAwB,EAAxB;AACA,uBAAI,CAACC,iBAAL,GAAuB,EAAvB;AACA,uBAAI,CAACC,sBAAL,GAA4B,EAA5B;AACA,uBAAI,CAACC,mBAAL,GAAyB,EAAzB;AACA,uBAAI,CAACC,8BAAL,GAAqC,EAArC;AACA,uBAAI,CAACC,6BAAL,GAAmC,EAAnC;;AACA,uBAAI,CAACtG,MAAL,CAAYmM,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD;AAEF,aAnCD;AAoCD;;;;;;;yBA1hBUoB,qB,EAAoB,6H,EAAA,wH,EAAA,8H,EAAA,4I,EAAA,gI,EAAA,iI,EAAA,sH,EAAA,oH,EAAA,4H,EAAA,4H;AAAA,O;;;cAApBA,qB;AAAoB,yC;AAAA,kB;AAAA,iB;AAAA,+iI;AAAA;AAAA;;;AD7BjC;;AAMA;;AAAyC;;AAAU;;AACnD;;AAEA;;AACQ;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuB;;;;AAA4C;;AACvE;;AASJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAQ;;;;AAA4C;;AACpD;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAiD;;AAC5D;;AACA;;AAAoB;;AAAI;;AACxB;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAmD;;AAC9D;;AACA;;AAAsE;AAAA,qBAAkB,IAAA1C,eAAA,EAAlB;AAAmC,aAAnC;;AACtE;;;;AAGA;;AACA;;AAKF;;AACN;;AACA;;AACI;;AACI;;AAAW;;;;AAAgD;;AAC3D;;AAA2F;AAAA,qBAAQ,IAAAC,mBAAA,EAAR;AAA6B,aAA7B;;AAA3F;;AACA;;AAAoB;;AAAmB;;AAC3C;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAA0L;AAAA,qBAAQ,IAAAC,uBAAA,EAAR;AAAiC,aAAjC;;AAA1L;;AACA;;AAAoB;;AAAmB;;AACvC;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAgD;;AAC3D;;AACA;;AACA;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAmD;;AAC9D;;AACI;;AAAyB;;AAAI;;AAC7B;;AAA2B;;AAAM;;AACjC;;AAA2B;;AAAM;;AACnC;;AACA;;AAGN;;AACJ;;AACJ;;AACA;;AACQ;;AACQ;;AACI;;AAAW;;;;AAAuD;;AAClE;;AACA;;AACA;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACR;;AACI;;AACI;;AAAW;;;;AAAwD;;AACnE;;AACA;;AACA;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAuD;;AAClE;;AACA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAEJ;;AACA;;AACJ;;AACI;;AACI;;AAAW;;;;AAAwD;;AACnE;;AACA;;AAAyF;AAAA,qBAAkB,IAAAE,mBAAA,EAAlB;AAAuC,aAAvC;;AACzF;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAiD;;AAC5D;;AACA;;AAAoB;;AAAa;;AACjC;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAkD;;AAC7D;;AACA;;AAAoB;;AAAQ;;AAC5B;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAkD;;AAC7D;;AACA;;AAAoB;;AAAK;;AACzB;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAqD;;AAChE;;AACA;;AAAoB;;AAAK;;AACzB;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAiD;;AAGxD;;AACA;;AAA4E;AAAA,qBAAkB,IAAAC,iBAAA,QAAlB;AAA2C,aAA3C;;AAC5E;;;;AAGA;;AACA;;AAKR;;AACJ;;AACA;;AASJ;;AACA;;AACI;;AACgJ;;;;AAAiC;;AACrL;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAAuD;;AAClE;;AACA;;AACA;;;;AAGA;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAA0D;;AACrE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAA4D;;AACvE;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;;;AAA4D;;AACnE;;AACA;;AACA;;;;AAGA;;AACA;;AAKR;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;;;AAAoD;;AAC/D;;AAEI;;AAKA;AAAA;AAAA;;AAGF;;AAAU;;AAER;;AAAW;;AACf;;AAGJ;;AACJ;;AACJ;;AACA;;AAaA;;AACI;;AAAwE;;;;AAAiC;;AACzG;;AAC4D;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,oBAAA,KAAT;AAAsC,aAAtC;;AAAwC;;;;AAAiC;;AACzI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACI;;AACE;;AACM;;AACI;;AACJ;;AACA;;AAII;;AACI;;AAAiH;AAAA,qBAAU,IAAAC,iBAAA,SAAyB,OAAzB,CAAV;AAA2C,aAA3C;;;;AACjH;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACJ;;AACL;;AACH;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAII;;AACI;;AAA2H;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,YAAzB,CAAV;AAAgD,aAAhD;;;;AAC3H;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAII;;AACI;;AAAyH;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,WAAzB,CAAV;AAA+C,aAA/C;;;;AACzH;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACA;;AACR;;AACJ;;AACJ;;AACA;;AAAiB;;AAAK;;AACtB;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAIA;;AACI;;AAAoI;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,gBAAzB,CAAV;AAAoD,aAApD;;;;AACpI;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACC;;AACL;;AACJ;;AACA;;AACI;;AACI;;AAGA;;AAII;;AACI;;AAA8H;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,aAAzB,CAAV;AAAiD,aAAjD;;;;AAC9H;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACF;;AACF;;AACR;;AACA;;AACI;;AACI;;AAGA;;AAIA;;AACI;;AAAoJ;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,wBAAzB,CAAV;AAA4D,aAA5D;;;;AACpJ;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AAAiB;;AAAK;;AACtB;;AACI;;AACI;;AACI;;AAGA;;AAII;;AACI;;AAAiJ;AAAA,qBAAU,IAAAA,iBAAA,SAAyB,uBAAzB,CAAV;AAA2D,aAA3D;;;;AACjJ;;AACA;;AAAoB;;AAAY;;AAChC;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AACN;;AACA;;AAAwE;;;;AAAiC;;AACzG;;AAA0C;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,eAAA,MAAT;AAAqC,aAArC;;AAA4E;;;;AAAiC;;AACvJ;;AACJ;;AACA;;AACA;;AACJ;;AAQJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;;;;;;;;;;;;;;;;;;;AA5gBmD;;AAAA;;AAmBnB;;AAAA;;AAIgB;;AAAA;;AACd;;AAAA;;AACA;;AAAA;;AAKiB;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AACiB;;AAAA,kGAAwB,iBAAxB,EAAwB,GAAxB;;AACgB;;AAAA;;AACb;;AAAA;;AAIG;;AAAA;;AASvB;;AAAA;;AACyD;;AAAA;;AAQzD;;AAAA;;AACuC;;AAAA,6IAAmE,UAAnE,EAAmE,0DAAnE;;AAEtC;;AAAA;;AAOD;;AAAA;;AACK;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAOD;;AAAA;;AAMG;;AAAA;;AASK;;AAAA;;AACiB;;AAAA,oGAA0B,iBAA1B,EAA0B,IAA1B;;AACwB;;AAAA;;AACrB;;AAAA;;AAIG;;AAAA;;AAS/B;;AAAA;;AACiB;;AAAA,qGAA2B,iBAA3B,EAA2B,IAA3B;;AACoB;;AAAA;;AACjB;;AAAA;;AAIG;;AAAA;;AASvB;;AAAA;;AAEC;;AAAA;;AASD;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AACiB;;AAAA,oGAA0B,iBAA1B,EAA0B,IAA1B;;AACwB;;AAAA;;AACrB;;AAAA;;AAIG;;AAAA;;AAWvB;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AAGC;;AAAA;;AASD;;AAAA;;AAGC;;AAAA;;AAOD;;AAAA;;AAGqB;;AAAA,8FAAoB,iBAApB,EAAoB,IAApB;;AACkB;;AAAA;;AACX;;AAAA;;AAID;;AAAA;;AAO1B;;AAAA;;AAYnB;;AAAA;;AAA+I;;AAAA;;AAK9I;;AAAA;;AAKiB;;AAAA;;AACiB;;AAAA,oGAA0B,iBAA1B,EAA0B,IAA1B;;AACwB;;AAAA;;AACjB;;AAAA;;AAID;;AAAA;;AASvB;;AAAA;;AAMA;;AAAA;;AAQA;;AAAA;;AACqB;;AAAA,0GAAgC,iBAAhC,EAAgC,IAAhC;;AACqB;;AAAA;;AACd;;AAAA;;AAID;;AAAA;;AAS3B;;AAAA;;AAEC;;AAAA;;AAOD;;AAAA;;AAEP;;AAAA;;AAOA;;AAAA,qGAAmC,cAAnC,EAAmC,QAAnC;;AAEQ;;AAAA;;AAGA;;AAAA;;AAMN;;AAAA;;AAc0D;;AAAA;;AAExE;;AAAA;;AAAoG;;AAAA;;AAIlG;;AAAA;;AACA;;AAAA;;AAMuD;;AAAA;;AAE5C;;AAAA;;AAKoD;;AAAA;;AAGrC;;AAAA;;AAUkC;;AAAA;;AAEjD;;AAAA;;AAKyD;;AAAA;;AAAuH;;AAGjK;;AAAA;;AAUiC;;AAAA;;AAEhD;;AAAA;;AAKwD;;AAAA;;AAAqH;;AAG9J;;AAAA;;AAasC;;AAAA;;AAErD;;AAAA;;AAK0D;;AAAA;;AAA+H;;AAG9K;;AAAA;;AASI;;AAAA;;AAGf;;AAAA;;AAK2D;;AAAA;;AAAyH;;AAGrK;;AAAA;;AASA;;AAAA;;AAGf;;AAAA;;AAKkE;;AAAA;;AAA+I;;AAGtM;;AAAA;;AAYI;;AAAA;;AAGf;;AAAA;;AAKoE;;AAAA;;AAA6I;;AAGlM;;AAAA;;AASwC;;AAAA;;AACS;;AAAA;;AAAqC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjgBtJ,UAAM+D,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,cADR;AAEEC,iBAAS,EAAE,kEAAA1D;AAFb,OADqB,EAKrB;AACEyD,YAAI,EAAE,aADR;AAEEC,iBAAS,EAAE,gEAAA/N;AAFb,OALqB,EASrB;AACE8N,YAAI,EAAE,kBADR;AAEEC,iBAAS,EAAE,kEAAAhC;AAFb,OATqB,EAarB;AACE+B,YAAI,EAAE,mBADR;AAEEC,iBAAS,EAAE,oEAAA/P;AAFb,OAbqB,CAAvB;;UAuBagQ,sB;;;;;yBAAAA,sB;AAAqB,O;;;cAArBA;;;kBAHF,CAAC,6CAAAC,YAAA,UAAsBJ,MAAtB,CAAD,C,EACC,6CAAAI,Y;;;;4HAECD,sB,EAAqB;AAAA;AAAA,oBAFtB,6CAAAC,YAEsB;AAAA,S;AAFV,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCAxB;;;UA8CaC,e;;;;;yBAAAA,e;AAAc,O;;;cAAdA;;;mBAFA,CAAC,+CAAAC,cAAD,C;AAAgB,kBA3BlB,CACP,yCAAAC,gBADO,EAEP,qDAAAC,kBAFO,EAGP,8CAAAC,YAHO,EAIP,6CAAAC,WAJO,EAKP,6CAAAC,mBALO,EAMP,sDAAAC,cANO,EAOP,0DAAAC,kBAPO,EAQP,2DAAAC,kBARO,EASP,sDAAAC,cATO,EAUP,0DAAAC,iBAVO,EAWP,uDAAAC,eAXO,EAYP,qDAAAC,aAZO,EAaP,uDAAAC,eAbO,EAcP,qDAAAC,aAdO,EAeP,wDAAAC,gBAfO,EAgBP,uDAAAC,eAhBO,EAiBP,2DAAAC,mBAjBO,EAkBP,yDAAAC,iBAlBO,EAmBP,qDAAAC,aAnBO,EAoBP,qDAAAC,aApBO,EAqBP,sDAAAC,uBArBO,EAsBP,sDAAAxB,qBAtBO,EAuBP,iEAAAyB,wBAvBO,EAuBkB,wDAAAC,gBAvBlB,EAwBP,uCAAAC,aAxBO,EAwBO,kDAAAC,eAxBP,EAyBP,6DAAAC,qBAzBO,CA2BkB;;;;4HAEhB3B,e,EAAc;AAAA,yBApCvB,oEAAAlQ,qBAoCuB,EAnCvB,gEAAAgC,mBAmCuB,EAlCvB,kEAAA+L,oBAkCuB,EAjCvB,kEAAA1B,oBAiCuB,EAhCvB,kFAAAN,sBAgCuB;AAhCD,oBAItB,yCAAAqE,gBAJsB,EAKtB,qDAAAC,kBALsB,EAMtB,8CAAAC,YANsB,EAOtB,6CAAAC,WAPsB,EAQtB,6CAAAC,mBARsB,EAStB,sDAAAC,cATsB,EAUtB,0DAAAC,kBAVsB,EAWtB,2DAAAC,kBAXsB,EAYtB,sDAAAC,cAZsB,EAatB,0DAAAC,iBAbsB,EActB,uDAAAC,eAdsB,EAetB,qDAAAC,aAfsB,EAgBtB,uDAAAC,eAhBsB,EAiBtB,qDAAAC,aAjBsB,EAkBtB,wDAAAC,gBAlBsB,EAmBtB,uDAAAC,eAnBsB,EAoBtB,2DAAAC,mBApBsB,EAqBtB,yDAAAC,iBArBsB,EAsBtB,qDAAAC,aAtBsB,EAuBtB,qDAAAC,aAvBsB,EAwBtB,sDAAAC,uBAxBsB,EAyBtB,sDAAAxB,qBAzBsB,EA0BtB,iEAAAyB,wBA1BsB,EA0BG,wDAAAC,gBA1BH,EA2BtB,uCAAAC,aA3BsB,EA2BR,kDAAAC,eA3BQ,EA4BtB,6DAAAC,qBA5BsB;AAgCC,S;AAJF,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC7DZ1B,e;AAEX,iCAAoB2B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;iBAED,uBAAc;AACZ,mBAAO,KAAKA,IAAL,CACJ7Q,GADI,WACQ,uDAAA8Q,WAAA,OADR,6BAEJ5K,IAFI,CAGH,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHG,CAAP;AASD;;;iBAED,2BAAe;AACb,mBAAO,KAAKqQ,IAAL,CACN7Q,GADM,WACM,uDAAA8Q,WAAA,OADN,iCAEN5K,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,8BAAkB;AAChB,mBAAO,KAAKqQ,IAAL,CACN7Q,GADM,WACM,uDAAA8Q,WAAA,OADN,oCAEN5K,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,yBAAa;AACX,mBAAO,KAAKqQ,IAAL,CACN7Q,GADM,WACM,uDAAA8Q,WAAA,OADN,+BAEN5K,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,8BAAkB;AAChB,mBAAO,KAAKqQ,IAAL,CACN7Q,GADM,WACM,uDAAA8Q,WAAA,OADN,oCAEN5K,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,6BAAiB;AACf,mBAAO,KAAKqQ,IAAL,CACN7Q,GADM,WACM,uDAAA8Q,WAAA,OADN,mCAEN5K,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,yBAAa;AACX,mBAAO,KAAKqQ,IAAL,CACN7Q,GADM,WACM,uDAAA8Q,WAAA,OADN,+BAEN5K,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,4BAAmB2B,WAAnB,EAA+B5B,MAA/B,EAAqC;AACnC,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,oCACyD;AAAC3O,yBAAW,EAAXA,WAAD;AAAa5B,oBAAM,EAANA;AAAb,aADzD,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,gCAAuB4B,eAAvB,EAAuC7B,MAAvC,EAA6C;AAC3C,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,wCAC6D;AAAC1O,6BAAe,EAAfA,eAAD;AAAiB7B,oBAAM,EAANA;AAAjB,aAD7D,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,gCAAuB0C,SAAvB,EAAiC3C,MAAjC,EAAuC;AACrC,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,wCAC6D;AAAC5N,uBAAS,EAATA,SAAD;AAAW3C,oBAAM,EAANA;AAAX,aAD7D,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,2BAAkBwQ,uBAAlB,EAA0C/P,IAA1C,EAA+CI,QAA/C,EAAwDC,WAAxD,EAAoEC,UAApE,EAA+EC,gBAA/E,EAAgGC,UAAhG,EAA2GC,UAA3G,EAAsHuP,kBAAtH,EAAyIC,gBAAzI,EAA0JC,SAA1J,EAAoK5Q,MAApK,EAA0K;AACxK,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,mCACwD;AAACE,qCAAuB,EAAvBA,uBAAD;AAAyB/P,kBAAI,EAAJA,IAAzB;AAA8BI,sBAAQ,EAARA,QAA9B;AAAuCC,yBAAW,EAAXA,WAAvC;AAAmDC,wBAAU,EAAVA,UAAnD;AAA8DC,8BAAgB,EAAhBA,gBAA9D;AAA+EC,wBAAU,EAAVA,UAA/E;AAA0FC,wBAAU,EAAVA,UAA1F;AAAqGuP,gCAAkB,EAAlBA,kBAArG;AAAwHC,8BAAgB,EAAhBA,gBAAxH;AAAyIC,uBAAS,EAATA,SAAzI;AAAmJ5Q,oBAAM,EAANA;AAAnJ,aADxD,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,iCAAwBD,MAAxB,EAA8B;AAC5B,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,yCAC8D;AAACvQ,oBAAM,EAANA;AAAD,aAD9D,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,8BAAqBgM,WAArB,EAAiC2E,SAAjC,EAA2C5Q,MAA3C,EAAiD;AAC/C,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,sCAC2D;AAACtE,yBAAW,EAAXA,WAAD;AAAa2E,uBAAS,EAATA,SAAb;AAAuB5Q,oBAAM,EAANA;AAAvB,aAD3D,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX,qBAAOA,GAAP;AACD,aAFD,CAHK,CAAP;AAOD;;;iBAED,gCAAuBX,SAAvB,EAAiCU,MAAjC,EAAuC;AACrC,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,wCAC6D;AAACjR,uBAAS,EAATA,SAAD;AAAWU,oBAAM,EAANA;AAAX,aAD7D,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX,qBAAOA,GAAP;AACD,aAFD,CAHK,CAAP;AAOD;;;iBAED,qCAA4BwQ,uBAA5B,EAAoD/P,IAApD,EAAyDI,QAAzD,EAAkEC,WAAlE,EAA8EC,UAA9E,EAAyFC,gBAAzF,EAA0GC,UAA1G,EAAqHC,UAArH,EAAgIuP,kBAAhI,EAAmJC,gBAAnJ,EAAoKC,SAApK,EAA8K5Q,MAA9K,EAAoL;AAClL,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,6CACkE;AAACE,qCAAuB,EAAvBA,uBAAD;AAAyB/P,kBAAI,EAAJA,IAAzB;AAA8BI,sBAAQ,EAARA,QAA9B;AAAuCC,yBAAW,EAAXA,WAAvC;AAAmDC,wBAAU,EAAVA,UAAnD;AAA8DC,8BAAgB,EAAhBA,gBAA9D;AAA+EC,wBAAU,EAAVA,UAA/E;AAA0FC,wBAAU,EAAVA,UAA1F;AAAqGuP,gCAAkB,EAAlBA,kBAArG;AAAwHC,8BAAgB,EAAhBA,gBAAxH;AAAyIC,uBAAS,EAATA,SAAzI;AAAmJ5Q,oBAAM,EAANA;AAAnJ,aADlE,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX;AACA;AACA,qBAAOA,GAAP;AACD,aAJD,CAHK,CAAP;AASD;;;iBAED,qCAA4BX,SAA5B,EAAsCU,MAAtC,EAA4C;AAC1C,mBAAO,KAAKsQ,IAAL,CACNE,IADM,WACO,uDAAAD,WAAA,OADP,6CACkE;AAACjR,uBAAS,EAATA,SAAD;AAAWU,oBAAM,EAANA;AAAX,aADlE,EAEN2F,IAFM,CAGL,gDAAAE,GAAA,EAAI,UAAC5F,GAAD,EAAS;AACX,qBAAOA,GAAP;AACD,aAFD,CAHK,CAAP;AAOD;;;;;;;yBA9LU0O,e,EAAc,oH;AAAA,O;;;eAAdA,e;AAAc,iBAAdA,eAAc,K;AAAA,oBAFb","file":"src_app_admin_students_students_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"block-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n            <ul class=\"breadcrumb breadcrumb-style \">\r\n              <li class=\"breadcrumb-item\">\r\n                <h4 class=\"page-title\">Student Profile</h4>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Your content goes here  -->\r\n      <div class=\"row clearfix\">\r\n        <div class=\"col-lg-4 col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"m-b-20\">\r\n              <div class=\"contact-grid\">\r\n                <div class=\"profile-header bg-dark\">\r\n                  <div class=\"user-name\">{{studentData?.name}}</div>\r\n                  <div class=\"name-center\">{{studentData?.nricType}}</div>\r\n                </div>\r\n                <img src=\"{{studentData?.profile_img}}\" class=\"user-img\" alt=\"\">\r\n                <p>\r\n                  {{studentData?.address_nric}}\r\n                  <br />{{studentData?.state}}\r\n                </p>\r\n                <div>\r\n                  <span class=\"phone\">\r\n                    <i class=\"material-icons\">phone</i>{{studentData?.mobile_number}}</span>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-4\">\r\n                    <!-- <h5>564</h5>\r\n                    <small>Following</small> -->\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <h5>{{studentData?.status}}</h5>\r\n                    <small>Status</small>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <!-- <h5>565</h5>\r\n                    <small>Post</small> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"card\">\r\n            <mat-tab-group mat-align-tabs=\"start\">\r\n              <mat-tab label=\"About\">\r\n                <div class=\"p-4\">\r\n                  <p class=\"text-default\">Hello I am Sarah Smith a student in Sanjivni College Surat. I love\r\n                    to study with all my class friends and professors.</p>\r\n                  <ul class=\"list-group list-group-unbordered\">\r\n                    <li class=\"list-group-item\">\r\n                      <b>Gender </b>\r\n                      <div class=\"profile-desc-item float-end\">Female</div>\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                      <b>Lectures Taken </b>\r\n                      <div class=\"profile-desc-item float-end\">11k+</div>\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                      <b>Department </b>\r\n                      <div class=\"profile-desc-item float-end\">Computer Engineering</div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </mat-tab>\r\n              <mat-tab label=\"Skills\">\r\n                <ul class=\"list-unstyled p-4\">\r\n                  <li>\r\n                    <div>Study</div>\r\n                    <div class=\"progress skill-progress m-b-20\">\r\n                      <div class=\"progress-bar l-bg-green width-per-45\" role=\"progressbar\" aria-valuenow=\"45\"\r\n                        aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Cricket</div>\r\n                    <div class=\"progress skill-progress m-b-20\">\r\n                      <div class=\"progress-bar l-bg-orange width-per-38\" role=\"progressbar\" aria-valuenow=\"38\"\r\n                        aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Music</div>\r\n                    <div class=\"progress skill-progress m-b-20\">\r\n                      <div class=\"progress-bar l-bg-cyan width-per-39\" role=\"progressbar\" aria-valuenow=\"39\"\r\n                        aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Yoga</div>\r\n                    <div class=\"progress skill-progress m-b-20\">\r\n                      <div class=\"progress-bar l-bg-purple width-per-70\" role=\"progressbar\" aria-valuenow=\"70\"\r\n                        aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n          </div> -->\r\n        </div>\r\n  \r\n        <div class=\"col-lg-8 col-md-12\">\r\n          <div class=\"card\">\r\n            <mat-tab-group>\r\n              <mat-tab>\r\n                <ng-template mat-tab-label>\r\n                  <mat-icon class=\"example-tab-icon msr-2\">face</mat-icon>\r\n                  About Me\r\n                </ng-template>\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                  <div class=\"project_widget\">\r\n                    <div class=\"header\">\r\n                      <h2><strong>{{'STUDENT-REGISTRATION.SUBTITLE1' | translate}}</strong></h2>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                      <ul class=\"list-group list-group-unbordered\">\r\n                          <li class=\"list-group-item\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.NAME' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\">{{studentData?.name}}</div>\r\n                          </li>\r\n                          <li class=\"list-group-item\">\r\n                            <b> {{'STUDENT-REGISTRATION.LIST.IC-TYPE' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\">{{studentData?.nricType}}</div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentData.nric_number\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\">{{studentData?.nric_number}}</div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentData.passport_number\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\">{{studentData?.passport_number}}</div>\r\n                            </li>\r\n                            <li class=\"list-group-item\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.DOB' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\">{{studentData?.date_of_birth | date:'dd-MM-yyyy'}}</div>\r\n                            </li>\r\n                            <li class=\"list-group-item\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.GENDER' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\">{{studentData?.gender}}</div>\r\n                            </li>\r\n                            <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.PLACEBIRTH' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.placeBirth}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.NATIONALITY' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.country_name}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.address_nric}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.ADDRESS1' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.address1}}</div>\r\n                              </li>\r\n  \r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.ADDRESS2' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.address2}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.POSTAL-CODE' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.postal_code}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.CITY' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.city}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.STATE' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.state}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.email_id}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.mobile_number}}</div>\r\n                              </li>\r\n                              <li class=\"list-group-item\">\r\n                                <b>{{'STUDENT-REGISTRATION.LIST.RACE' | translate}} </b>\r\n                                <div class=\"profile-desc-item float-end\">{{studentData?.race}}</div>\r\n                              </li>\r\n                                <li class=\"list-group-item\" *ngIf=\"studentData.other_race\">\r\n                                  <b>{{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}} </b>\r\n                                  <div class=\"profile-desc-item float-end\">{{studentData?.other_race}}</div>\r\n                                </li>\r\n  \r\n                        </ul>\r\n                      <br>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                  <div class=\"project_widget\">\r\n                    <div class=\"header\">\r\n                      <h2><strong>Education</strong></h2>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                      <ul>\r\n                        <li>Schooling at sarvoday vidhyalay, Mumbai</li>\r\n                        <li>Betchler In Arts in Bhagvati College Hariyana</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                  <div class=\"project_widget\">\r\n                    <div class=\"header\">\r\n                      <h2><strong>Certificates</strong></h2>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                      <ul>\r\n                        <li>1st Prise in Music competition</li>\r\n                        <li>1st Prise in Acting & Drama</li>\r\n                        <li>Gold Medal in Betchler in Arts</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div> -->\r\n              </mat-tab>\r\n  \r\n              <mat-tab>\r\n                <ng-template mat-tab-label>\r\n                  <mat-icon class=\"example-tab-icon msr-2\">info</mat-icon>\r\n                  {{'STUDENT-REGISTRATION.SUBTITLE2' | translate}}\r\n                </ng-template>\r\n                <div class=\"header\">\r\n                  <h2>\r\n                    <strong>{{'STUDENT-REGISTRATION.SUBTITLE2' | translate}}</strong></h2>\r\n                </div>\r\n                <div class=\"body\">\r\n                    <ul class=\"list-group list-group-unbordered\">\r\n                        <li class=\"list-group-item\">\r\n                          <b>{{'STUDENT-REGISTRATION.LIST.PREFERENCE' | translate}} </b>\r\n                          <div class=\"profile-desc-item float-end\">{{studentData?.preference}}</div>\r\n                        </li>\r\n                        <li class=\"list-group-item\" *ngIf=\"studentData.emergency_number\">\r\n                          <b> {{'STUDENT-REGISTRATION.LIST.EMERGENCY-NAME' | translate}} </b>\r\n                          <div class=\"profile-desc-item float-end\">{{studentData?.emergency_name}}</div>\r\n                        </li>\r\n                        <li class=\"list-group-item\" *ngIf=\"studentData.emergency_number\">\r\n                          <b>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NUMBER' | translate}} </b>\r\n                          <div class=\"profile-desc-item float-end\">{{studentData?.emergency_number}}</div>\r\n                        </li>\r\n                        <li class=\"list-group-item\" *ngIf=\"studentData.user_name\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\">{{studentData?.user_name}}</div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentData.password\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\">{{studentData?.password}}</div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentData.existenceLicense\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\">{{studentData?.existenceLicense}}</div>\r\n                          </li>\r\n                          <li class=\"list-group-item\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\">{{studentData?.license_expiry_date | date:'dd-MM-yyyy'}}</div>\r\n                            </li>\r\n                      </ul>\r\n                    <br>\r\n                  </div>\r\n              </mat-tab>\r\n  \r\n              <mat-tab>\r\n                  <ng-template mat-tab-label>\r\n                    <mat-icon class=\"example-tab-icon msr-2\">file_present</mat-icon>\r\n                    {{'STUDENT-REGISTRATION.SUBTITLE4' | translate}}\r\n                  </ng-template>\r\n                  <div class=\"header\">\r\n                    <h2>\r\n                      <strong>{{'STUDENT-REGISTRATION.SUBTITLE4' | translate}}</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                      <ul class=\"list-group list-group-unbordered\"> \r\n                          <li class=\"list-group-item\" *ngIf=\"studentDocData?.nric_front\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.NRIC-FRONT' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\"><img src=\"{{studentDocData?.nric_front}}\" style=\"width:100%;height:100%\"></div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentDocData.nric_rear\">\r\n                            <b> {{'STUDENT-REGISTRATION.LIST.NRIC-REAR' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\"><img src=\"{{studentDocData?.nric_rear}}\" style=\"width:100%;height:100%\"></div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentDocData?.passport_front\">\r\n                            <b>{{'STUDENT-REGISTRATION.LIST.PASSPORT-FRONT' | translate}} </b>\r\n                            <div class=\"profile-desc-item float-end\"><img src=\"{{studentDocData?.passport_front}}\" style=\"width:100%;height:100%\"></div>\r\n                          </li>\r\n                          <li class=\"list-group-item\" *ngIf=\"studentDocData?.work_permit_front\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.WORK-PERMIT' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\"><img src=\"{{studentDocData?.work_permit_front}}\" style=\"width:100%;height:100%\"></div>\r\n                            </li>\r\n                            <li class=\"list-group-item\" *ngIf=\"studentDocData?.existing_license_front\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-FRONT' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\"><img src=\"{{studentDocData.existing_license_front}}\" style=\"width:100%;height:100%\"></div>\r\n                            </li>\r\n                            <li class=\"list-group-item\" *ngIf=\"studentDocData?.existing_license_rear\">\r\n                              <b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-REAR' | translate}} </b>\r\n                              <div class=\"profile-desc-item float-end\"><img src=\"{{studentDocData.existing_license_rear}}\" style=\"width:100%;height:100%\"></div>\r\n                            </li>\r\n                           \r\n                        </ul>  \r\n                      <br>\r\n                    </div>    \r\n                </mat-tab>\r\n            </mat-tab-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  ","import { Component, OnInit,ViewChild,ChangeDetectorRef } from '@angular/core';\r\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\r\nimport { StudentService } from '../students.service';\r\nimport { LanguageService } from '../../../core/service/language.service';\r\nimport {ConfirmDialogComponent} from '../add-student/confirm-dialog/confirm-dialog.component'\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr'; \r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport {Router,ActivatedRoute} from '@angular/router'\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-about-student',\r\n  templateUrl: './about-student.component.html',\r\n  styleUrls: ['./about-student.component.scss']\r\n})\r\nexport class AboutStudentComponent implements OnInit {\r\n\r\n  studentId;\r\n  studentData:any;\r\n  studentDocData:any;\r\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n  \r\n  constructor(\r\n    private cdRef:ChangeDetectorRef,private fb: FormBuilder,\r\n    private studentService:StudentService,private languageService:LanguageService,public dialog: MatDialog,\r\n    private modalService: NgbModal,private toastrService: ToastrService,private router: Router,\r\n    private route: ActivatedRoute,private spinner: NgxSpinnerService\r\n  ) {\r\n\r\n    this.studentId=this.route.snapshot.paramMap.get('id');\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n    this.languageService.languageChanged.subscribe(value => {\r\n      this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n      this.loadData();\r\n    })\r\n    \r\n  }\r\n\r\n  loadData(){\r\n    this.studentService.getParticularStudentDetails(this.studentId,sessionStorage.client)\r\n    .subscribe(res=>{\r\n        this.studentData=res['studData'][0];\r\n        console.log(this.studentData['nric_'+this.translateVal])\r\n        this.studentData['nricType']=this.studentData['nric_'+this.translateVal];\r\n        this.studentData['placeBirth']=this.studentData['place_'+this.translateVal];\r\n        this.studentData['race']=this.studentData['race_'+this.translateVal];\r\n        this.studentData['preference']=this.studentData['pref_'+this.translateVal];\r\n        this.studentData['existenceLicense']=this.studentData['existence_'+this.translateVal];\r\n        this.studentDocData=res['docData'][0];\r\n    })\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">{{'STUDENT-REGISTRATION.TITLE' | translate}}</h4>\r\n                        </li>\r\n                        <!-- <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Students</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Registration</li> -->\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>\r\n                        <strong>{{'STUDENT-REGISTRATION.TITLE' | translate}}</strong>\r\n                        </h2>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n                        <mat-step [stepControl]=\"personalDetailsForm\">\r\n                            <form [formGroup]=\"personalDetailsForm\">\r\n                            <ng-template matStepLabel>{{'STUDENT-REGISTRATION.SUBTITLE1' | translate}}</ng-template>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.NAME' | translate}}*</mat-label>\r\n                                        <input matInput formControlName=\"name\">\r\n                                        <mat-icon matSuffix>face</mat-icon>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('name').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.NAME' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.IC-TYPE' | translate}}</mat-label>\r\n                                        <input type=\"text\" matInput [formControl]=\"nricType\" [matAutocomplete]=\"autoIc\">\r\n                                        <mat-autocomplete #autoIc=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"getICTypeChange()\">\r\n                                        <mat-option *ngFor=\"let option of nricTypeList | async\" [value]=\"option\">\r\n                                            {{option[translateVal]}}\r\n                                        </mat-option>\r\n                                        </mat-autocomplete>\r\n                                        <mat-error *ngFor=\"let validation of validation_msgs.nricType\">\r\n                                            <div *ngIf=\"nricType.hasError(validation.type)\">\r\n                                              {{validation.message}}\r\n                                            </div>\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"nric_number\" mask=\"000000-00-0000\" [showMaskTyped]=\"true\" (blur)=\"getNRICNumberChange()\">\r\n                                        <mat-icon matSuffix>confirmation_number</mat-icon>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"passport_number\" [readonly]=\"personalDetailsForm.get('nric_number').value != ''\" [required]=\"personalDetailsForm.get('nric_number').value == ''\" (blur)=\"getPassportNumberChange()\">\r\n                                        <mat-icon matSuffix>confirmation_number</mat-icon>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('passport_number').hasError('required')\">\r\n                                            {{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}} is required \r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.DOB' | translate}}*</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"date_of_birth\">\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker></mat-datepicker>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('date_of_birth').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.DOB' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.GENDER' | translate}}*</mat-label>\r\n                                        <mat-select formControlName=\"gender\">\r\n                                            <mat-option value=\"Male\">Male</mat-option>\r\n                                            <mat-option value=\"Female\">Female</mat-option>\r\n                                            <mat-option value=\"Others\">Others</mat-option>\r\n                                          </mat-select>\r\n                                          <mat-error *ngIf=\"personalDetailsForm.get('gender').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.GENDER' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                                <mat-label>{{'STUDENT-REGISTRATION.LIST.PLACEBIRTH' | translate}}*</mat-label>\r\n                                                <input type=\"text\" matInput [formControl]=\"placeBirth\" [matAutocomplete]=\"autoPlaceBirth\">\r\n                                                <mat-autocomplete #autoPlaceBirth=\"matAutocomplete\" [displayWith]=\"displayFnPlaceBirth\">\r\n                                                <mat-option *ngFor=\"let option of placeBirthList | async\" [value]=\"option\">\r\n                                                    {{option[translateVal]}}\r\n                                                </mat-option>\r\n                                                </mat-autocomplete>\r\n                                                <mat-error *ngFor=\"let validation of validation_msgs.placeBirth\">\r\n                                                    <div *ngIf=\"placeBirth.hasError(validation.type)\">\r\n                                                      {{validation.message}}\r\n                                                    </div>\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.NATIONALITY' | translate}}*</mat-label>\r\n                                        <input type=\"text\" matInput [formControl]=\"nationality\" [matAutocomplete]=\"autoNation\">\r\n                                        <mat-autocomplete #autoNation=\"matAutocomplete\" [displayWith]=\"displayFnNationality\" (optionSelected)=\"getNationalityChange()\">\r\n                                        <mat-option *ngFor=\"let option of nationalityList | async\" [value]=\"option\">\r\n                                            {{option.country_name}}\r\n                                        </mat-option>\r\n                                        </mat-autocomplete>\r\n                                        <mat-error *ngFor=\"let validation of validation_msgs.nationality\">\r\n                                            <div *ngIf=\"nationality.hasError(validation.type)\">\r\n                                              {{validation.message}}\r\n                                            </div>\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}}*</mat-label>\r\n                                        <input matInput formControlName=\"ic_address\">\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('ic_address').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.ADDRESS1' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"address1\" >\r\n                                        \r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.ADDRESS2' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"address2\">\r\n                                        \r\n                                    </mat-form-field>\r\n                                    </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.POSTAL-CODE' | translate}}*</mat-label>\r\n                                        <input type=\"text\" matInput [formControl]=\"postalCode\" [matAutocomplete]=\"autoPostalCode\" >\r\n                                        <mat-autocomplete #autoPostalCode=\"matAutocomplete\" [displayWith]=\"displayFnPostalCode\" (optionSelected)=\"getPostalCodeChange()\">\r\n                                        <mat-option *ngFor=\"let option of postalCodeList | async\" [value]=\"option\">\r\n                                            {{option.postal_code}}\r\n                                        </mat-option>\r\n                                        </mat-autocomplete>\r\n                                        <mat-error *ngFor=\"let validation of validation_msgs.postalCode\">\r\n                                            <div *ngIf=\"postalCode.hasError(validation.type)\">\r\n                                              {{validation.message}}\r\n                                            </div>\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.CITY' | translate}}*</mat-label>\r\n                                        <input matInput formControlName=\"city\">\r\n                                        <mat-icon matSuffix>location_city</mat-icon>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('city').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.CITY' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.STATE' | translate}}*</mat-label>\r\n                                        <input matInput formControlName=\"state\">\r\n                                        <mat-icon matSuffix>business</mat-icon>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('state').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.STATE' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}*</mat-label>\r\n                                        <input matInput formControlName=\"email_address\">\r\n                                        <mat-icon matSuffix>email</mat-icon>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('email_address').hasError('email') && personalDetailsForm.get('email_address').touched\">\r\n                                            Please enter a valid {{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}}*</mat-label>\r\n                                        <input matInput formControlName=\"mobile_number\" prefix=\"+6\" mask=\"0000000000000\">\r\n                                        <mat-icon matSuffix>phone</mat-icon>\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('mobile_number').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.RACE' | translate}}*</mat-label>\r\n                                        <!-- <input matInput formControlName=\"race\" required> -->\r\n                                        <!-- <mat-icon matSuffix>face</mat-icon> -->\r\n                                            <input type=\"text\" matInput [formControl]=\"race\" [matAutocomplete]=\"autoRace\">\r\n                                            <mat-autocomplete #autoRace=\"matAutocomplete\" [displayWith]=\"displayFnRace\" (optionSelected)=\"onSelectionChange($event)\">\r\n                                            <mat-option *ngFor=\"let raceoption of raceList | async\" [value]=\"raceoption\">\r\n                                                {{raceoption[translateVal]}}\r\n                                            </mat-option>\r\n                                            </mat-autocomplete>\r\n                                            <mat-error *ngFor=\"let validation of validation_msgs.race\">\r\n                                                <div *ngIf=\"race.hasError(validation.type)\">\r\n                                                    {{validation.message}}\r\n                                                </div>\r\n                                            </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\" *ngIf=\"showOtherRace == true\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"other_race\" [required]=\"showOtherRace\">\r\n                                        <mat-error *ngIf=\"personalDetailsForm.get('other_race').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button mat-raised-button matStepperNext color=\"primary\"\r\n                                 [disabled]=\"!personalDetailsForm.valid || !race.valid || !nricType.valid || !nationality.valid || !postalCode.valid  || !placeBirth.valid\" (click)=\"getPersonalDetails()\">{{'BUTTON.NEXT-BTN' | translate}}</button>\r\n                            </div>\r\n                            </form>\r\n                        </mat-step>\r\n                        <mat-step>\r\n                            <form [formGroup]=\"preferenceForm\">\r\n                            <ng-template matStepLabel>{{'STUDENT-REGISTRATION.SUBTITLE2' | translate}}</ng-template>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.PREFERENCE' | translate}}*</mat-label>\r\n                                        <input type=\"text\" matInput [formControl]=\"preference\" [matAutocomplete]=\"autoPreference\">\r\n                                        <mat-autocomplete #autoPreference=\"matAutocomplete\" [displayWith]=\"displayFnPreference\">\r\n                                        <mat-option *ngFor=\"let raceoption of preferenceList | async\" [value]=\"raceoption\">\r\n                                            {{raceoption[translateVal]}}\r\n                                        </mat-option>\r\n                                        </mat-autocomplete>\r\n                                        <mat-error *ngFor=\"let validation of validation_msgs.preference\">\r\n                                            <div *ngIf=\"preference.hasError(validation.type)\">\r\n                                              {{validation.message}}\r\n                                            </div>\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NAME' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"emergency_name\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NUMBER' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"emergency_number\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE' | translate}}</mat-label>\r\n                                            <input type=\"text\" matInput [formControl]=\"existing_license\" [matAutocomplete]=\"autoLicense\">\r\n                                            <mat-autocomplete #autoLicense=\"matAutocomplete\" [displayWith]=\"displayFnExistingLicense\">\r\n                                            <mat-option *ngFor=\"let raceoption of existingLicenseList | async\" [value]=\"raceoption\">\r\n                                                {{raceoption[translateVal]}}\r\n                                            </mat-option>\r\n                                            </mat-autocomplete>\r\n                                            <mat-error *ngFor=\"let validation of validation_msgs.existing_license\">\r\n                                                <div *ngIf=\"existing_license.hasError(validation.type)\">\r\n                                                  {{validation.message}}\r\n                                                </div>\r\n                                            </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"user_name\" required>\r\n                                        <mat-error *ngIf=\"preferenceForm.get('user_name').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}}</mat-label>\r\n                                        <input matInput formControlName=\"password\"\r\n                                            [type]=\"hide ? 'password' : 'text'\" required>\r\n                                            <a\r\n                                            class=\"show-pwd-icon\"\r\n                                            href=\"#\"\r\n                                            onClick=\"return false;\"\r\n                                            matSuffix\r\n                                            (click)=\"hide = !hide\"\r\n                                            [attr.aria-label]=\"'Hide password'\"\r\n                                            [attr.aria-pressed]=\"hide\"\r\n                                        > <mat-icon>{{\r\n                                                hide ? \"visibility_off\" : \"visibility\"\r\n                                          }}</mat-icon></a>\r\n                                        <mat-error *ngIf=\"preferenceForm.get('password').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\" *ngIf=\"existing_license.valid\">\r\n                                <div class=\"col-4\">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>{{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}}</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"expiry_date\" [required]=\"existing_license.valid\">\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\" ></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"preferenceForm.get('expiry_date').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}} is required \r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button mat-raised-button matStepperPrevious color=\"warn\" class=\"msr-2\">{{'BUTTON.BACK-BTN' | translate}}</button>\r\n                                <button mat-raised-button  color=\"primary\"\r\n                                [disabled]=\"!preferenceForm.valid || !preference.valid\" (click)=\"getPreferenceDetails(stepper)\">{{'BUTTON.NEXT-BTN' | translate}}</button>\r\n                            </div>\r\n                            </form>\r\n                        </mat-step>\r\n                        <mat-step [stepControl]=\"documentForm\">\r\n                            <form [formGroup]=\"documentForm\">\r\n                            <ng-template matStepLabel>{{'STUDENT-REGISTRATION.SUBTITLE3' | translate}}</ng-template>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                  <div class=\"row\">\r\n                                        <div class=\"col-6\">\r\n                                            <img src=\"{{photo_preview}}\" *ngIf=\"photo_preview\" style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': photo_preview,\r\n                                            'col-12': !photo_preview\r\n                                        }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"photo_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.PHOTO' | translate}}\" (change)=\"onFileChangePhoto($event,'photo')\" required>\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentForm.get('photo').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.PHOTO' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                   </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\">\r\n                                            <img src=\"{{nric_front_preview}}\" *ngIf=\"nric_front_preview\" style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': nric_front_preview,\r\n                                            'col-12': !nric_front_preview\r\n                                        }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"nric_front_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.NRIC-FRONT' | translate}}\" (change)=\"onFileChangePhoto($event,'nric_front')\" [required]=\"personalDetailsForm.get('nric_number').value != ''\">\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentForm.get('nric_front').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.NRIC-FRONT' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\">\r\n                                            <img src=\"{{nric_rear_preview}}\" *ngIf=\"nric_rear_preview\" style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': nric_rear_preview,\r\n                                            'col-12': !nric_rear_preview\r\n                                        }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"nric_rear_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.NRIC-REAR' | translate}}\" (change)=\"onFileChangePhoto($event,'nric_rear')\" [required]=\"personalDetailsForm.get('nric_number').value != ''\">\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentForm.get('nric_rear').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.NRIC-REAR' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\"><br/></div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\">\r\n                                            <img src=\"{{passport_front_preview}}\" *ngIf=\"passport_front_preview\" style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': passport_front_preview,\r\n                                            'col-12': !passport_front_preview\r\n                                        }\">\r\n                                        <mat-form-field class=\"example-full-width\">\r\n                                            <ngx-mat-file-input formControlName=\"passport_front_name\"  placeholder=\"{{'STUDENT-REGISTRATION.LIST.PASSPORT-FRONT' | translate}}\" (change)=\"onFileChangePhoto($event,'passport_front')\" [required]=\"personalDetailsForm.get('passport_number').value !=''\">\r\n                                            </ngx-mat-file-input>\r\n                                            <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                            <mat-error *ngIf=\"documentForm.get('passport_front').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.PASSPORT-FRONT' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                         </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\" *ngIf=\"work_permit_preview\">\r\n                                            <img src=\"{{work_permit_preview}}\"  style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': work_permit_preview,\r\n                                            'col-12': !work_permit_preview\r\n                                        }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"work_permit_name\"  placeholder=\"{{'STUDENT-REGISTRATION.LIST.WORK-PERMIT' | translate}}\" (change)=\"onFileChangePhoto($event,'work_permit')\" [required]=\"nricType.value.id == 5\">\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentForm.get('work_permit').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.WORK-PERMIT' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                          </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\" *ngIf=\"existing_license_front_preview\">\r\n                                            <img src=\"{{existing_license_front_preview}}\"  style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': existing_license_front_preview,\r\n                                            'col-12': !existing_license_front_preview\r\n                                        }\">\r\n                                        <mat-form-field class=\"example-full-width\">\r\n                                            <ngx-mat-file-input formControlName=\"existing_license_front_name\"  placeholder=\"{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-FRONT' | translate}}\" (change)=\"onFileChangePhoto($event,'existing_license_front')\" [required]=\"existing_license.valid\">\r\n                                            </ngx-mat-file-input>\r\n                                            <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                            <mat-error *ngIf=\"documentForm.get('existing_license_front').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-FRONT' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\"><br/></div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\" *ngIf=\"existing_license_rear_preview\">\r\n                                            <img src=\"{{existing_license_rear_preview}}\"  style=\"width:100%;height:100%\">\r\n                                        </div>\r\n                                        <div [ngClass]=\"{\r\n                                            'col-6': existing_license_rear_preview,\r\n                                            'col-12': !existing_license_rear_preview\r\n                                        }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"existing_license_rear_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-REAR' | translate}}\" (change)=\"onFileChangePhoto($event,'existing_license_rear')\" [required]=\"existing_license.valid\">\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentForm.get('existing_license_rear').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-REAR' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div><br/>\r\n                            <div>\r\n                            <button mat-raised-button matStepperPrevious color=\"warn\" class=\"msr-2\">{{'BUTTON.NEXT-BTN' | translate}}</button>\r\n                            <button mat-raised-button color=\"primary\" (click)=\"saveStudentData(showStudent)\" [disabled]=\"!documentForm.valid\">{{'BUTTON.ADD-BTN' | translate}}</button>\r\n                            </div>\r\n                        </form>\r\n                        </mat-step>\r\n                        </mat-horizontal-stepper>\r\n                    </div>\r\n                        <!-- <div class=\"row\">\r\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <button class=\"btn-space\" [disabled]=\"!stdForm.valid \" mat-raised-button\r\n                                    color=\"primary\">Submit</button>\r\n                                <button type=\"button\" mat-button>Cancel</button>\r\n                            </div>\r\n                        </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<ng-template #showStudent let-modal>\r\n        <div class=\"modal-header deleteRowModal\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\r\n            <div class=\"modal-about\">\r\n                <div class=\"font-weight-bold p-t-10 font-17\">\r\n                    {{'STUDENT-REGISTRATION.CONFIRMTITLE' | translate}}</div>\r\n            </div>\r\n            </div>\r\n        </h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\r\n        </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <h5 style=\"text-align:center\">{{'STUDENT-REGISTRATION.SUBTITLE1' | translate}}</h5>\r\n                <ul class=\"clearfix\">\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"> <b>{{'STUDENT-REGISTRATION.LIST.NAME' | translate}}:  </b></span><span>{{confirmPersonalData.name}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.IC-TYPE' | translate}}: </b></span><span>{{nricType.value[translateVal]}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}}: </b></span><span>{{confirmPersonalData.nric_number}}</span></p>\r\n                    </li>\r\n                    <li *ngIf=\"confirmPersonalData.passport_number\">\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}}: </b></span><span>{{confirmPersonalData.passport_number}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.DOB' | translate}}: </b></span><span>{{confirmPersonalData.date_of_birth | date:'dd/MM/yyyy'}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.GENDER' | translate}}: </b></span><span>{{confirmPersonalData.gender}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PLACEBIRTH' | translate}}: </b></span><span>{{placeBirth.value[translateVal]}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.NATIONALITY' | translate}}: </b></span><span>{{nationality.value.country_name}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}}: </b></span><span>{{confirmPersonalData.ic_address}}</span></p>\r\n                    </li>\r\n                    <li *ngIf=\"confirmPersonalData.address1\">\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.ADDRESS1' | translate}}: </b></span><span>{{confirmPersonalData.address1}}</span></p>\r\n                    </li>\r\n                    <li *ngIf=\"confirmPersonalData.address2\">\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.ADDRESS2' | translate}}: </b></span><span>{{confirmPersonalData.address2}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.POSTAL-CODE' | translate}}: </b></span><span>{{postalCode.value.postal_code}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.CITY' | translate}}: </b></span><span>{{confirmPersonalData.city}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.STATE' | translate}}: </b></span><span>{{confirmPersonalData.state}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}: </b></span><span>{{confirmPersonalData.email_address}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}}: </b></span><span>{{confirmPersonalData.mobile_number}}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.RACE' | translate}}: </b></span> <span>{{race.value[translateVal]}}</span></p>\r\n                    </li>\r\n                    <li  *ngIf=\"confirmPersonalData.other_race\">\r\n                        <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}}: </b></span><span>{{confirmPersonalData.other_race}}</span></p>\r\n                    </li>\r\n                </ul>\r\n                <h5 style=\"text-align:center\">{{'STUDENT-REGISTRATION.SUBTITLE2' | translate}}</h5>\r\n                    <ul class=\"clearfix\">\r\n                        <li *ngIf=\"preference.value[translateVal]\">\r\n                            <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.PREFERENCE' | translate}}: </b></span><span>{{preference.value[translateVal]}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmPreferenceData.emergency_name\">\r\n                            <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.EMERGENCY-NAME' | translate}}: </b></span><span>{{confirmPreferenceData.emergency_name}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmPreferenceData.emergency_number\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NUMBER' | translate}}: </b></span><span>{{confirmPreferenceData.emergency_number}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmPreferenceData.user_name\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}}: </b></span><span>{{confirmPreferenceData.user_name}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmPreferenceData.password\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}}: </b></span><span>{{confirmPreferenceData.password}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"existing_license.value[translateVal]\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE' | translate}}: </b></span><span>{{existing_license.value[translateVal]}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmPreferenceData.expiry_date\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}}: </b></span><span>{{confirmPreferenceData.expiry_date | date:'dd/MM/yyyy'}}</span></p>\r\n                        </li>\r\n                    </ul>\r\n                    <h5 style=\"text-align:center\">{{'STUDENT-REGISTRATION.SUBTITLE3' | translate}}</h5>\r\n                    <ul class=\"clearfix\">\r\n                        <li *ngIf=\"confirmDocumentData.photo_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.PHOTO' | translate}}: </b></span><span>{{confirmDocumentData.photo_name._fileNames}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmDocumentData.nric_front_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.NRIC-FRONT' | translate}}: </b></span><span>{{confirmDocumentData.nric_front_name._fileNames}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmDocumentData.nric_rear_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.NRIC-REAR' | translate}}: </b></span><span>{{confirmDocumentData.nric_rear_name._fileNames}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmDocumentData.passport_front_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PASSPORT-FRONT' | translate}}:</b> </span><span>{{confirmDocumentData.passport_front_name._fileNames}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmDocumentData.work_permit_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.WORK-PERMIT' | translate}}: </b></span><span>{{confirmDocumentData.work_permit_name._fileNames}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmDocumentData.existing_license_front_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-FRONT' | translate}}: </b></span><span>{{confirmDocumentData.existing_license_front_name._fileNames}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"confirmDocumentData.existing_license_rear_name._fileNames\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-REAR' | translate}}: </b></span><span>{{confirmDocumentData.existing_license_rear_name._fileNames}}</span></p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            <div class=\"modal-footer\">\r\n            <div class=\"button-demo\">\r\n                <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"setConfirmStudentDetails()\">{{'BUTTON.COFIRM-BTN' | translate}}</button>\r\n                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\r\n            </div>\r\n            </div>\r\n    </ng-template>","import { Component, OnInit,ViewChild,ChangeDetectorRef } from '@angular/core';\r\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\r\nimport { StudentService } from '../students.service';\r\nimport { LanguageService } from '../../../core/service/language.service';\r\nimport {ConfirmDialogComponent} from '../add-student/confirm-dialog/confirm-dialog.component'\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.sass']\r\n})\r\n\r\n\r\n\r\nexport class AddStudentComponent  implements OnInit{\r\n\r\n  isLinear = false;\r\n  personalDetailsForm: FormGroup;\r\n  preferenceForm: FormGroup;\r\n  documentForm:FormGroup;\r\n  raceData: any;\r\n  nricTypeData:any;\r\n  nationalityData:any;\r\n  postalCodeData:any;\r\n  existingLicenseData:any;\r\n  preferenceData:any;\r\n  placeBirthData:any;\r\n\r\n  race = new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n  nricType = new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] }); \r\n  nationality= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });  \r\n  postalCode= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n  existing_license= new FormControl('', { validators: [autocompleteObjectValidator()] });\r\n  preference=new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n  placeBirth=new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n\r\n  raceList: Observable<string[]>;\r\n  nricTypeList: Observable<string[]>;\r\n  nationalityList: Observable<string[]>;\r\n  postalCodeList: Observable<string[]>;\r\n  existingLicenseList: Observable<string[]>;\r\n  preferenceList: Observable<string[]>;\r\n  placeBirthList: Observable<string[]>;\r\n  resultOptions: Observable<any>;\r\n\r\n\r\n  photo_preview;\r\n  nric_front_preview;\r\n  nric_rear_preview;\r\n  passport_front_preview;\r\n  work_permit_preview;\r\n  existing_license_front_preview;\r\n  existing_license_rear_preview;\r\n  confirmDocumentData;\r\n  confirmPersonalData;\r\n  confirmPreferenceData;\r\n\r\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n  \r\n  hide = true;\r\n  showOtherRace=false;\r\n\r\n  public validation_msgs = {\r\n    'race': [\r\n      { type: 'invalidAutocompleteObject', message: 'Race not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Race is required.' }\r\n    ],\r\n    'nricType': [\r\n      { type: 'invalidAutocompleteObject', message: 'NRIC Type not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'NRIC Type is required.' }\r\n    ],\r\n    'nationality': [\r\n      { type: 'invalidAutocompleteObject', message: 'Nationality not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Nationality is required.' }\r\n    ],\r\n    'postalCode': [\r\n      { type: 'invalidAutocompleteObject', message: 'Postal Code not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Postal Code is required.' }\r\n    ],\r\n    'existing_license': [\r\n      { type: 'invalidAutocompleteObject', message: 'Existing License not recognized. Click one of the options.' }\r\n    ],\r\n    'preference': [\r\n      { type: 'invalidAutocompleteObject', message: 'Prefered Language not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Prefered Language is required.' }\r\n    ],\r\n    'placeBirth': [\r\n      { type: 'invalidAutocompleteObject', message: 'Place Of Birth not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Place Of Birth is required.' }\r\n    ]\r\n  }\r\n  \r\n\r\n  constructor(private cdRef:ChangeDetectorRef,private fb: FormBuilder,\r\n    private studentService:StudentService,private languageService:LanguageService,public dialog: MatDialog,\r\n    private modalService: NgbModal,private toastrService: ToastrService) {\r\n    this.personalDetailsForm = this.fb.group({\r\n      name: ['',[Validators.required]],\r\n      nric_number: [''],\r\n      passport_number: [''], \r\n      gender:['', Validators.required],\r\n      ic_address: ['', Validators.required],\r\n      address1: [''],\r\n      address2: [''],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      email_address: ['', [Validators.required, Validators.email, Validators.minLength(5)]],\r\n      mobile_number: ['', Validators.required],\r\n      other_race: [''],\r\n      date_of_birth: ['', Validators.required],\r\n    });\r\n    this.preferenceForm = this.fb.group({\r\n      emergency_name: [''],\r\n      emergency_number: [''],\r\n      user_name: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      expiry_date:['']\r\n    });\r\n    this.documentForm= new FormGroup({\r\n      photo: new FormControl('',Validators.required),\r\n      photo_name: new FormControl('',Validators.required),\r\n      nric_front: new FormControl(''),\r\n      nric_front_name: new FormControl(''),\r\n      nric_rear: new FormControl(''),\r\n      nric_rear_name: new FormControl(''),\r\n      passport_front: new FormControl(''),\r\n      passport_front_name: new FormControl(''),\r\n      work_permit: new FormControl(''),\r\n      work_permit_name: new FormControl(''),\r\n      existing_license_front: new FormControl(''),\r\n      existing_license_front_name: new FormControl(''),\r\n      existing_license_rear: new FormControl(''),\r\n      existing_license_rear_name: new FormControl(''),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.getNRICTypeList();\r\n      this.getRaceList();\r\n      this.getNationalityList();\r\n      this.getExistingLicense();\r\n      this.getPreferenceList();\r\n      this.getPostalCode();\r\n      this.getPlaceBirth();\r\n      this.languageService.languageChanged.subscribe(value => {\r\n        this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n        this.getNRICTypeList();\r\n        this.getRaceList();\r\n        this.getNationalityList();\r\n        this.getExistingLicense();\r\n        this.getPreferenceList();\r\n        this.getPlaceBirth();\r\n      })\r\n\r\n      if(localStorage.PersonalDetails){\r\n        var localPersonalData=JSON.parse(localStorage.PersonalDetails);\r\n        this.personalDetailsForm.patchValue({\r\n          name: localPersonalData.name,\r\n          nric_number: localPersonalData.nric_number,\r\n          passport_number: localPersonalData.passport_number, \r\n          gender:localPersonalData.gender,\r\n          ic_address:localPersonalData.ic_address,\r\n          address1: localPersonalData.address1,\r\n          address2: localPersonalData.address2,\r\n          city: localPersonalData.city,\r\n          state: localPersonalData.state,\r\n          email_address: localPersonalData.email_address,\r\n          mobile_number: localPersonalData.mobile_number,\r\n          other_race: localPersonalData.other_race,\r\n          date_of_birth: localPersonalData.date_of_birth,\r\n        })\r\n      }\r\n\r\n      if(localStorage.race){\r\n       this.race.setValue(JSON.parse(localStorage.race));\r\n      }\r\n\r\n      if(localStorage.nricType){\r\n        this.nricType.setValue(JSON.parse(localStorage.nricType));\r\n       }\r\n\r\n       if(localStorage.nationality){\r\n        this.nationality.setValue(JSON.parse(localStorage.nationality));\r\n       }\r\n\r\n       if(localStorage.placeBirth){\r\n        this.placeBirth.setValue(JSON.parse(localStorage.placeBirth));\r\n       }\r\n\r\n       if(localStorage.postalCode){\r\n        this.postalCode.setValue(JSON.parse(localStorage.postalCode));\r\n       }\r\n\r\n       if(localStorage.PreferenceDetails){\r\n        this.confirmPreferenceData=JSON.parse(localStorage.PreferenceDetails)\r\n        var localPreferenceData=JSON.parse(localStorage.PreferenceDetails)\r\n        this.preferenceForm.patchValue({\r\n          emergency_name: localPreferenceData.emergency_name,\r\n          emergency_number: localPreferenceData.emergency_number,\r\n          user_name: localPreferenceData.user_name,\r\n          password: localPreferenceData.password,\r\n          expiry_date:localPreferenceData.expiry_date\r\n        })\r\n       }\r\n\r\n       if(localStorage.preference){\r\n        this.preference.setValue(JSON.parse(localStorage.preference));\r\n       }\r\n       \r\n       if(localStorage.existing_license){\r\n        this.existing_license.setValue(JSON.parse(localStorage.existing_license));\r\n       }\r\n\r\n       if(localStorage.documentDetails){\r\n         var localDocumentData=JSON.parse(localStorage.documentDetails);\r\n         this.documentForm.patchValue({\r\n          photo: localDocumentData.photo,\r\n          photo_name: localDocumentData.photo_name,\r\n          nric_front: localDocumentData.nric_front,\r\n          nric_front_name: localDocumentData.nric_front_name,\r\n          nric_rear: localDocumentData.nric_rear,\r\n          nric_rear_name: localDocumentData.nric_rear_name,\r\n          passport_front: localDocumentData.passport_front,\r\n          passport_front_name: localDocumentData.passport_front_name,\r\n          work_permit: localDocumentData.work_permit,\r\n          work_permit_name: localDocumentData.work_permit_name,\r\n          existing_license_front: localDocumentData.existing_license_front,\r\n          existing_license_front_name: localDocumentData.existing_license_front_name,\r\n          existing_license_rear: localDocumentData.existing_license_rear,\r\n          existing_license_rear_name: localDocumentData.existing_license_rear_name,\r\n         })\r\n\r\n         this.photo_preview=localDocumentData.photo;\r\n         this.nric_front_preview=localDocumentData.nric_front;\r\n         this.nric_rear_preview=localDocumentData.nric_rear;\r\n         this.passport_front_preview=localDocumentData.passport_front;\r\n         this.work_permit_preview=localDocumentData.work_permit;\r\n         this.existing_license_front_preview= localDocumentData.existing_license_front;\r\n         this.existing_license_rear_preview= localDocumentData.existing_license_rear;\r\n       }\r\n\r\n       console.log(\"confirmDocumentData===\",this.confirmDocumentData)\r\n     \r\n  }\r\n\r\n  getRaceList(){   \r\n    this.raceData=[];\r\n    this.studentService.getRaceList()\r\n      .subscribe(res=>{\r\n        this.raceData=res;\r\n        console.log(\"this.raceData====\",this.raceData);\r\n        this.raceList = this.race.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterRace(name) : this.raceData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getNRICTypeList(){\r\n    this.nricTypeData=[]\r\n    this.studentService.getNRICTypeList()\r\n      .subscribe(res=>{\r\n        this.nricTypeData=res;\r\n        this.nricTypeList = this.nricType.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterNRIC(name) : this.nricTypeData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getPostalCode(){\r\n    this.nricTypeData=[]\r\n    this.studentService.getPostalCode()\r\n      .subscribe(res=>{\r\n        this.postalCodeData=res;\r\n        this.postalCodeList = this.postalCode.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value.postal_code)),\r\n          map(name => (name ? this._filterPostalCode(name) : this.postalCodeData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getNationalityList(){\r\n    this.studentService.getNationalityList()\r\n      .subscribe(res=>{\r\n        this.nationalityData=res;\r\n        this.nationalityList = this.nationality.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value.country_name)),\r\n          map(name => (name ? this._filterNationality(name) : this.nationalityData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getExistingLicense(){\r\n    this.studentService.getExistingLicense()\r\n      .subscribe(res=>{\r\n        this.existingLicenseData=res;\r\n        this.existingLicenseList = this.existing_license.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterExistingLicense(name) : this.existingLicenseData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getPreferenceList(){\r\n    this.studentService.getPreferenceList()\r\n      .subscribe(res=>{\r\n        this.preferenceData=res;\r\n        this.preferenceList = this.preference.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterPreference(name) : this.preferenceData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  \r\n  getPlaceBirth(){\r\n    this.placeBirthData=[]\r\n    this.studentService.getPlaceBirth()\r\n      .subscribe(res=>{\r\n        this.placeBirthData=res;\r\n        this.placeBirthList = this.placeBirth.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterPlaceBirth(name) : this.placeBirthData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  displayFn(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnRace(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnNationality(user): string {\r\n    return user && user.country_name ? user.country_name : '';\r\n  }\r\n\r\n  displayFnPostalCode(user): string {\r\n    return user && user.postal_code ? user.postal_code : '';\r\n  }\r\n\r\n  displayFnExistingLicense(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnPreference(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnPlaceBirth(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  private _filterRace(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.raceData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterNRIC(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nricTypeData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterNationality(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nationalityData.filter(option => option.country_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  \r\n  private _filterPostalCode(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.postalCodeData.filter(option => option.postal_code.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  private _filterExistingLicense(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.existingLicenseData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  private _filterPreference(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.preferenceData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  \r\n  private _filterPlaceBirth(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.placeBirthData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  onSelectionChange(event){\r\n    console.log('onSelectionChange called', event.option.value);\r\n    if(event.option.value.id === 4){\r\n      this.showOtherRace=true;\r\n    }else{\r\n      this.showOtherRace=false;\r\n    }\r\n  }\r\n\r\n  getICTypeChange(){\r\n    console.log(\"---\",this.personalDetailsForm.value.nric_number,this.nricType);\r\n    const restrictList=[1,2,6]\r\n    // this.personalDetailsForm.value.nric_number.charAt(this.personalDetailsForm.value.nric_number.length-1)\r\n    if(restrictList.indexOf(this.nricType.value.id) >= 0){\r\n      if((this.personalDetailsForm.value.nric_number.charAt(this.personalDetailsForm.value.nric_number.length-1)) % 2 == 0){\r\n        this.personalDetailsForm.patchValue({gender:\"Female\"})\r\n      }else{\r\n        this.personalDetailsForm.patchValue({gender:\"Male\"})\r\n      }\r\n    }else{\r\n      this.personalDetailsForm.patchValue({gender:\"\"})\r\n    }\r\n  }\r\n\r\n  getNRICNumberChange(){\r\n    console.log(\"---\",(this.personalDetailsForm.value.nric_number).substr(2,2));\r\n    this.studentService.checkNRICExistence(this.personalDetailsForm.value.nric_number,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'New'){\r\n        console.log((this.personalDetailsForm.value.nric_number).substr(2,2)+\"/\"+(this.personalDetailsForm.value.nric_number).substr(4,2)+\"/\"+(this.personalDetailsForm.value.nric_number).substr(0,2))\r\n        this.personalDetailsForm.patchValue({date_of_birth:new Date((this.personalDetailsForm.value.nric_number).substr(2,2)+\"/\"+(this.personalDetailsForm.value.nric_number).substr(4,2)+\"/\"+(this.personalDetailsForm.value.nric_number).substr(0,2))})\r\n        const restrictList=[1,2,6]\r\n        // this.personalDetailsForm.value.nric_number.charAt(this.personalDetailsForm.value.nric_number.length-1)\r\n        if(restrictList.indexOf(this.nricType.value.id) >= 0){\r\n          if((this.personalDetailsForm.value.nric_number.charAt(this.personalDetailsForm.value.nric_number.length-1)) % 2 == 0){\r\n            this.personalDetailsForm.patchValue({gender:\"Female\"})\r\n          }else{\r\n            this.personalDetailsForm.patchValue({gender:\"Male\"})\r\n          }\r\n        }else{\r\n          this.personalDetailsForm.patchValue({gender:\"\"})\r\n        }\r\n      }else{\r\n        this.toastrService.error(\"NRIC Number Already Exists\");\r\n        this.personalDetailsForm.value.nric_number='';\r\n      }\r\n    \r\n    })\r\n   \r\n  }\r\n\r\n  getPassportNumberChange(){\r\n    this.studentService.checkPassportExistence(this.personalDetailsForm.value.passport_number,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'New'){\r\n      }else{\r\n        this.toastrService.error(\"Passport Number Already Exists\");\r\n        this.personalDetailsForm.value.passport_number='';\r\n      }\r\n    })\r\n  }\r\n\r\n  getPostalCodeChange(){\r\n    console.log(\"postalCode===\",this.postalCode.value);\r\n    this.personalDetailsForm.patchValue({\r\n      city:this.postalCode.value.city,\r\n      state:this.postalCode.value.state,\r\n    })\r\n\r\n  }\r\n\r\n  getNationalityChange(){\r\n    console.log(\"getNationalityChange===\",this.nationality.value);\r\n\r\n  }\r\n\r\n  getPersonalDetails(){\r\n    console.log(\"------personal form--------\",this.race);\r\n    localStorage.setItem('PersonalDetails',JSON.stringify(this.personalDetailsForm.value));\r\n    localStorage.setItem('race',JSON.stringify(this.race.value));\r\n    localStorage.setItem('nricType',JSON.stringify(this.nricType.value))\r\n    localStorage.setItem('nationality',JSON.stringify(this.nationality.value))\r\n    localStorage.setItem('postalCode',JSON.stringify(this.postalCode.value))\r\n    localStorage.setItem('placeBirth',JSON.stringify(this.placeBirth.value))\r\n  }\r\n\r\n  getPreferenceDetails(stepper: MatStepper){\r\n    console.log(\"------personal form--------\",this.race);\r\n    this.studentService.checkUsernameExistence(this.preferenceForm.value.user_name,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'New'){\r\n        localStorage.setItem('PreferenceDetails',JSON.stringify(this.preferenceForm.value));\r\n        localStorage.setItem('preference',JSON.stringify(this.preference.value));\r\n        localStorage.setItem('existing_license',JSON.stringify(this.existing_license.value));\r\n        stepper.next();\r\n      }else{\r\n        this.toastrService.error(\"User Name Already Exists\");\r\n        this.preferenceForm.value.user_name='';\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  onFileChangePhoto(event,filetype) { \r\n    const reader = new FileReader();\r\n    if (event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        console.log(\"-----\",this[filetype+'_preview']);\r\n        this[filetype+'_preview']=reader.result;\r\n        this.documentForm.patchValue({\r\n          [filetype]:reader.result\r\n        })\r\n        console.log(\"this.documentForm===\",this.documentForm)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  saveStudentData(showStudent) {\r\n    localStorage.setItem('documentDetails',JSON.stringify(this.documentForm.value));\r\n    this.confirmPreferenceData=JSON.parse(localStorage.PreferenceDetails);\r\n    this.confirmPersonalData=JSON.parse(localStorage.PersonalDetails);\r\n    this.confirmDocumentData=JSON.parse(localStorage.documentDetails);\r\n    this.modalService.open(showStudent, { ariaLabelledBy: 'modal-basic-title' });\r\n    // const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n    //   // data: row,\r\n    //   // direction: tempDirection,\r\n    // });\r\n  }\r\n\r\n\r\n  setConfirmStudentDetails(){\r\n    this.studentService.setStudentDetails(this.personalDetailsForm.value,this.race.value,this.nricType.value,this.nationality.value,this.postalCode.value,this.existing_license.value,this.preference.value,this.placeBirth.value,this.preferenceForm.value,this.documentForm.value,sessionStorage.currentUser,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'Success'){\r\n        this.toastrService.success(\"Registered Successfully!!\");\r\n        this.modalService.dismissAll();\r\n        localStorage.removeItem('PersonalDetails');\r\n        localStorage.removeItem('race');\r\n        localStorage.removeItem('nricType');\r\n        localStorage.removeItem('nationality');\r\n        localStorage.removeItem('postalCode');\r\n        localStorage.removeItem('placeBirth');\r\n        localStorage.removeItem('PreferenceDetails');\r\n        localStorage.removeItem('preference');\r\n        localStorage.removeItem('existing_license');\r\n        localStorage.removeItem('documentDetails');\r\n        this.personalDetailsForm.reset();\r\n        this.preferenceForm.reset();\r\n        this.documentForm.reset();\r\n        this.race.setValue('');\r\n        this.nricType.setValue(''); \r\n        this.nationality.setValue('');  \r\n        this.postalCode.setValue('');\r\n        this.existing_license.setValue('');\r\n        this.preference.setValue('');\r\n        this.placeBirth.setValue('');\r\n        this.photo_preview='';\r\n        this.nric_front_preview='';\r\n        this.nric_rear_preview='';\r\n        this.passport_front_preview='';\r\n        this.work_permit_preview='';\r\n        this.existing_license_front_preview= '';\r\n        this.existing_license_rear_preview='';\r\n      }\r\n        \r\n    })\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { StudentService } from '../../students.service';\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.html',\r\n  styleUrls: ['./confirm-dialog.sass']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public studentsService: StudentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    // this.studentsService.deleteStudents(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Name: </span></p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Department: </span></p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Mobile: </span>\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","<section class=\"content\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"block-header\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <ul class=\"breadcrumb breadcrumb-style \">\r\n                  <li class=\"breadcrumb-item\">\r\n                    <h4 class=\"page-title\">{{'STUDENT-REGISTRATION.LISTTITLE' | translate}}</h4>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                  <div class=\"mt-5\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                      <div class=\"card\">\r\n                        <div class=\"body\">\r\n                          <div class=\"table-responsive\">\r\n                            <div class=\"materialTableHeader\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-8\">\r\n                                  <ul class=\"header-buttons-left ml-0\">\r\n                                    <li class=\"dropdown\">\r\n                                      <h2>\r\n                                        <strong>{{'STUDENT-REGISTRATION.LISTTITLE' | translate}}</strong></h2>\r\n                                    </li>\r\n                                    <li class=\"dropdown m-l-20\">\r\n                                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                                        <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\r\n                                        (keyup)='filterDatatable($event)' aria-label=\"Search box\">\r\n                                    </li>\r\n                                    <li>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                  <ul class=\"header-buttons\">\r\n                                    <li>\r\n                                      <div class=\"icon-button-demo\">\r\n                                        <button mat-mini-fab color=\"primary\" (click)=\"addNewStudent()\">\r\n                                          <mat-icon class=\"col-white\">add</mat-icon>\r\n                                        </button>\r\n                                      </div>\r\n                                    </li>\r\n                                    <li>\r\n                                      <div class=\"icon-button-demo\">\r\n                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                                          <mat-icon class=\"col-white\">refresh\r\n                                          </mat-icon>\r\n                                        </button>\r\n                                      </div>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\r\n                            [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\r\n                            <!-- user image -->\r\n                            <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"profile_img\" [width]=\"100\">\r\n                            <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\r\n                                <td class=\"table-img padding-0\">\r\n                                <img width=\"40\" src=\"{{ value ? value : 'assets/images/nologo.png' }}\" />\r\n                                </td>\r\n                            </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}}\" prop=\"nric_number\" [width]=\"130\"></ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}}\" prop=\"passport_number\" [width]=\"200\"></ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.GENDER' | translate}}\" prop=\"gender\" [width]=\"200\"></ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}}\" prop=\"mobile_number\" [width]=\"200\"></ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}\" prop=\"email_id\" [width]=\"200\"></ngx-datatable-column>\r\n                            \r\n                            <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\r\n                                            </ngx-datatable-column> -->\r\n                            <!-- action buttons -->\r\n                            <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.ACTIONS' | translate}}\" sortable=\"false\" [width]=\"120\">\r\n                            <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\r\n                                <span>\r\n                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='viewStudent(row, rowIndex)'>\r\n                                    <mat-icon aria-label=\"View\" class=\"col-white\">visibility\r\n                                    </mat-icon>\r\n                                </button>\r\n                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editStudent(row, rowIndex)'>\r\n                                    <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\r\n                                    </mat-icon>\r\n                                </button>\r\n                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteStudent(row,rowIndex, deleteRecord)'>\r\n                                    <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\r\n                                    </mat-icon>\r\n                                </button>\r\n                                </span>\r\n                            </ng-template>\r\n                            </ngx-datatable-column>\r\n                        </ngx-datatable>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <ng-template #deleteRecord let-modal>\r\n          <div class=\"modal-header deleteRowModal\">\r\n          <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\r\n              <div class=\"modal-about\">\r\n                  <div class=\"font-weight-bold p-t-10 font-17\">\r\n                    {{'STUDENT-REGISTRATION.DELETETITLE' | translate}}</div>\r\n              </div>\r\n              </div>\r\n          </h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n              <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\r\n          </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n              <p>{{'BUTTON.CONFIRMATION' | translate}}</p>\r\n              <div class=\"modal-footer\">\r\n              <div class=\"button-demo\">\r\n                  <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deleteStudentDetails()\">{{'BUTTON.DEL-BTN' | translate}}</button>\r\n                  <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\r\n              </div>\r\n              </div>\r\n          </div>\r\n      </ng-template>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { StudentService } from '../students.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-all-students',\r\n  templateUrl: './all-students.component.html',\r\n  styleUrls: ['./all-students.component.sass'],\r\n})\r\nexport class AllStudentsComponent\r\n  implements OnInit\r\n{\r\n  columns = [\r\n    { name: 'Name' },\r\n    { name: 'NRIC Number' },\r\n    { name: 'Passport Number' },\r\n    {name: 'Gender'},\r\n    {name: 'Mobile'},\r\n    {name: 'Email'},\r\n  ]; \r\n  data=[];\r\n  filteredData = [];\r\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n  rowToDelete;\r\n\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public studentsService: StudentService,\r\n    private snackBar: MatSnackBar,private router: Router,\r\n    private modalService: NgbModal,\r\n    private toastrService:ToastrService\r\n  ) {\r\n  }\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  \r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n\r\n  addNewStudent() {\r\n    this.router.navigate(['/admin/students/add-student'])\r\n  }\r\n\r\n  public loadData() {\r\n      this.studentsService.getStudentListPerClient(sessionStorage.client)\r\n      .subscribe(res=>{\r\n        this.data=res['data'];\r\n        this.filteredData=res['data'];\r\n        \r\n      })\r\n  }\r\n\r\n  filterDatatable(event) {\r\n    // get the value of the key pressed and make it lowercase\r\n    const val = event.target.value.toLowerCase();\r\n    // get the amount of columns in the table\r\n    const colsAmt = this.columns.length;\r\n    // get the key names of each column in the dataset\r\n    const keys = Object.keys(this.filteredData[0]);\r\n    // assign filtered matches to the active datatable\r\n    this.data = this.filteredData.filter(function (item) {\r\n      // iterate through each row's column data\r\n      for (let i = 0; i < colsAmt; i++) {\r\n        // check for a match\r\n        if (\r\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\r\n          !val\r\n        ) {\r\n          // found match, return true to add to result set\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    // whenever the filter changes, always go back to the first page\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  editStudent(row, rowIndex){\r\n    console.log(\"rowww===\",row);\r\n    this.router.navigate(['/admin/students/edit-student',row.id]);\r\n  }\r\n\r\n  deleteStudent(row, rowIndex, deleteRecord){\r\n    this.modalService.open(deleteRecord, { ariaLabelledBy: 'modal-basic-title' });\r\n    this.rowToDelete=row;\r\n  }\r\n\r\n  deleteStudentDetails(){\r\n    this.studentsService.deleteStudentDetails(this.rowToDelete,sessionStorage.currentUser,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'Success'){\r\n        this.toastrService.success('Deleted Successfully!!!');\r\n        this.modalService.dismissAll();\r\n        this.loadData();\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  viewStudent(row, rowIndex){\r\n    this.router.navigate(['/admin/students/about-student',row.id]);\r\n  }\r\n}\r\n","<ngx-spinner\r\nbdColor=\"rgba(51,51,51,0.8)\"\r\nsize=\"medium\"\r\ncolor=\"#fff\"\r\ntype=\"ball-scale-multiple\"\r\n>\r\n<p style=\"font-size: 20px; color: white\">Loading...</p>\r\n</ngx-spinner>\r\n\r\n<section class=\"content\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"block-header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                        <ul class=\"breadcrumb breadcrumb-style \">\r\n                            <li class=\"breadcrumb-item\">\r\n                                <h4 class=\"page-title\">{{'STUDENT-REGISTRATION.TITLE' | translate}}</h4>\r\n                            </li>\r\n                            <!-- <li class=\"breadcrumb-item bcrumb-1\">\r\n                                <a routerLink=\"/admin/dashboard/main\">\r\n                                    <i class=\"fas fa-home\"></i> Home</a>\r\n                            </li>\r\n                            <li class=\"breadcrumb-item bcrumb-2\">\r\n                                <a href=\"#\" onClick=\"return false;\">Students</a>\r\n                            </li>\r\n                            <li class=\"breadcrumb-item active\">Registration</li> -->\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row clearfix\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"header\">\r\n                            <h2>\r\n                            <strong>{{'STUDENT-REGISTRATION.TITLE' | translate}}</strong>\r\n                            </h2>\r\n                        </div>\r\n                        <div class=\"body\">\r\n                            <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n                            <mat-step [stepControl]=\"personalDetailsEditForm\">\r\n                                <form [formGroup]=\"personalDetailsEditForm\">\r\n                                <ng-template matStepLabel>{{'STUDENT-REGISTRATION.SUBTITLE1' | translate}}</ng-template>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.NAME' | translate}}*</mat-label>\r\n                                            <input matInput formControlName=\"name\">\r\n                                            <mat-icon matSuffix>face</mat-icon>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('name').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.NAME' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.IC-TYPE' | translate}}</mat-label>\r\n                                            <input type=\"text\" matInput [formControl]=\"nricType\" [matAutocomplete]=\"autoIc\">\r\n                                            <mat-autocomplete #autoIc=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"getICTypeChange()\">\r\n                                            <mat-option *ngFor=\"let option of nricTypeList | async\" [value]=\"option\">\r\n                                                {{option[translateVal]}}\r\n                                            </mat-option>\r\n                                            </mat-autocomplete>\r\n                                            <mat-error *ngFor=\"let validation of validation_msgs.nricType\">\r\n                                                <div *ngIf=\"nricType.hasError(validation.type)\">\r\n                                                  {{validation.message}}\r\n                                                </div>\r\n                                            </mat-error>\r\n                                          </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"nric_number\" mask=\"000000-00-0000\" [showMaskTyped]=\"true\" (blur)=\"getNRICNumberChange()\">\r\n                                            <mat-icon matSuffix>confirmation_number</mat-icon>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"passport_number\" [readonly]=\"personalDetailsEditForm.get('nric_number').value != ''\" [required]=\"personalDetailsEditForm.get('nric_number').value == ''\" (blur)=\"getPassportNumberChange()\">\r\n                                            <mat-icon matSuffix>confirmation_number</mat-icon>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('passport_number').hasError('required')\">\r\n                                                {{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}} is required \r\n                                        </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.DOB' | translate}}*</mat-label>\r\n                                            <input matInput [matDatepicker]=\"picker\" formControlName=\"date_of_birth\">\r\n                                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #picker></mat-datepicker>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('date_of_birth').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.DOB' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.GENDER' | translate}}*</mat-label>\r\n                                            <mat-select formControlName=\"gender\">\r\n                                                <mat-option value=\"Male\">Male</mat-option>\r\n                                                <mat-option value=\"Female\">Female</mat-option>\r\n                                                <mat-option value=\"Others\">Others</mat-option>\r\n                                              </mat-select>\r\n                                              <mat-error *ngIf=\"personalDetailsEditForm.get('gender').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.GENDER' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                        <div class=\"col-4\">\r\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                                    <mat-label>{{'STUDENT-REGISTRATION.LIST.PLACEBIRTH' | translate}}*</mat-label>\r\n                                                    <input type=\"text\" matInput [formControl]=\"placeBirth\" [matAutocomplete]=\"autoPlaceBirth\">\r\n                                                    <mat-autocomplete #autoPlaceBirth=\"matAutocomplete\" [displayWith]=\"displayFnPlaceBirth\">\r\n                                                    <mat-option *ngFor=\"let option of placeBirthList | async\" [value]=\"option\">\r\n                                                        {{option[translateVal]}}\r\n                                                    </mat-option>\r\n                                                    </mat-autocomplete>\r\n                                                    <mat-error *ngFor=\"let validation of validation_msgs.placeBirth\">\r\n                                                        <div *ngIf=\"placeBirth.hasError(validation.type)\">\r\n                                                          {{validation.message}}\r\n                                                        </div>\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.NATIONALITY' | translate}}*</mat-label>\r\n                                            <input type=\"text\" matInput [formControl]=\"nationality\" [matAutocomplete]=\"autoNation\">\r\n                                            <mat-autocomplete #autoNation=\"matAutocomplete\" [displayWith]=\"displayFnNationality\">\r\n                                            <mat-option *ngFor=\"let option of nationalityList | async\" [value]=\"option\">\r\n                                                {{option.country_name}}\r\n                                            </mat-option>\r\n                                            </mat-autocomplete>\r\n                                            <mat-error *ngFor=\"let validation of validation_msgs.nationality\">\r\n                                                <div *ngIf=\"nationality.hasError(validation.type)\">\r\n                                                  {{validation.message}}\r\n                                                </div>\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}}*</mat-label>\r\n                                            <input matInput formControlName=\"ic_address\">\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('ic_address').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.ADDRESS1' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"address1\">\r\n                                            \r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.ADDRESS2' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"address2\">\r\n                                            \r\n                                        </mat-form-field>\r\n                                        </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.POSTAL-CODE' | translate}}*</mat-label>\r\n                                            <input type=\"text\" matInput [formControl]=\"postalCode\" [matAutocomplete]=\"autoPostalCode\">\r\n                                            <mat-autocomplete #autoPostalCode=\"matAutocomplete\" [displayWith]=\"displayFnPostalCode\"  (optionSelected)=\"getPostalCodeChange()\">\r\n                                            <mat-option *ngFor=\"let option of postalCodeList | async\" [value]=\"option\">\r\n                                                {{option.postal_code}}\r\n                                            </mat-option>\r\n                                            </mat-autocomplete>\r\n                                            <mat-error *ngFor=\"let validation of validation_msgs.postalCode\">\r\n                                                <div *ngIf=\"postalCode.hasError(validation.type)\">\r\n                                                  {{validation.message}}\r\n                                                </div>\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.CITY' | translate}}*</mat-label>\r\n                                            <input matInput formControlName=\"city\">\r\n                                            <mat-icon matSuffix>location_city</mat-icon>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('city').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.CITY' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.STATE' | translate}}*</mat-label>\r\n                                            <input matInput formControlName=\"state\">\r\n                                            <mat-icon matSuffix>business</mat-icon>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('state').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.STATE' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}*</mat-label>\r\n                                            <input matInput formControlName=\"email_address\">\r\n                                            <mat-icon matSuffix>email</mat-icon>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('email_address').hasError('email') && personalDetailsEditForm.get('email_address').touched\">\r\n                                                Please enter a valid email address \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}}*</mat-label>\r\n                                            <input matInput formControlName=\"mobile_number\" prefix=\"+6\" mask=\"0000000000000\">\r\n                                            <mat-icon matSuffix>phone</mat-icon>\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('mobile_number').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.RACE' | translate}}*</mat-label>\r\n                                            <!-- <input matInput formControlName=\"race\" required> -->\r\n                                            <!-- <mat-icon matSuffix>face</mat-icon> -->\r\n                                                <input type=\"text\" matInput [formControl]=\"race\" [matAutocomplete]=\"autoRace\">\r\n                                                <mat-autocomplete #autoRace=\"matAutocomplete\" [displayWith]=\"displayFnRace\" (optionSelected)=\"onSelectionChange($event)\">\r\n                                                <mat-option *ngFor=\"let raceoption of raceList | async\" [value]=\"raceoption\">\r\n                                                    {{raceoption[translateVal]}}\r\n                                                </mat-option>\r\n                                                </mat-autocomplete>\r\n                                                <mat-error *ngFor=\"let validation of validation_msgs.race\">\r\n                                                    <div *ngIf=\"race.hasError(validation.type)\">\r\n                                                        {{validation.message}}\r\n                                                    </div>\r\n                                                </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\" *ngIf=\"showOtherRace == true\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"other_race\" [required]=\"showOtherRace\">\r\n                                            <mat-error *ngIf=\"personalDetailsEditForm.get('other_race').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <button mat-raised-button matStepperNext color=\"primary\"\r\n                                     [disabled]=\"!personalDetailsEditForm.valid || !race.valid || !nricType.valid || !nationality.valid || !postalCode.valid  || !placeBirth.valid\">{{'BUTTON.NEXT-BTN' | translate}}</button>\r\n                                </div>\r\n                                </form>\r\n                            </mat-step>\r\n                            <mat-step>\r\n                                <form [formGroup]=\"preferenceEditForm\">\r\n                                <ng-template matStepLabel>{{'STUDENT-REGISTRATION.SUBTITLE2' | translate}}</ng-template>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.PREFERENCE' | translate}}*</mat-label>\r\n                                            <input type=\"text\" matInput [formControl]=\"preference\" [matAutocomplete]=\"autoPreference\">\r\n                                            <mat-autocomplete #autoPreference=\"matAutocomplete\" [displayWith]=\"displayFnPreference\">\r\n                                            <mat-option *ngFor=\"let raceoption of preferenceList | async\" [value]=\"raceoption\">\r\n                                                {{raceoption[translateVal]}}\r\n                                            </mat-option>\r\n                                            </mat-autocomplete>\r\n                                            <mat-error *ngFor=\"let validation of validation_msgs.preference\">\r\n                                                <div *ngIf=\"preference.hasError(validation.type)\">\r\n                                                  {{validation.message}}\r\n                                                </div>\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NAME' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"emergency_name\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NUMBER' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"emergency_number\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE' | translate}}</mat-label>\r\n                                                <input type=\"text\" matInput [formControl]=\"existing_license\" [matAutocomplete]=\"autoLicense\">\r\n                                                <mat-autocomplete #autoLicense=\"matAutocomplete\" [displayWith]=\"displayFnExistingLicense\">\r\n                                                <mat-option *ngFor=\"let raceoption of existingLicenseList | async\" [value]=\"raceoption\">\r\n                                                    {{raceoption[translateVal]}}\r\n                                                </mat-option>\r\n                                                </mat-autocomplete>\r\n                                                <mat-error *ngFor=\"let validation of validation_msgs.existing_license\">\r\n                                                    <div *ngIf=\"existing_license.hasError(validation.type)\">\r\n                                                      {{validation.message}}\r\n                                                    </div>\r\n                                                </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"user_name\" required>\r\n                                            <mat-error *ngIf=\"preferenceEditForm.get('user_name').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}}</mat-label>\r\n                                            <input matInput formControlName=\"password\"\r\n                                                [type]=\"hide ? 'password' : 'text'\" required>\r\n                                                <a\r\n                                                class=\"show-pwd-icon\"\r\n                                                href=\"#\"\r\n                                                onClick=\"return false;\"\r\n                                                matSuffix\r\n                                                (click)=\"hide = !hide\"\r\n                                                [attr.aria-label]=\"'Hide password'\"\r\n                                                [attr.aria-pressed]=\"hide\"\r\n                                            > <mat-icon>{{\r\n                                                    hide ? \"visibility_off\" : \"visibility\"\r\n                                              }}</mat-icon></a>\r\n                                            <mat-error *ngIf=\"preferenceEditForm.get('password').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" *ngIf=\"existing_license.valid\">\r\n                                    <div class=\"col-4\">\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <mat-label>{{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}}</mat-label>\r\n                                            <input matInput [matDatepicker]=\"picker1\" formControlName=\"expiry_date\" [required]=\"existing_license.valid\">\r\n                                            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ></mat-datepicker-toggle>\r\n                                            <mat-datepicker #picker1></mat-datepicker>\r\n                                            <mat-error *ngIf=\"preferenceEditForm.get('expiry_date').hasError('required')\">\r\n                                                    {{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}} is required \r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <button mat-raised-button matStepperPrevious color=\"warn\" class=\"msr-2\">{{'BUTTON.BACK-BTN' | translate}}</button>\r\n                                    <button mat-raised-button  color=\"primary\"\r\n                                    [disabled]=\"!preferenceEditForm.valid || !preference.valid\" (click)=\"getPreferenceDetails(stepper)\">{{'BUTTON.NEXT-BTN' | translate}}</button>\r\n                                </div>\r\n                                </form>\r\n                            </mat-step>\r\n                            <mat-step [stepControl]=\"documentEditForm\">\r\n                                <form [formGroup]=\"documentEditForm\">\r\n                                <ng-template matStepLabel>{{'STUDENT-REGISTRATION.SUBTITLE3' | translate}}</ng-template>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                      <div class=\"row\">\r\n                                            <div class=\"col-6\">\r\n                                                <img src=\"{{documentEditForm.value.photo}}\" *ngIf=\"documentEditForm.value.photo\" style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.photo,\r\n                                                'col-12': !documentEditForm.value.photo\r\n                                            }\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                    <ngx-mat-file-input formControlName=\"photo_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.PHOTO' | translate}}\" (change)=\"onFileChangePhoto($event,'photo')\" required>\r\n                                                    </ngx-mat-file-input>\r\n                                                    <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                    <mat-error *ngIf=\"documentEditForm.get('photo').hasError('required')\">\r\n                                                            {{'STUDENT-REGISTRATION.LIST.PHOTO' | translate}} is required \r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                       </div>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\">\r\n                                                <img src=\"{{documentEditForm.value.nric_front}}\" *ngIf=\"documentEditForm.value.nric_front\" style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.nric_front,\r\n                                                'col-12': !documentEditForm.value.nric_front\r\n                                            }\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                    <ngx-mat-file-input formControlName=\"nric_front_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.NRIC-FRONT' | translate}}\" (change)=\"onFileChangePhoto($event,'nric_front')\" [required]=\"personalDetailsEditForm.get('nric_number').value != ''\">\r\n                                                    </ngx-mat-file-input>\r\n                                                    <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                    <mat-error *ngIf=\"documentEditForm.get('nric_front').hasError('required')\">\r\n                                                            {{'STUDENT-REGISTRATION.LIST.NRIC-FRONT' | translate}} is required \r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\">\r\n                                                <img src=\"{{documentEditForm.value.nric_rear}}\" *ngIf=\"documentEditForm.value.nric_rear\" style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.nric_rear,\r\n                                                'col-12': !documentEditForm.value.nric_rear\r\n                                            }\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                    <ngx-mat-file-input formControlName=\"nric_rear_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.NRIC-REAR' | translate}}\" (change)=\"onFileChangePhoto($event,'nric_rear')\" [required]=\"personalDetailsEditForm.get('nric_number').value != ''\">\r\n                                                    </ngx-mat-file-input>\r\n                                                    <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                    <mat-error *ngIf=\"documentEditForm.get('nric_rear').hasError('required')\">\r\n                                                            {{'STUDENT-REGISTRATION.LIST.NRIC-REAR' | translate}} is required \r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\"><br/></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\">\r\n                                                <img src=\"{{documentEditForm.value.passport_front}}\" *ngIf=\"documentEditForm.value.passport_front\" style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.passport_front,\r\n                                                'col-12': !documentEditForm.value.passport_front\r\n                                            }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"passport_front_name\"  placeholder=\"{{'STUDENT-REGISTRATION.LIST.PASSPORT-FRONT' | translate}}\" (change)=\"onFileChangePhoto($event,'passport_front')\" [required]=\"personalDetailsEditForm.get('passport_number').value !=''\">\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentEditForm.get('passport_front').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.PASSPORT-FRONT' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                             </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\" *ngIf=\"documentEditForm.value.work_permit\">\r\n                                                <img src=\"{{documentEditForm.value.work_permit}}\"  style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.work_permit,\r\n                                                'col-12': !documentEditForm.value.work_permit\r\n                                            }\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                    <ngx-mat-file-input formControlName=\"work_permit_name\"  placeholder=\"{{'STUDENT-REGISTRATION.LIST.WORK-PERMIT' | translate}}\" (change)=\"onFileChangePhoto($event,'work_permit')\" [required]=\"nricType.value.id == 5\">\r\n                                                    </ngx-mat-file-input>\r\n                                                    <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                    <mat-error *ngIf=\"documentEditForm.get('work_permit').hasError('required')\">\r\n                                                            {{'STUDENT-REGISTRATION.LIST.WORK-PERMIT' | translate}} is required \r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                              </div>\r\n                                            </div>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\" *ngIf=\"documentEditForm.value.existing_license_front\">\r\n                                                <img src=\"{{documentEditForm.value.existing_license_front}}\"  style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.existing_license_front,\r\n                                                'col-12': !documentEditForm.value.existing_license_front\r\n                                            }\">\r\n                                            <mat-form-field class=\"example-full-width\">\r\n                                                <ngx-mat-file-input formControlName=\"existing_license_front_name\"  placeholder=\"{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-FRONT' | translate}}\" (change)=\"onFileChangePhoto($event,'existing_license_front')\" [required]=\"existing_license.valid\">\r\n                                                </ngx-mat-file-input>\r\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                <mat-error *ngIf=\"documentEditForm.get('existing_license_front').hasError('required')\">\r\n                                                        {{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-FRONT' | translate}} is required \r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\"><br/></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\" *ngIf=\"documentEditForm.value.existing_license_rear\">\r\n                                                <img src=\"{{documentEditForm.value.existing_license_rear}}\"  style=\"width:100%;height:100%\">\r\n                                            </div>\r\n                                            <div [ngClass]=\"{\r\n                                                'col-6': documentEditForm.value.existing_license_rear,\r\n                                                'col-12': !documentEditForm.value.existing_license_rear\r\n                                            }\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                    <ngx-mat-file-input formControlName=\"existing_license_rear_name\" placeholder=\"{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-REAR' | translate}}\" (change)=\"onFileChangePhoto($event,'existing_license_rear')\" [required]=\"existing_license.valid\">\r\n                                                    </ngx-mat-file-input>\r\n                                                    <mat-icon matSuffix>cloud_upload</mat-icon>\r\n                                                    <mat-error *ngIf=\"documentEditForm.get('existing_license_rear').hasError('required')\">\r\n                                                            {{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE-REAR' | translate}} is required \r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div><br/>\r\n                                <div>\r\n                                <button mat-raised-button matStepperPrevious color=\"warn\" class=\"msr-2\">{{'BUTTON.BACK-BTN' | translate}}</button>\r\n                                <button mat-raised-button color=\"primary\" (click)=\"saveStudentData(showStudent)\" [disabled]=\"!documentEditForm.valid\">{{'BUTTON.EDIT-BTN' | translate}}</button>\r\n                                </div>\r\n                            </form>\r\n                            </mat-step>\r\n                            </mat-horizontal-stepper>\r\n                        </div>\r\n                            <!-- <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"btn-space\" [disabled]=\"!stdForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    \r\n    \r\n    <ng-template #showStudent let-modal>\r\n            <div class=\"modal-header deleteRowModal\">\r\n            <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-10 font-17\">\r\n                        {{'STUDENT-REGISTRATION.CONFIRMTITLE' | translate}}</div>\r\n                </div>\r\n                </div>\r\n            </h4>\r\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n                <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\r\n            </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <h5 style=\"text-align:center\">{{'STUDENT-REGISTRATION.SUBTITLE1' | translate}}</h5>\r\n                    <ul class=\"clearfix\">\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"> <b>{{'STUDENT-REGISTRATION.LIST.NAME' | translate}}:  </b></span><span>{{personalDetailsEditForm.value.name}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.IC-TYPE' | translate}}: </b></span><span>{{nricType.value[translateVal]}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}}: </b></span><span>{{personalDetailsEditForm.value.nric_number}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"personalDetailsEditForm.value.passport_number\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}}: </b></span><span>{{personalDetailsEditForm.value.passport_number}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.DOB' | translate}}: </b></span><span>{{personalDetailsEditForm.value.date_of_birth | date:'dd/MM/yyyy'}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.GENDER' | translate}}: </b></span><span>{{personalDetailsEditForm.value.gender}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PLACEBIRTH' | translate}}: </b></span><span>{{placeBirth.value[translateVal]}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.NATIONALITY' | translate}}: </b></span><span>{{nationality.value.country_name}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.IC-ADDRESS' | translate}}: </b></span><span>{{personalDetailsEditForm.value.ic_address}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"personalDetailsEditForm.value.address1\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.ADDRESS1' | translate}}: </b></span><span>{{personalDetailsEditForm.value.address1}}</span></p>\r\n                        </li>\r\n                        <li *ngIf=\"personalDetailsEditForm.value.address2\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.ADDRESS2' | translate}}: </b></span><span>{{personalDetailsEditForm.value.address2}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.POSTAL-CODE' | translate}}: </b></span><span>{{postalCode.value.postal_code}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.CITY' | translate}}: </b></span><span>{{personalDetailsEditForm.value.city}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.STATE' | translate}}: </b></span><span>{{personalDetailsEditForm.value.state}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}: </b></span><span>{{personalDetailsEditForm.value.email_address}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}}: </b></span><span>{{personalDetailsEditForm.value.mobile_number}}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.RACE' | translate}}: </b></span> <span>{{race.value[translateVal]}}</span></p>\r\n                        </li>\r\n                        <li  *ngIf=\"personalDetailsEditForm.value.other_race\">\r\n                            <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.OTHERRACE' | translate}}: </b></span><span>{{personalDetailsEditForm.value.other_race}}</span></p>\r\n                        </li>\r\n                    </ul>\r\n                    <h5 style=\"text-align:center\">{{'STUDENT-REGISTRATION.SUBTITLE2' | translate}}</h5>\r\n                        <ul class=\"clearfix\">\r\n                            <li *ngIf=\"preference.value[translateVal]\">\r\n                                <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.PREFERENCE' | translate}}: </b></span><span>{{preference.value[translateVal]}}</span></p>\r\n                            </li>\r\n                            <li *ngIf=\"preferenceEditForm.value.emergency_name\">\r\n                                <p><span class=\"font-weight-bold\"><b> {{'STUDENT-REGISTRATION.LIST.EMERGENCY-NAME' | translate}}: </b></span><span>{{preferenceEditForm.value.emergency_name}}</span></p>\r\n                            </li>\r\n                            <li *ngIf=\"preferenceEditForm.value.emergency_number\">\r\n                                <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EMERGENCY-NUMBER' | translate}}: </b></span><span>{{preferenceEditForm.value.emergency_number}}</span></p>\r\n                            </li>\r\n                            <li *ngIf=\"preferenceEditForm.value.user_name\">\r\n                                <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.USERNAME' | translate}}: </b></span><span>{{preferenceEditForm.value.user_name}}</span></p>\r\n                            </li>\r\n                            <li *ngIf=\"preferenceEditForm.value.password\">\r\n                                <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.PASSWORD' | translate}}: </b></span><span>{{preferenceEditForm.value.password}}</span></p>\r\n                            </li>\r\n                            <li *ngIf=\"existing_license.value[translateVal]\">\r\n                                <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EXISTING-LICENSE' | translate}}: </b></span><span>{{existing_license.value[translateVal]}}</span></p>\r\n                            </li>\r\n                            <li *ngIf=\"preferenceEditForm.value.expiry_date\">\r\n                                <p><span class=\"font-weight-bold\"><b>{{'STUDENT-REGISTRATION.LIST.EXPIRYDATE' | translate}}: </b></span><span>{{preferenceEditForm.value.expiry_date | date:'dd/MM/yyyy'}}</span></p>\r\n                            </li>\r\n                        </ul>\r\n                       \r\n                    </div>\r\n                <div class=\"modal-footer\">\r\n                <div class=\"button-demo\">\r\n                    <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"updateConfirmStudentDetails()\">{{'BUTTON.CONFIRM-BTN' | translate}}</button>\r\n                    <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\r\n                </div>\r\n                </div>\r\n        </ng-template>","import { Component, OnInit,ViewChild,ChangeDetectorRef } from '@angular/core';\r\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\r\nimport { StudentService } from '../students.service';\r\nimport { LanguageService } from '../../../core/service/language.service';\r\nimport {ConfirmDialogComponent} from '../add-student/confirm-dialog/confirm-dialog.component'\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport {Router,ActivatedRoute} from '@angular/router'\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-student',\r\n  templateUrl: './edit-student.component.html',\r\n  styleUrls: ['./edit-student.component.sass'],\r\n})\r\nexport class EditStudentComponent {\r\n\r\n  isLinear = false;\r\n  personalDetailsEditForm: FormGroup;\r\n  preferenceEditForm: FormGroup;\r\n  documentEditForm:FormGroup;\r\n  raceData: any;\r\n  nricTypeData:any;\r\n  nationalityData:any;\r\n  postalCodeData:any;\r\n  existingLicenseData:any;\r\n  preferenceData:any;\r\n  placeBirthData:any;\r\n  studentId;\r\n\r\n  race = new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n  nricType = new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] }); \r\n  nationality= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });  \r\n  postalCode= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n  existing_license= new FormControl('', { validators: [autocompleteObjectValidator()] });\r\n  preference=new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n  placeBirth=new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });\r\n\r\n  raceList: Observable<string[]>;\r\n  nricTypeList: Observable<string[]>;\r\n  nationalityList: Observable<string[]>;\r\n  postalCodeList: Observable<string[]>;\r\n  existingLicenseList: Observable<string[]>;\r\n  preferenceList: Observable<string[]>;\r\n  placeBirthList: Observable<string[]>;\r\n  resultOptions: Observable<any>;\r\n\r\n\r\n  photo_preview;\r\n  nric_front_preview;\r\n  nric_rear_preview;\r\n  passport_front_preview;\r\n  work_permit_preview;\r\n  existing_license_front_preview;\r\n  existing_license_rear_preview;\r\n  confirmDocumentData;\r\n  confirmPersonalData;\r\n  confirmPreferenceData;\r\n\r\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n  \r\n  hide = true;\r\n  showOtherRace=false;\r\n\r\n  public validation_msgs = {\r\n    'race': [\r\n      { type: 'invalidAutocompleteObject', message: 'Race not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Race is required.' }\r\n    ],\r\n    'nricType': [\r\n      { type: 'invalidAutocompleteObject', message: 'NRIC Type not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'NRIC Type is required.' }\r\n    ],\r\n    'nationality': [\r\n      { type: 'invalidAutocompleteObject', message: 'Nationality not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Nationality is required.' }\r\n    ],\r\n    'postalCode': [\r\n      { type: 'invalidAutocompleteObject', message: 'Postal Code not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Postal Code is required.' }\r\n    ],\r\n    'existing_license': [\r\n      { type: 'invalidAutocompleteObject', message: 'Existing License not recognized. Click one of the options.' }\r\n    ],\r\n    'preference': [\r\n      { type: 'invalidAutocompleteObject', message: 'Prefered Language not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Prefered Language is required.' }\r\n    ],\r\n    'placeBirth': [\r\n      { type: 'invalidAutocompleteObject', message: 'Place Of Birth not recognized. Click one of the options.' },\r\n      { type: 'required', message: 'Place Of Birth is required.' }\r\n    ]\r\n  }\r\n\r\n\r\n  constructor(private cdRef:ChangeDetectorRef,private fb: FormBuilder,\r\n    private studentService:StudentService,private languageService:LanguageService,public dialog: MatDialog,\r\n    private modalService: NgbModal,private toastrService: ToastrService,private router: Router,\r\n    private route: ActivatedRoute,private spinner: NgxSpinnerService) {\r\n      \r\n    this.studentId=this.route.snapshot.paramMap.get('id');\r\n    this.personalDetailsEditForm = this.fb.group({\r\n      id:[''],\r\n      name: ['',[Validators.required]],\r\n      nric_number: [''],\r\n      passport_number: [''], \r\n      gender:['', Validators.required],\r\n      ic_address: ['', Validators.required],\r\n      address1: [''],\r\n      address2: [''],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      email_address: ['', [Validators.required, Validators.email, Validators.minLength(5)]],\r\n      mobile_number: ['', Validators.required],\r\n      other_race: [''],\r\n      date_of_birth: ['', Validators.required],\r\n    });\r\n    this.preferenceEditForm = this.fb.group({   \r\n      emergency_name: [''],\r\n      emergency_number: [''],\r\n      user_name: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      expiry_date:['']\r\n    });\r\n    this.documentEditForm= new FormGroup({\r\n      photo: new FormControl('',Validators.required),\r\n      photo_name: new FormControl('',Validators.required),\r\n      nric_front: new FormControl(''),\r\n      nric_front_name: new FormControl(''),\r\n      nric_rear: new FormControl(''),\r\n      nric_rear_name: new FormControl(''),\r\n      passport_front: new FormControl(''),\r\n      passport_front_name: new FormControl(''),\r\n      work_permit: new FormControl(''),\r\n      work_permit_name: new FormControl(''),\r\n      existing_license_front: new FormControl(''),\r\n      existing_license_front_name: new FormControl(''),\r\n      existing_license_rear: new FormControl(''),\r\n      existing_license_rear_name: new FormControl(''),\r\n    });\r\n\r\n    this.getNRICTypeList();\r\n    this.getRaceList();\r\n    this.getNationalityList();\r\n    this.getExistingLicense();\r\n    this.getPreferenceList();\r\n    this.getPostalCode();\r\n    this.getPlaceBirth();\r\n    this.languageService.languageChanged.subscribe(value => {\r\n      this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\r\n      this.getNRICTypeList();\r\n      this.getRaceList();\r\n      this.getNationalityList();\r\n      this.getExistingLicense();\r\n      this.getPreferenceList();\r\n      this.getPlaceBirth();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    setTimeout(()=>{\r\n      this.studentService.getStudentDetailToEdit(this.studentId,sessionStorage.client)\r\n      .subscribe(res=>{\r\n        this.spinner.hide();\r\n        let resObjStud=res['studData'][0];\r\n        console.log(\"resObjStud=====\",resObjStud);\r\n        let resObjDoc=res['docData'][0];\r\n          this.personalDetailsEditForm.patchValue({\r\n            id:resObjStud.id,\r\n            name: resObjStud.name,\r\n            nric_number:resObjStud.nric_number,\r\n            passport_number: resObjStud.passport_number, \r\n            gender:resObjStud.gender,\r\n            ic_address:resObjStud.address_nric,\r\n            address1:resObjStud.address1,\r\n            address2:resObjStud.address2,\r\n            city: resObjStud.city,\r\n            state: resObjStud.state,\r\n            email_address: resObjStud.email_id,\r\n            mobile_number: resObjStud.mobile_number,\r\n            other_race:resObjStud.other_race,\r\n            date_of_birth: resObjStud.date_of_birth,\r\n          });\r\n\r\n          this.preferenceEditForm.patchValue({\r\n            emergency_name: resObjStud.emergency_name,\r\n            emergency_number: resObjStud.emergency_number,\r\n            user_name: resObjStud.user_name,\r\n            password: resObjStud.password,\r\n            expiry_date:resObjStud.license_expiry_date\r\n          });\r\n\r\n          this.documentEditForm.patchValue({\r\n            photo: resObjStud.profile_img,\r\n            photo_name: resObjStud.profile_img,\r\n            nric_front: resObjDoc.nric_front,\r\n            nric_front_name: resObjDoc.nric_front,\r\n            nric_rear: resObjDoc.nric_rear,\r\n            nric_rear_name: resObjDoc.nric_rear,\r\n            passport_front: resObjDoc.passport_front,\r\n            passport_front_name: resObjDoc.passport_front,\r\n            work_permit: resObjDoc.work_permit_front,\r\n            work_permit_name: resObjDoc.work_permit_front,\r\n            existing_license_front: resObjDoc.existing_license_front,\r\n            existing_license_front_name: resObjDoc.existing_license_front,\r\n            existing_license_rear: resObjDoc.existing_license_rear,\r\n            existing_license_rear_name: resObjDoc.existing_license_rear,\r\n          });\r\n\r\nconsole.log(\"this.postalCodeData!!!!!!!!!!!!\",this.postalCodeData)\r\n          var raceObj=this.raceData.filter((elem)=>{return elem.id==resObjStud.race_id});\r\n          var nricObj=this.nricTypeData.filter((elem)=>{return elem.id==resObjStud.nric_type});\r\n          var nationalityObj=this.nationalityData.filter((elem)=>{return elem.id==resObjStud.nationality_id});\r\n          var postalObj=this.postalCodeData.filter((elem)=>{return elem.id==resObjStud.postalcode_id});\r\n          var placeBirthObj=this.placeBirthData.filter((elem)=>{return elem.id==resObjStud.placebirth_id});\r\n          var existsLicenseObj=this.existingLicenseData.filter((elem)=>{return elem.id==resObjStud.existing_license_id});\r\n          var prefObj=this.preferenceData.filter((elem)=>{return elem.id==resObjStud.prefered_lang_id});\r\n          this.race.setValue(raceObj[0]);\r\n          this.nricType.setValue(nricObj[0]);\r\n          this.nationality.setValue(nationalityObj[0]);\r\n          this.placeBirth.setValue(placeBirthObj[0]);\r\n          this.postalCode.setValue(postalObj[0]);\r\n          this.preference.setValue(prefObj[0]);\r\n          this.existing_license.setValue(existsLicenseObj[0]); \r\n          console.log(\"this.race===\",this.race);\r\n      });\r\n    },500)\r\n      \r\n     \r\n  }\r\n\r\n  getRaceList(){   \r\n    this.raceData=[];\r\n    this.studentService.getRaceList()\r\n      .subscribe(res=>{\r\n        this.raceData=res;\r\n        console.log(\"this.raceData====\",this.raceData);\r\n        this.raceList = this.race.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterRace(name) : this.raceData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getNRICTypeList(){\r\n    this.nricTypeData=[]\r\n    this.studentService.getNRICTypeList()\r\n      .subscribe(res=>{\r\n        this.nricTypeData=res;\r\n        this.nricTypeList = this.nricType.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterNRIC(name) : this.nricTypeData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getPostalCode(){\r\n    this.studentService.getPostalCode()\r\n      .subscribe(res=>{\r\n        this.postalCodeData=res;\r\n       console.log(\"this.postalCodeData===\",this.postalCodeData)\r\n        this.postalCodeList = this.postalCode.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value.postal_code)),\r\n          map(name => (name ? this._filterPostalCode(name) : this.postalCodeData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getNationalityList(){\r\n    this.studentService.getNationalityList()\r\n      .subscribe(res=>{\r\n        this.nationalityData=res;\r\n        this.nationalityList = this.nationality.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value.country_name)),\r\n          map(name => (name ? this._filterNationality(name) : this.nationalityData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getExistingLicense(){\r\n    this.studentService.getExistingLicense()\r\n      .subscribe(res=>{\r\n        this.existingLicenseData=res;\r\n        this.existingLicenseList = this.existing_license.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterExistingLicense(name) : this.existingLicenseData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  getPreferenceList(){\r\n    this.studentService.getPreferenceList()\r\n      .subscribe(res=>{\r\n        this.preferenceData=res;\r\n        this.preferenceList = this.preference.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterPreference(name) : this.preferenceData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  \r\n  getPlaceBirth(){\r\n    this.placeBirthData=[]\r\n    this.studentService.getPlaceBirth()\r\n      .subscribe(res=>{\r\n        this.placeBirthData=res;\r\n        this.placeBirthList = this.placeBirth.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => (typeof value === 'string' ? value : value[this.translateVal])),\r\n          map(name => (name ? this._filterPlaceBirth(name) : this.placeBirthData.slice())),\r\n        );\r\n      })\r\n  }\r\n\r\n  displayFn(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnRace(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnNationality(user): string {\r\n    return user && user.country_name ? user.country_name : '';\r\n  }\r\n\r\n  displayFnPostalCode(user): string {\r\n    return user && user.postal_code ? user.postal_code : '';\r\n  }\r\n\r\n  displayFnExistingLicense(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnPreference(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  displayFnPlaceBirth(user): string {\r\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\r\n  }\r\n\r\n  private _filterRace(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.raceData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterNRIC(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nricTypeData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterNationality(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nationalityData.filter(option => option.country_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  \r\n  private _filterPostalCode(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.postalCodeData.filter(option => option.postal_code.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  private _filterExistingLicense(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.existingLicenseData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  private _filterPreference(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.preferenceData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  \r\n  private _filterPlaceBirth(name: string): [] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.placeBirthData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  onSelectionChange(event){\r\n    console.log('onSelectionChange called', event.option.value);\r\n    if(event.option.value.id === 4){\r\n      this.showOtherRace=true;\r\n    }else{\r\n      this.showOtherRace=false;\r\n    }\r\n  }\r\n\r\n  getICTypeChange(){\r\n    console.log(\"---\",this.personalDetailsEditForm.value.nric_number,this.nricType);\r\n    const restrictList=[1,2,6]\r\n    // this.personalDetailsEditForm.value.nric_number.charAt(this.personalDetailsEditForm.value.nric_number.length-1)\r\n    if(restrictList.indexOf(this.nricType.value.id) >= 0){\r\n      if((this.personalDetailsEditForm.value.nric_number.charAt(this.personalDetailsEditForm.value.nric_number.length-1)) % 2 == 0){\r\n        this.personalDetailsEditForm.patchValue({gender:\"Female\"})\r\n      }else{\r\n        this.personalDetailsEditForm.patchValue({gender:\"Male\"})\r\n      }\r\n    }else{\r\n      this.personalDetailsEditForm.patchValue({gender:\"\"})\r\n    }\r\n  }\r\n\r\n  getNRICNumberChange(){\r\n    console.log(\"---\",(this.personalDetailsEditForm.value.nric_number).substr(2,2));\r\n    this.studentService.checkNRICExistence(this.personalDetailsEditForm.value.nric_number,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'New'){\r\n        console.log((this.personalDetailsEditForm.value.nric_number).substr(2,2)+\"/\"+(this.personalDetailsEditForm.value.nric_number).substr(4,2)+\"/\"+(this.personalDetailsEditForm.value.nric_number).substr(0,2))\r\n        this.personalDetailsEditForm.patchValue({date_of_birth:new Date((this.personalDetailsEditForm.value.nric_number).substr(2,2)+\"/\"+(this.personalDetailsEditForm.value.nric_number).substr(4,2)+\"/\"+(this.personalDetailsEditForm.value.nric_number).substr(0,2))})\r\n        const restrictList=[1,2,6]\r\n        // this.personalDetailsEditForm.value.nric_number.charAt(this.personalDetailsEditForm.value.nric_number.length-1)\r\n        if(restrictList.indexOf(this.nricType.value.id) >= 0){\r\n          if((this.personalDetailsEditForm.value.nric_number.charAt(this.personalDetailsEditForm.value.nric_number.length-1)) % 2 == 0){\r\n            this.personalDetailsEditForm.patchValue({gender:\"Female\"})\r\n          }else{\r\n            this.personalDetailsEditForm.patchValue({gender:\"Male\"})\r\n          }\r\n        }else{\r\n          this.personalDetailsEditForm.patchValue({gender:\"\"})\r\n        }\r\n      }else{\r\n        this.toastrService.error(\"NRIC Number Already Exists\");\r\n        this.personalDetailsEditForm.value.nric_number='';\r\n      }\r\n    \r\n    })\r\n   \r\n  }\r\n\r\n  getPassportNumberChange(){\r\n    this.studentService.checkPassportExistence(this.personalDetailsEditForm.value.passport_number,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'New'){\r\n      }else{\r\n        this.toastrService.error(\"Passport Number Already Exists\");\r\n        this.personalDetailsEditForm.value.passport_number='';\r\n      }\r\n    })\r\n  }\r\n\r\n  // getPersonalDetails(){\r\n  //   console.log(\"------personal form--------\",this.race);\r\n  //   localStorage.setItem('PersonalDetails',JSON.stringify(this.personalDetailsEditForm.value));\r\n  //   localStorage.setItem('race',JSON.stringify(this.race.value));\r\n  //   localStorage.setItem('nricType',JSON.stringify(this.nricType.value))\r\n  //   localStorage.setItem('nationality',JSON.stringify(this.nationality.value))\r\n  //   localStorage.setItem('postalCode',JSON.stringify(this.postalCode.value))\r\n  //   localStorage.setItem('placeBirth',JSON.stringify(this.placeBirth.value))\r\n  // }\r\n\r\n  \r\n  getPostalCodeChange(){\r\n    console.log(\"postalCode===\",this.postalCode.value);\r\n    this.personalDetailsEditForm.patchValue({\r\n      city:this.postalCode.value.city,\r\n      state:this.postalCode.value.state,\r\n    })\r\n\r\n  }\r\n\r\n  getPreferenceDetails(stepper: MatStepper){\r\n    console.log(\"------personal form--------\",this.race);\r\n    stepper.next();\r\n    // this.studentService.checkUsernameExistence(this.preferenceEditForm.value.user_name,sessionStorage.client)\r\n    // .subscribe(res=>{\r\n    //   if(res['status'] == 'New'){\r\n    //     localStorage.setItem('PreferenceDetails',JSON.stringify(this.preferenceEditForm.value));\r\n    //     localStorage.setItem('preference',JSON.stringify(this.preference.value));\r\n    //     localStorage.setItem('existing_license',JSON.stringify(this.existing_license.value));\r\n    //     stepper.next();\r\n    //   }else{\r\n    //     this.toastrService.error(\"User Name Already Exists\");\r\n    //     this.preferenceEditForm.value.user_name='';\r\n    //   }\r\n    // })\r\n  }\r\n\r\n\r\n  onFileChangePhoto(event,filetype) { \r\n    const reader = new FileReader();\r\n    if (event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        console.log(\"-----\",this[filetype+'_preview']);\r\n        this[filetype+'_preview']=reader.result;\r\n        this.documentEditForm.patchValue({\r\n          [filetype]:reader.result\r\n        })\r\n        console.log(\"this.documentEditForm===\",this.documentEditForm)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  saveStudentData(showStudent) {\r\n    // localStorage.setItem('documentDetails',JSON.stringify(this.documentEditForm.value));\r\n    // this.confirmPreferenceData=JSON.parse(localStorage.PreferenceDetails);\r\n    // this.confirmPersonalData=JSON.parse(localStorage.PersonalDetails);\r\n    // this.confirmDocumentData=JSON.parse(localStorage.documentDetails);\r\n    this.modalService.open(showStudent, { ariaLabelledBy: 'modal-basic-title' });\r\n  }\r\n\r\n\r\n  updateConfirmStudentDetails(){\r\n    this.studentService.updateConfirmStudentDetails(this.personalDetailsEditForm.value,this.race.value,this.nricType.value,this.nationality.value,this.postalCode.value,this.existing_license.value,this.preference.value,this.placeBirth.value,this.preferenceEditForm.value,this.documentEditForm.value,sessionStorage.currentUser,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      if(res['status'] == 'Success'){\r\n        this.toastrService.success(\"Updated Successfully!!\");\r\n        this.modalService.dismissAll();\r\n        localStorage.removeItem('PersonalDetails');\r\n        localStorage.removeItem('race');\r\n        localStorage.removeItem('nricType');\r\n        localStorage.removeItem('nationality');\r\n        localStorage.removeItem('postalCode');\r\n        localStorage.removeItem('placeBirth');\r\n        localStorage.removeItem('PreferenceDetails');\r\n        localStorage.removeItem('preference');\r\n        localStorage.removeItem('existing_license');\r\n        localStorage.removeItem('documentDetails');\r\n        this.personalDetailsEditForm.reset();\r\n        this.preferenceEditForm.reset();\r\n        this.documentEditForm.reset();\r\n        this.race.setValue('');\r\n        this.nricType.setValue(''); \r\n        this.nationality.setValue('');  \r\n        this.postalCode.setValue('');\r\n        this.existing_license.setValue('');\r\n        this.preference.setValue('');\r\n        this.placeBirth.setValue('');\r\n        this.photo_preview='';\r\n        this.nric_front_preview='';\r\n        this.nric_rear_preview='';\r\n        this.passport_front_preview='';\r\n        this.work_permit_preview='';\r\n        this.existing_license_front_preview= '';\r\n        this.existing_license_rear_preview='';\r\n        this.router.navigate(['/admin/students/all-students'])\r\n      }\r\n        \r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllStudentsComponent } from './all-students/all-students.component';\r\nimport { AddStudentComponent } from './add-student/add-student.component';\r\nimport { EditStudentComponent } from './edit-student/edit-student.component';\r\nimport { AboutStudentComponent } from './about-student/about-student.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-students',\r\n    component: AllStudentsComponent\r\n  },\r\n  {\r\n    path: 'add-student',\r\n    component: AddStudentComponent\r\n  },\r\n  {\r\n    path: 'edit-student/:id',\r\n    component: EditStudentComponent\r\n  },\r\n  {\r\n    path: 'about-student/:id',\r\n    component: AboutStudentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StudentsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { StudentsRoutingModule } from './students-routing.module';\r\nimport { AboutStudentComponent } from './about-student/about-student.component';\r\nimport { AddStudentComponent } from './add-student/add-student.component';\r\nimport { EditStudentComponent } from './edit-student/edit-student.component';\r\nimport { AllStudentsComponent } from './all-students/all-students.component';\r\nimport { ConfirmDialogComponent } from './add-student/confirm-dialog/confirm-dialog.component';\r\n// import { FormDialogComponent } from './all-students/dialogs/form-dialog/form-dialog.component';\r\nimport { StudentService } from './students.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AboutStudentComponent,\r\n    AddStudentComponent,\r\n    EditStudentComponent,\r\n    AllStudentsComponent,\r\n    ConfirmDialogComponent,\r\n    // FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    NgxSpinnerModule,\r\n    NgxDatatableModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    StudentsRoutingModule,\r\n    MatProgressSpinnerModule,MatStepperModule,\r\n    NgxMaskModule,TranslateModule,\r\n    MatAutocompleteModule\r\n  ],\r\n  providers: [StudentService],\r\n})\r\nexport class StudentsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StudentService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  getRaceList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/webRoutes/getRaceList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentUser', JSON.stringify(user));\r\n          // this.currentUserSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getNRICTypeList(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getNRICTypeList`)\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getNationalityList(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getNationalityList`)\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPostalCode(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getPostalCode`)\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getExistingLicense(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getExistingLicense`)\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPreferenceList(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getPreferenceList`)\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPlaceBirth(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getPlaceBirth`)\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  checkNRICExistence(nric_number,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/checkNRICExistence`,{nric_number,client})\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  checkPassportExistence(passport_number,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/checkPassportExistence`,{passport_number,client})\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  checkUsernameExistence(user_name,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/checkUsernameExistence`,{user_name,client})\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  setStudentDetails(personalDetailsFormData,race,nricType,nationality,postalCode,existing_license,preference,placeBirth,preferenceFormData,documentFormData,authToken,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/setStudentDetails`,{personalDetailsFormData,race,nricType,nationality,postalCode,existing_license,preference,placeBirth,preferenceFormData,documentFormData,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getStudentListPerClient(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getStudentListPerClient`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteStudentDetails(rowToDelete,authToken,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/deleteStudentDetails`,{rowToDelete,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getStudentDetailToEdit(studentId,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getStudentDetailToEdit`,{studentId,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateConfirmStudentDetails(personalDetailsFormData,race,nricType,nationality,postalCode,existing_license,preference,placeBirth,preferenceFormData,documentFormData,authToken,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/updateConfirmStudentDetails`,{personalDetailsFormData,race,nricType,nationality,postalCode,existing_license,preference,placeBirth,preferenceFormData,documentFormData,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        // localStorage.setItem('currentUser', JSON.stringify(user));\r\n        // this.currentUserSubject.next(user);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getParticularStudentDetails(studentId,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getParticularStudentDetails`,{studentId,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"]}