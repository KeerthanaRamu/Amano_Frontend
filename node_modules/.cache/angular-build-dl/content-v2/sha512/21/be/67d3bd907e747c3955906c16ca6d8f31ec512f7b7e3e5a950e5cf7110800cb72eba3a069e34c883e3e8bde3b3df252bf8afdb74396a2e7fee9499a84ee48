{"version":3,"sources":["./src/app/admin/employee/employee-list/employee-list.component.ts","./src/app/admin/employee/employee-list/employee-list.component.html","./src/app/admin/employee/employee-routing.module.ts","./src/app/admin/employee/employee.module.ts","./src/app/admin/employee/employee.service.ts"],"names":[],"mappings":"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","file":"src_app_admin_employee_employee_module_ts-es2015.js","sourcesContent":["import { Component, OnInit,ViewChild } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { EmployeeService } from '../employee.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n  \n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n \n  data=[];\n  filteredData = [];\n  addEmployee:FormGroup;\n  editEmployee:FormGroup;\n  rowToDelete: any;\n  roleList:any;\n\n  \n  clientList;\n  hide = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private employeeService:EmployeeService,\n    private modalService: NgbModal,\n    private toastrService: ToastrService,) { }\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ngOnInit(): void {\n    this.getClientList();\n    this.getEmployeeList();\n    this.getRoleList();\n    this.addEmployee = this.fb.group({\n      client_id: [sessionStorage.client,Validators.required],\n      name: ['',Validators.required],\n      user_name: ['',Validators.required],\n      password: ['',Validators.required],\n      role: ['',Validators.required],\n      img:[''],\n      mobile_no:[''],\n      email_id:['',[Validators.required, Validators.email, Validators.minLength(5)]]\n    });\n\n    this.editEmployee = this.fb.group({\n      id:[''],\n      client_id: [sessionStorage.client,Validators.required],\n      name: ['',Validators.required],\n      user_name: ['',Validators.required],\n      password: ['',Validators.required],\n      role: ['',Validators.required],\n      img:[''],\n      mobile_no:[''],\n      email_id:['']\n    });\n  }\n\n  columns = [\n    { name: 'Name' },\n    { name: 'User Name' },\n    { name: 'Role' },\n  ]; \n\n  getRoleList(){\n    this.employeeService.getRoleList()\n    .subscribe(res=>{\n      console.log(\"client--------\",res);\n      this.roleList=res;\n    })\n  }\n\n  getClientList(){\n    this.employeeService.getClientList()\n    .subscribe(res=>{\n      console.log(\"client--------\",res);\n      this.clientList=res;\n    })\n  }\n\n  getEmployeeList(){\n    this.employeeService.getEmployeeList(sessionStorage.client)\n    .subscribe(res=>{\n      console.log(\"empppppp--------\",res);\n      this.data=res;\n      this.filteredData=res;\n    })\n  }\n\n  addRow(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size:'lg' });\n  }\n\n  onFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.addEmployee.patchValue({\n          'img':reader.result\n        })\n      }\n    }\n  }\n\n  setEmployeeDetails(){\n    this.employeeService.setEmployeeDetails(this.addEmployee.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Created Successfully!!');\n        this.getEmployeeList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title',size:'lg' });\n    this.editEmployee.patchValue({\n      id: row.id,\n      client_id: sessionStorage.client,\n      name: row.name,\n      user_name: row.user_name,\n      password: row.password,\n      role: row.role_id,\n      img:row.img,\n      mobile_no:row.mobile_no,\n      email_id:row.email_id\n    });  \n  }\n\n  onFileChangeUpdate(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.editEmployee.patchValue({\n          'img':reader.result\n        })\n      }\n    }\n  }\n\n  updateEmployeeDetails(){\n    this.employeeService.updateUserDetails(this.editEmployee.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Updated Successfully!!');\n        this.getEmployeeList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n  \n  deleteRow(row,rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n    this.rowToDelete=row;\n  }\n\n  deleteEmployeeDetails(){\n    this.employeeService.deleteEmployeeDetails(this.rowToDelete)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Deleted Successfully!!');\n        this.getEmployeeList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  filterDatatable(event) {\n      // get the value of the key pressed and make it lowercase\n      const val = event.target.value.toLowerCase();\n      // get the amount of columns in the table\n      const colsAmt = this.columns.length;\n      // get the key names of each column in the dataset\n      const keys = Object.keys(this.filteredData[0]);\n      // assign filtered matches to the active datatable\n      this.data = this.filteredData.filter(function (item) {\n        // iterate through each row's column data\n        for (let i = 0; i < colsAmt; i++) {\n          // check for a match\n          if (\n            item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n            !val\n          ) {\n            // found match, return true to add to result set\n            return true;\n          }\n        }\n      });\n      // whenever the filter changes, always go back to the first page\n      this.table.offset = 0;\n  }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">{{'EMPLOYEE.LISTTITLE' | translate}}</h4>\n                  </li>\n                  <!-- <li class=\"breadcrumb-item bcrumb-1\">\n                    <a routerLink=\"/admin/dashboard/main\">\n                      <i class=\"fas fa-home\"></i> Home</a>\n                  </li>\n                  <li class=\"breadcrumb-item bcrumb-2\">   \n                    <a href=\"#\" onClick=\"return false;\">Clients</a>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <div class=\"card\">\n                <div class=\"body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                    <div class=\"ngxTableHeader\">\n                        <ul class=\"header-buttons-left ms-0 mb-0\">\n                        <li class=\"dropdown\">\n                            <h2>\n                            <strong>{{'EMPLOYEE.LISTTITLE' | translate}}</strong></h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </li>\n                        </ul>\n                        <ul class=\"header-buttons\">\n                        <li>\n                            <button mat-mini-fab color=\"primary\" (click)='addRow(addRecord)'>\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                        </li>\n                        </ul>\n                    </div>\n                    <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                        <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"img\" [width]=\"100\">\n                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                            <td class=\"table-img padding-0\">\n                            <img width=\"40\" src=\"{{ value ? value : 'assets/images/nouser.png' }}\" />\n                            </td>\n                        </ng-template>\n                        </ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.LIST.NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.LIST.USERNAME' | translate}}\" prop=\"user_name\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.LIST.ROLE' | translate}}\" prop=\"role\" [width]=\"200\"></ngx-datatable-column>\n                        <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\n                                        </ngx-datatable-column> -->\n                        <!-- action buttons -->\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.ACTION' | translate}}\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editRow(row, rowIndex, editRecord)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteRow(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column>\n                    </ngx-datatable>\n                    <!-- Add Record Modal Window -->\n                    <ng-template #addRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                            <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'EMPLOYEE.TITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form class=\"register-form\" [formGroup]=\"addEmployee\" (ngSubmit)=\"setEmployeeDetails()\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.ROLE' | translate}}</mat-label>\n                                        <mat-select formControlName=\"role\" required>\n                                                <mat-option *ngFor=\"let option of roleList\" [value]=\"option.id\">\n                                                    {{option.role}}\n                                                  </mat-option>\n                                        </mat-select> \n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.NAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"addEmployee.get('name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.NAME' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.USERNAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"user_name\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"addEmployee.get('user_name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.USERNAME' | translate}} is required\n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.PASSWORD' | translate}}</mat-label>\n                                        <input  matInput\n                                        [type]=\"hide ? 'password' : 'text'\"\n                                        formControlName=\"password\" required>\n                                        <a\n                                        class=\"show-pwd-icon\"\n                                        href=\"#\"\n                                        onClick=\"return false;\"\n                                        matSuffix\n                                        (click)=\"hide = !hide\"\n                                        [attr.aria-label]=\"'Hide password'\"\n                                        [attr.aria-pressed]=\"hide\"\n                                      >\n                                        <mat-icon>{{\n                                          hide ? \"visibility_off\" : \"visibility\"\n                                        }}</mat-icon>\n                                      </a>\n                                        <mat-error *ngIf=\"addEmployee.get('password').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.PASSWORD' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.MOBILENO' | translate}}</mat-label>\n                                        <input matInput formControlName=\"mobile_no\">\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.EMAILID' | translate}}</mat-label>\n                                        <input matInput formControlName=\"email_id\">\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"addEmployee.get('email_id').hasError('email') && addEmployee.get('email_id').touched\">\n                                            Please enter a valid email address \n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"{{'EMPLOYEE.LIST.PROFILE-IMG' | translate}}\" (change)=\"onFileChange($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                <button class=\"btn-space\" [disabled]=\"!addEmployee.valid\" mat-raised-button\n                                color=\"primary\">{{'BUTTON.ADD-BTN' | translate}}</button>\n                                <button type=\"button\" mat-button (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n                    <!-- Edit Record Modal Window -->\n                    <ng-template #editRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'EMPLOYEE.EDITTITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form [formGroup]=\"editEmployee\" (ngSubmit)=\"updateEmployeeDetails()\">\n                            <div class=\"input-field col s12 d-none\">\n                            <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.ROLE' | translate}}</mat-label>\n                                        <mat-select formControlName=\"role\" required>\n                                            <mat-option *ngFor=\"let option of roleList\" [value]=\"option.id\">\n                                                {{option.role}}\n                                              </mat-option>\n                                        </mat-select> \n                                        </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.NAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"editEmployee.get('name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.NAME' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.USERNAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"user_name\" readonly required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"editEmployee.get('user_name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.USERNAME' | translate}} is required\n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.PASSWORD' | translate}}</mat-label>\n                                        <input  matInput\n                                        [type]=\"hide ? 'password' : 'text'\"\n                                        formControlName=\"password\" required>\n                                        <a\n                                        class=\"show-pwd-icon\"\n                                        href=\"#\"\n                                        onClick=\"return false;\"\n                                        matSuffix\n                                        (click)=\"hide = !hide\"\n                                        [attr.aria-label]=\"'Hide password'\"\n                                        [attr.aria-pressed]=\"hide\"\n                                      >\n                                        <mat-icon>{{\n                                          hide ? \"visibility_off\" : \"visibility\"\n                                        }}</mat-icon>\n                                      </a>\n                                        <mat-error *ngIf=\"editEmployee.get('password').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.PASSWORD' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.MOBILENO' | translate}}</mat-label>\n                                        <input matInput formControlName=\"mobile_no\">\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.EMAILID' | translate}}</mat-label>\n                                        <input matInput formControlName=\"email_id\">\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"editEmployee.get('email_id').hasError('email') && editEmployee.get('email_id').touched\">\n                                            Please enter a valid {{'EMPLOYEE.LIST.EMAILID' | translate}}\n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"{{'EMPLOYEE.LIST.PROFILE-IMG' | translate}}\" (change)=\"onFileChangeUpdate($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\">{{'BUTTON.EDIT-BTN' | translate}}</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n\n\n                    <ng-template #deleteRecord let-modal>\n                        <div class=\"modal-header deleteRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'EMPLOYEE.DELETETITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>{{'BUTTON.CONFIRMATION' | translate}}</p>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deleteEmployeeDetails()\">{{'BUTTON.DEL-BTN' | translate}}</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'employee-list',\r\n    component: EmployeeListComponent,\r\n  },\r\n  // {\r\n  //   path: 'dashboard2',\r\n  //   component: Dashboard2Component,\r\n  // }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EmployeeRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { EmployeeRoutingModule } from './employee-routing.module';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport {EmployeeService} from './employee.service'\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeeListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,MatAutocompleteModule,NgxDatatableModule,\r\n    MatFormFieldModule,MatInputModule,MatSnackBarModule,MatSelectModule,FormsModule,\r\n    ReactiveFormsModule,MaterialFileInputModule,\r\n    EmployeeRoutingModule,TranslateModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n  ],providers: [EmployeeService],\r\n})\r\nexport class EmployeeModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  getClientList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getClientList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getEmployeeList(client) {\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/getEmployeeList`,{client})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  setEmployeeDetails(userData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/setEmployeeDetails`,{userData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateUserDetails(userData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/updateUserDetails`,{userData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteEmployeeDetails(userData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/deleteEmployeeDetails`,{userData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getRoleList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getRoleList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}