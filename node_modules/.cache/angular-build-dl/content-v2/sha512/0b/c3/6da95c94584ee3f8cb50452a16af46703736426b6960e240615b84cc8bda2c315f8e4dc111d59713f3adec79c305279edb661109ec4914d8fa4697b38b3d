{"version":3,"sources":["./src/app/admin/package/add-package/add-package.component.ts","./src/app/admin/package/add-package/add-package.component.html","./src/app/admin/package/edit-package/edit-package.component.ts","./src/app/admin/package/edit-package/edit-package.component.html","./src/app/admin/package/package-list/package-list.component.ts","./src/app/admin/package/package-list/package-list.component.html","./src/app/admin/package/package-routing.module.ts","./src/app/admin/package/package.module.ts","./src/app/admin/package/package.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACmD;AAC4D;AACpC;AAGR;;;;;;;;;;;;;;;;;;;;;;;IC2BX,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAN/D,+EAIkC;IAA9B,iZAA6B;IAC7B,uDACA;IAAA,sIAA2D;IAC/D,4DAAW;;;;IALP,yFAAyB;IAGzB,0DACA;IADA,yFACA;IAAyB,0DAAe;IAAf,kFAAe;;;IAYpD,iFAA0F;IAClF,8EAAsI;IAC1I,uDACJ;IAAA,4DAAa;;;;IAH8C,2FAA8B;IAC1B,0DAA+D;IAA/D,mIAA+D;IAC1H,0DACJ;IADI,oGACJ;;;IAGA,4EAAgD;IACpC,uDACZ;;IAAA,4DAAY;;IADA,0DACZ;IADY,oLACZ;;;IAQI,iFAA4E;IACxE,uDACJ;IAAA,4DAAa;;;;IAF8C,6EAAgB;IACvE,0DACJ;IADI,2GACJ;;;IAGI,sEAAoD;IAClD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IAHJ,4EAAmE;IAC/D,6HAEM;IACV,4DAAY;;;;IAHF,0DAA4C;IAA5C,mHAA4C;;;IAY1D,4EAAiF;IACzE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,qLACR;;;IAcI,4EAA6E;IACrE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,sLACR;;;IAOA,4EAA8E;IACtE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,mLACR;;;IAOA,4EAA4E;IACpE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,qLACR;;;IAUJ,4EAA4E;IACpE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,qLACR;;;IAOA,4EAA6E;IACrE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,iLACR;;;IAOA,4EAAkF;IAC1E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IAQQ,iFAA6E;IACzE,uDACJ;IAAA,4DAAa;;;;IAF+C,6EAAgB;IACxE,0DACJ;IADI,4GACJ;;;IAGA,sEAAqD;IACnD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IAHJ,4EAAoE;IAChE,8HAEM;IACV,4DAAY;;;;IAHF,0DAA6C;IAA7C,qHAA6C;;;IAY3D,4EAAiF;IACzE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IANR,0EAAsC;IAClC,qFAAqE;IACjE,4EAAW;IAAA,uDAAmD;;IAAA,4DAAY;IAC1E,uEAAqD;IACrD,oIAEY;IAChB,4DAAiB;IACrB,4DAAM;;;IANa,0DAAmD;IAAnD,8KAAmD;IAElD,0DAAmE;IAAnE,uIAAmE;;;IAS/E,4EAAkF;IAC1E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IANR,0EAAsC;IAClC,qFAAqE;IACjE,4EAAW;IAAA,uDAAmD;;IAAA,4DAAY;IAC1E,uEAAsD;IACtD,oIAEY;IAChB,4DAAiB;IACrB,4DAAM;;;IANa,0DAAmD;IAAnD,8KAAmD;IAElD,0DAAoE;IAApE,wIAAoE;;;IAShF,4EAAiF;IACzE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IANR,0EAAsC;IAClC,qFAAqE;IACjE,4EAAW;IAAA,uDAAmD;;IAAA,4DAAY;IAC1E,uEAAqD;IACrD,oIAEY;IAChB,4DAAiB;IACrB,4DAAM;;;IANa,0DAAmD;IAAnD,8KAAmD;IAElD,0DAAmE;IAAnE,uIAAmE;;;IAa/E,4EAAmF;IAC3E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,wLACR;;;IAKJ,4EAAiF;IACzE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,0LACR;;;IAOI,4EAAyF;IACjF,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,8LACR;;;IAKJ,4EAAuF;IAC/E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,gMACR;;ADpNxC,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AAOM,MAAM,mBAAmB;IA6B9B,YAAoB,KAAuB,EAAS,EAAe,EACzD,eAA+B,EAAS,aAA4B,EAAS,cAA6B,EAC1G,MAAa;QAFH,UAAK,GAAL,KAAK,CAAkB;QAAS,OAAE,GAAF,EAAE,CAAa;QACzD,oBAAe,GAAf,eAAe,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAe;QAC1G,WAAM,GAAN,MAAM,CAAO;QA1BvB,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,uBAAkB,GAAa,CAAC,wDAAK,EAAE,wDAAK,CAAC,CAAC;QAC9C,qBAAgB,GAAE,EAAE,CAAC;QACrB,eAAU,GAAC,KAAK,CAAC;QACjB,eAAU,GAAC,KAAK,CAAC;QAIjB,iBAAY,GAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAM/D,iBAAY,GAAG,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,2BAA2B,EAAE,EAAE,+DAAmB,CAAC,EAAE,CAAC,CAAC;QACzG,iBAAY,GAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,2BAA2B,EAAE,EAAE,+DAAmB,CAAC,EAAE,CAAC,CAAC;QACxG,kBAAa,GAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,2BAA2B,EAAE,EAAE,+DAAmB,CAAC,EAAE,CAAC,CAAC;QAMlG,WAAM,GAAG,8DAAa,CAAC;QAmLvB,oBAAe,GAAG;YACvB,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,wDAAwD,EAAE;gBACxG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,wDAAwD,EAAE;gBACxG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,eAAe,EAAE;gBACf,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,yDAAyD,EAAE;gBACzG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,4BAA4B,EAAE;aAC5D;SACF;IA7L0B,CAAC;IAE5B,QAAQ;QACJ,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,cAAc,CAAC,MAAM,CAAC;aAClE,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YACd,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAC/C,CAAC,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,aAAa,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,cAAc,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,eAAe,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC1C,aAAa,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,cAAc,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACzC,oBAAoB,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/C,kBAAkB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC5C,mBAAmB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC7C,kBAAkB,EAAC,CAAC,EAAE,CAAC;YACvB,mBAAmB,EAAC,CAAC,EAAE,CAAC;YACxB,kBAAkB,EAAC,CAAC,EAAE,CAAC;YACvB,0BAA0B,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpD,wBAAwB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClD,aAAa,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACvC,kBAAkB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC5C,WAAW,EAAC,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACrD,IAAI,CAAC,YAAY,GAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IAGD,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;aACtC,SAAS,CAAC,GAAG,GAAE;YACd,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CACxD,+CAAS,CAAC,EAAE,CAAC,EACb,yCAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAC5E,yCAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CACnF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAGD,mBAAmB;QACjB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC;aAC7D,SAAS,CAAC,GAAG,GAAE;YACd,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CACxD,+CAAS,CAAC,EAAE,CAAC,EACb,yCAAG,CAAC,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC1G,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE;aACrC,SAAS,CAAC,GAAG,GAAE;YACd,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,gBAAgB,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAC1D,+CAAS,CAAC,EAAE,CAAC,EACb,yCAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAC5E,yCAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,CACrF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,OAAO,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9D,CAAC;IAED,oBAAoB,CAAC,IAAI;QACvB,OAAO,IAAI,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxI,CAAC;IAED,qBAAqB,CAAC,IAAI;QACxB,OAAO,IAAI,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxI,CAAC;IAEO,kBAAkB,CAAC,IAAI;QAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACzG,CAAC;IAEO,kBAAkB,CAAC,IAAY;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9G,CAAC;IAGO,mBAAmB,CAAC,IAAY;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/G,CAAC;IAED,GAAG,CAAC,KAAwB;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,KAAK,CAAC;QACjC,gBAAgB;QAChB,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;QAED,wBAAwB;QACxB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,OAAe;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAErD,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACxC;IACH,CAAC;IAED,gBAAgB,CAAC,KAAmC;QAClD,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC5C,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAE,MAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;SACtF;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAGjC,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAC;YAClC,IAAI,UAAU,GAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAE,CAAC,GAAC,CAAC,CAAC;YACxE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC1C;aAAI;YACH,IAAI,UAAU,GAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAE,CAAC,GAAC,CAAC,CAAC;YACxE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC1C;QACD,0DAA0D;QAC1D,qBAAqB,CAAC,GAAE,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,CAAC,CAAC;IAEJ,CAAC;IAED,oBAAoB;QAClB,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;YAClC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;SACvB;aAAK,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;YACxC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;SACtB;aAAI;YACH,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;SACvB;IACH,CAAC;IAED,QAAQ,CAAC,OAA+B;QACtC,OAAO,CAAC,SAAS,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAmBD,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,gBAAgB,CAAC;QAC9G,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAC,OAAO,GAAC,IAAI,CAAC,UAAU,GAAC,WAAW,GAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC1G,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7E,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACxE,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACtE,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC7D,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACxD,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAChE,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;YAClC,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,IAAI,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,mBAAmB,IAAI,EAAE,EAAC;gBAC3G,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC;qBAC9C,SAAS,CAAC,GAAG,GAAE;oBACd,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;wBAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;wBACxD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;wBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;qBACvD;yBAAI;wBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACzC;gBACH,CAAC,CAAC;aACH;iBAAI;gBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;aAC1D;SACF;aAAK,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;YACxC,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,IAAI,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,mBAAmB,IAAI,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,IAAI,EAAE,EAAC;gBACjK,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC;qBAC9C,SAAS,CAAC,GAAG,GAAE;oBACd,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;wBAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;wBACxD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;wBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;qBACvD;yBAAI;wBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACzC;gBACH,CAAC,CAAC;aACH;iBAAI;gBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;aAC1D;SACF;aAAI;YACH,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC;iBAC9C,SAAS,CAAC,GAAG,GAAE;gBACd,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;oBACxD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;iBACvD;qBAAI;oBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACzC;YACH,CAAC,CAAC;SACH;IAEH,CAAC;IAED,wBAAwB,CAAC,KAAK;QAC5B,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;YACnD,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YAClC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;gBACnB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAC7B,aAAa,EAAC,IAAI;iBACnB,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAC,IAAI,CAAC,cAAc,CAAC;YACzD,CAAC;SACF;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACxD,CAAC;;sFAtSU,mBAAmB;iHAAnB,mBAAmB;;;;;;;;;QC3BhC,6EAAyB;QACjB,yEAA6B;QACzB,yEAA0B;QACtB,yEAAiB;QACb,yEAAqD;QACjD,wEAAyC;QACrC,wEAA4B;QACxB,wEAAuB;QAAA,uDAA+B;;QAAA,4DAAK;QAC/D,4DAAK;QAET,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAA0B;QACtB,0EAAqD;QACjD,2EAAkB;QACd,2EAAoB;QAChB,sEAAI;QAAA,wDAA+B;;QAAA,4DAAK;QAE5C,4DAAM;QACN,2EAAkB;QACd,4EAA+C;QAC3C,0EAAiB;QACb,2EAAmB;QACf,sFAAqE;QACjE,yFAAsD;QAC9C,4HAOW;QACX,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,iFAM6D;QAD7D,+KAAwB,eAAW,IAAC;QALpC,4DAM6D;QACrE,4DAAgB;QAChB,4FAAmH;QAAlE,8KAAkB,4BAAwB,IAAC;QAC5F,gIAGa;;QACb,4DAAmB;QACnB,8EAA6G;QAAxC,0RAAS,iBAA6B,IAAC;QAAE,gFAA+B;QAAA,uEAAW;QAAA,4DAAW;QAAA,4DAAS;QAC5K,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,wEAAyF;QACzF,4FAAsF;QAClF,gIAEa;;QACb,4DAAmB;QACnB,8HAIY;QACpB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QAC/D,0FAA+G;QAArD,gKAAU,oCAAgC,IAAC;QACrG,4DAAqB;QACrB,gFAAoB;QAAA,wEAAY;QAAA,4DAAW;QAC/C,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,0EAAiB;QACT,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA6C;;QAAA,4DAAY;QAGpE,kFAAsD;QAClD,kFAA+B;QAAA,wDAAyC;;QAAA,4DAAa;QACrF,kFAA4B;QAAA,wDAAsC;;QAAA,4DAAa;QACnF,4DAAa;QACb,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA2C;;QAAA,4DAAY;QAClE,wEAAkD;QAClD,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA6C;;QAAA,4DAAY;QACpE,wEAAgD;QAChD,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QAEV,4DAAM;QACV,0EAAiB;QACb,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA6C;;QAAA,4DAAY;QACpE,wEAAgD;QAChD,8HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAAyC;;QAAA,4DAAY;QAChE,yEAAiD;QACjD,gIAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,4EAAmB;QACf,uFAAqE;QACjE,8EAAW;QAAA,yDAAmD;;QAAA,4DAAY;QAC1E,yEAAsD;QACtD,gIAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,4EAAmB;QACX,uFAAqE;QACjE,8EAAW;QAAA,yDAA6C;;QAAA,4DAAY;QACpE,yEAA+F;QAC/F,6FAAuI;QAAhF,yKAAkB,0BAAsB,IAAC;QAC5F,kIAEa;;QACb,4DAAmB;QACvB,gIAIY;QAChB,4DAAiB;QACrB,4DAAM;QACd,4DAAM;QACN,2EAAiB;QACb,oHAQM;QACN,oHAQM;QACN,oHAQM;QACN,4EAAmB;QACf,qFAAmE;QAAA,yDAA0C;;QAAA,4DAAe;QAChI,4DAAM;QACV,4DAAM;QACL,2EAAiB;QACd,4EAAwD;QAChD,8EAAW;QAAA,yDAAgD;;QAAA,4DAAY;QACvE,4EAA8E;QAC9E,gIAEY;QACpB,4DAAM;QACN,4EAAwD;QACpD,8EAAW;QAAA,yDAAkD;;QAAA,4DAAY;QACzE,4EAA4E;QAC5E,gIAEY;QAChB,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,4EAAwD;QAChD,8EAAW;QAAA,yDAAsD;;QAAA,4DAAY;QAC7E,4EAAoF;QACpF,gIAEY;QACpB,4DAAM;QACN,4EAAwD;QACpD,8EAAW;QAAA,yDAAwD;;QAAA,4DAAY;QAC/E,4EAAkF;QAClF,gIAEY;QAChB,4DAAM;QACV,4DAAM;QAEN,2EAAiB;QACb,4EAA0D;QACtD,+EACkD;QAA9B,6IAAS,uBAAmB,IAAC;QAAE,yDAAgC;;QAAA,4DAAS;QAC5F,+EAAoD;QAAnB,6IAAS,YAAQ,IAAC;QAAC,yDAAmC;;QAAA,4DAAS;QACpG,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAU;;;;;;QA3OyC,0DAA+B;QAA/B,kJAA+B;QAWtD,0DAA+B;QAA/B,mJAA+B;QAIjB,0DAA4B;QAA5B,yFAA4B;QAMI,0DAAmB;QAAnB,yFAAmB;QAOlC,0DAA4C;QAA5C,yKAA4C;QAIvD,0DAA4B;QAA5B,gFAA4B;QAML,0DAA0B;QAA1B,2JAA0B;QAM7C,0DAAkC;QAAlC,kGAAkC;QAOnC,0DAA4C;QAA5C,yKAA4C;QAC3B,0DAA4B;QAA5B,yFAA4B;QACP,0DAAoC;QAApC,iGAAoC;QAClD,0DAA0B;QAA1B,2JAA0B;QAIvB,0DAA+B;QAA/B,qGAA+B;QAS1D,0DAA4C;QAA5C,gKAA4C;QAI3C,0DAAmE;QAAnE,mIAAmE;QAShE,0DAA6C;QAA7C,iKAA6C;QAIrB,0DAAyC;QAAzC,6JAAyC;QAC5C,0DAAsC;QAAtC,0JAAsC;QAE1D,0DAA+D;QAA/D,+HAA+D;QAOhE,0DAA2C;QAA3C,wKAA2C;QAE1C,0DAAgE;QAAhE,gIAAgE;QAOjE,0DAA6C;QAA7C,0KAA6C;QAE5C,0DAA8D;QAA9D,8HAA8D;QAUnE,0DAA6C;QAA7C,0KAA6C;QAE5C,0DAA8D;QAA9D,8HAA8D;QAO/D,0DAAyC;QAAzC,sKAAyC;QAExC,0DAA+D;QAA/D,+HAA+D;QAOhE,0DAAmD;QAAnD,iLAAmD;QAElD,0DAAoE;QAApE,oIAAoE;QAOjE,0DAA6C;QAA7C,2KAA6C;QAC5B,0DAA6B;QAA7B,0FAA6B;QACwC,0DAAqC;QAArC,kGAAqC;QACnG,0DAA2B;QAA3B,6JAA2B;QAI5B,0DAAgC;QAAhC,sGAAgC;QAS1D,0DAAgB;QAAhB,gFAAgB;QAShB,0DAAgB;QAAhB,gFAAgB;QAShB,0DAAgB;QAAhB,gFAAgB;QAUmC,0DAA0C;QAA1C,+JAA0C;QAK9F,0DAAgD;QAAhD,8KAAgD;QACjD,0DAAiB;QAAjB,8EAAiB;QACf,0DAAqE;QAArE,qIAAqE;QAK1E,0DAAkD;QAAlD,gLAAkD;QACnD,0DAAiB;QAAjB,8EAAiB;QACf,0DAAmE;QAAnE,mIAAmE;QAOhE,0DAAsD;QAAtD,oLAAsD;QACvD,0DAAiB;QAAjB,8EAAiB;QACf,0DAA2E;QAA3E,2IAA2E;QAKhF,0DAAwD;QAAxD,uLAAwD;QACzD,0DAAiB;QAAjB,8EAAiB;QACf,0DAAyE;QAAzE,yIAAyE;QAQ3D,0DAAkE;QAAlE,mIAAkE;QACzC,0DAAgC;QAAhC,gKAAgC;QAC/B,0DAAmC;QAAnC,yJAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxO5E;AAC4D;AACpC;AAGR;;;;;;;;;;;;;;;;;;;;;;;IC2BH,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAN/D,+EAIkC;IAA9B,kZAA6B;IAC7B,uDACA;IAAA,uIAA2D;IAC/D,4DAAW;;;;IALP,yFAAyB;IAGzB,0DACA;IADA,yFACA;IAAyB,0DAAe;IAAf,kFAAe;;;IAYpD,iFAA0F;IAClF,8EAAsI;IAC1I,uDACJ;IAAA,4DAAa;;;;IAH8C,2FAA8B;IAC1B,0DAA+D;IAA/D,mIAA+D;IAC1H,0DACJ;IADI,oGACJ;;;IAGA,4EAAgD;IACpC,uDACZ;;IAAA,4DAAY;;IADA,0DACZ;IADY,oLACZ;;;IAQJ,iFAA4E;IACxE,uDACJ;IAAA,4DAAa;;;;IAF8C,6EAAgB;IACvE,0DACJ;IADI,2GACJ;;;IAGI,sEAAoD;IAClD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IAHJ,4EAAmE;IAC/D,8HAEM;IACV,4DAAY;;;;IAHF,0DAA4C;IAA5C,mHAA4C;;;IAiBlD,4EAAkF;IAC1E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,qLACR;;;IAgBR,4EAA8E;IACtE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,sLACR;;;IAOI,4EAA+E;IACvE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,mLACR;;;IAOA,4EAA6E;IACrE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,qLACR;;;IASJ,4EAA6E;IACrE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,qLACR;;;IAOA,4EAA8E;IACtE,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,iLACR;;;IAOA,4EAAmF;IAC3E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IAQI,iFAA6E;IACzE,uDACJ;IAAA,4DAAa;;;;IAF+C,6EAAgB;IACxE,0DACJ;IADI,4GACJ;;;IAGA,sEAAqD;IACnD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IAHJ,4EAAoE;IAChE,+HAEM;IACV,4DAAY;;;;IAHF,0DAA6C;IAA7C,qHAA6C;;;IAYvD,4EAAkF;IAC1E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IANR,0EAAsC;IAClC,qFAAqE;IACjE,4EAAW;IAAA,uDAAmD;;IAAA,4DAAY;IAC1E,uEAAqD;IACrD,qIAEY;IAChB,4DAAiB;IACrB,4DAAM;;;IANa,0DAAmD;IAAnD,8KAAmD;IAElD,0DAAoE;IAApE,wIAAoE;;;IAShF,4EAAmF;IAC3E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IANR,0EAAsC;IAClC,qFAAqE;IACjE,4EAAW;IAAA,uDAAmD;;IAAA,4DAAY;IAC1E,uEAAsD;IACtD,qIAEY;IAChB,4DAAiB;IACrB,4DAAM;;;IANa,0DAAmD;IAAnD,8KAAmD;IAElD,0DAAqE;IAArE,yIAAqE;;;IASjF,4EAAkF;IAC1E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,2LACR;;;IANR,0EAAsC;IAClC,qFAAqE;IACjE,4EAAW;IAAA,uDAAmD;;IAAA,4DAAY;IAC1E,uEAAqD;IACrD,qIAEY;IAChB,4DAAiB;IACrB,4DAAM;;;IANa,0DAAmD;IAAnD,8KAAmD;IAElD,0DAAoE;IAApE,wIAAoE;;;IAahF,4EAAoF;IAC5E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,wLACR;;;IAKJ,4EAAkF;IAC1E,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,0LACR;;;IAOI,4EAA0F;IAClF,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,8LACR;;;IAKJ,4EAAwF;IAChF,uDACR;;IAAA,4DAAY;;IADJ,0DACR;IADQ,gMACR;;AD1NxC,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AAOM,MAAM,oBAAoB;IAgC/B,YAAoB,KAAuB,EAAS,EAAe,EACzD,eAA+B,EAAS,aAA4B,EAAS,MAAc,EAAS,KAAqB,EACzH,cAA6B;QAFnB,UAAK,GAAL,KAAK,CAAkB;QAAS,OAAE,GAAF,EAAE,CAAa;QACzD,oBAAe,GAAf,eAAe,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QACzH,mBAAc,GAAd,cAAc,CAAe;QA7BhC,WAAM,GAAG,8DAAa,CAAC;QAE9B,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,uBAAkB,GAAa,CAAC,wDAAK,EAAE,wDAAK,CAAC,CAAC;QAC9C,qBAAgB,GAAE,EAAE,CAAC;QACrB,eAAU,GAAC,KAAK,CAAC;QACjB,eAAU,GAAC,KAAK,CAAC;QAMjB,iBAAY,GAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAM/D,iBAAY,GAAG,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,2BAA2B,EAAE,CAAC,EAAE,CAAC,CAAC;QACpF,iBAAY,GAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,2BAA2B,EAAE,EAAE,+DAAmB,CAAC,EAAE,CAAC,CAAC;QACxG,kBAAa,GAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,2BAA2B,EAAE,EAAE,+DAAmB,CAAC,EAAE,CAAC,CAAC;QAyOlG,oBAAe,GAAG;YACvB,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,wDAAwD,EAAE;gBACxG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,wDAAwD,EAAE;gBACxG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACtD;YACD,eAAe,EAAE;gBACf,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,yDAAyD,EAAE;gBACzG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,4BAA4B,EAAE;aAC5D;SACF;QA5OE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,EAAE,EAAC,CAAC,EAAE,CAAC;YACP,cAAc,EAAC,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACxC,aAAa,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,oBAAoB,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/C,kBAAkB,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC7C,eAAe,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC1C,aAAa,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,cAAc,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACzC,oBAAoB,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/C,kBAAkB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC5C,mBAAmB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC7C,kBAAkB,EAAC,CAAC,EAAE,CAAC;YACvB,mBAAmB,EAAC,CAAC,EAAE,CAAC;YACxB,kBAAkB,EAAC,CAAC,EAAE,CAAC;YACvB,0BAA0B,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpD,wBAAwB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClD,aAAa,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACvC,kBAAkB,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC5C,WAAW,EAAC,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;IACJ,CAAC;IAIF,QAAQ;QAEN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,cAAc,CAAC,MAAM,CAAC;aAChE,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YACd,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAC/C,CAAC,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACrD,IAAI,CAAC,YAAY,GAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAC,cAAc,CAAC,MAAM,CAAC;aACzE,SAAS,CAAC,GAAG,GAAE;YACd,IAAI,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;gBAC9B,EAAE,EAAC,MAAM,CAAC,EAAE;gBACZ,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,oBAAoB,EAAE,MAAM,CAAC,eAAe;gBAC5C,kBAAkB,EAAE,MAAM,CAAC,aAAa;gBACxC,eAAe,EAAE,MAAM,CAAC,eAAe;gBACvC,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,cAAc,EAAE,MAAM,CAAC,cAAc;gBACrC,oBAAoB,EAAE,MAAM,CAAC,oBAAoB;gBACjD,kBAAkB,EAAC,MAAM,CAAC,kBAAkB;gBAC5C,cAAc,EAAC,MAAM,CAAC,cAAc;gBACpC,mBAAmB,EAAC,MAAM,CAAC,mBAAmB;gBAC9C,kBAAkB,EAAC,MAAM,CAAC,kBAAkB;gBAC5C,mBAAmB,EAAC,MAAM,CAAC,mBAAmB;gBAC9C,kBAAkB,EAAC,MAAM,CAAC,kBAAkB;gBAC5C,0BAA0B,EAAC,MAAM,CAAC,0BAA0B;gBAC5D,wBAAwB,EAAC,MAAM,CAAC,wBAAwB;gBACxD,aAAa,EAAC,MAAM,CAAC,aAAa;gBAClC,kBAAkB,EAAC,MAAM,CAAC,aAAa;gBACvC,WAAW,EAAC,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;aACnD,CAAC,CAAC;YACH,IAAI,UAAU,GAAC,MAAM,CAAC,YAAY,CAAC;YACnC,IAAI,UAAU,GAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAE,MAAM,CAAC,eAAe,GAAC,CAAC,CAAC;YAC7F,IAAI,UAAU,GAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAE,MAAM,CAAC,aAAa,GAAC,CAAC,CAAC;YAC5F,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAC,UAAU,CAAC,CAAC;YAC7C,IAAI,CAAC,gBAAgB,GAAC,MAAM,CAAC,YAAY,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;gBAClC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;aACvB;iBAAK,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;gBACxC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;aACtB;iBAAI;gBACH,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;gBACtB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;aACtC,SAAS,CAAC,GAAG,GAAE;YACd,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CACxD,+CAAS,CAAC,EAAE,CAAC,EACb,yCAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAC5E,yCAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CACnF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE;aACrC,SAAS,CAAC,GAAG,GAAE;YACd,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,gBAAgB,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAC1D,+CAAS,CAAC,EAAE,CAAC,EACb,yCAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAC5E,yCAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,CACrF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC;aAC7D,SAAS,CAAC,GAAG,GAAE;YACd,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CACxD,+CAAS,CAAC,EAAE,CAAC,EACb,yCAAG,CAAC,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC1G,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,OAAO,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9D,CAAC;IAED,oBAAoB,CAAC,IAAI;QACvB,OAAO,IAAI,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxI,CAAC;IAED,qBAAqB,CAAC,IAAI;QACxB,OAAO,IAAI,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxI,CAAC;IAEO,kBAAkB,CAAC,IAAI;QAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACzG,CAAC;IAEO,kBAAkB,CAAC,IAAY;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9G,CAAC;IAEO,mBAAmB,CAAC,IAAY;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/G,CAAC;IAED,GAAG,CAAC,KAAwB;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,KAAK,CAAC;QACjC,gBAAgB;QAChB,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;QAED,wBAAwB;QACxB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,OAAe;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAErD,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACxC;IACH,CAAC;IAED,gBAAgB,CAAC,KAAmC;QAClD,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC5C,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAE,MAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;SACtF;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAGjC,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAC;YAClC,IAAI,UAAU,GAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAE,CAAC,GAAC,CAAC,CAAC;YACxE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC1C;aAAI;YACH,IAAI,UAAU,GAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAE,CAAC,GAAC,CAAC,CAAC;YACxE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC1C;QACD,0DAA0D;QAC1D,qBAAqB,CAAC,GAAE,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,CAAC,CAAC;IAEJ,CAAC;IAGD,oBAAoB;QAClB,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;YAClC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;SACvB;aAAK,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAC;YACxC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;SACtB;aAAI;YACH,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;SACvB;IACH,CAAC;IAED,QAAQ,CAAC,OAA+B;QACtC,OAAO,CAAC,SAAS,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAkBD,wBAAwB,CAAC,KAAK;QAC5B,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;YACnD,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YAClC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;gBACnB,IAAI,CAAC,eAAe,GAAC,MAAM,CAAC,MAAM,CAAC;gBACnC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBAC9B,aAAa,EAAC,IAAI;iBACnB,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAC,IAAI,CAAC,eAAe,CAAC;YAC1D,CAAC;SACF;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,oBAAoB;QAClB,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAC,OAAO,GAAC,IAAI,CAAC,UAAU,GAAC,WAAW,GAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC3G,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9E,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACxE,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACtE,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC7D,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACxD,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aACjD,SAAS,CAAC,GAAG,GAAE;YACd,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;aACvD;QACH,CAAC,CAAC;IACJ,CAAC;;wFAtTU,oBAAoB;kHAApB,oBAAoB;;;;;;;;;QC3BjC,6EAAyB;QACjB,yEAA6B;QACzB,yEAA0B;QACtB,yEAAiB;QACb,yEAAqD;QACjD,wEAAyC;QACrC,wEAA4B;QACxB,wEAAuB;QAAA,uDAAmC;;QAAA,4DAAK;QACnE,4DAAK;QAET,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAA0B;QACtB,0EAAqD;QACjD,2EAAkB;QACd,2EAAoB;QAChB,sEAAI;QAAA,wDAAmC;;QAAA,4DAAK;QAEhD,4DAAM;QACN,2EAAkB;QACd,4EAAgD;QAC5C,0EAAiB;QACb,2EAAmB;QACX,sFAAqE;QAC7D,yFAAsD;QAC9C,6HAOW;QACX,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,iFAM6D;QAD7D,gLAAwB,eAAW,IAAC;QALpC,4DAM6D;QACrE,4DAAgB;QAChB,4FAAmH;QAAlE,+KAAkB,4BAAwB,IAAC;QAC5F,iIAGa;;QACb,4DAAmB;QACnB,8EAA6G;QAAxC,2RAAS,iBAA6B,IAAC;QAAE,gFAA+B;QAAA,uEAAW;QAAA,4DAAW;QAAA,4DAAS;QAC5K,+HAEY;QAChB,4DAAiB;QAC7B,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,wEAAyF;QACzF,4FAAsF;QAClF,iIAEa;;QACb,4DAAmB;QACnB,+HAIY;QACpB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,0EAAiB;QACb,2EAAmB;QACX,sEAAqH;QAC7H,4DAAM;QACN,2EAAmB;QAChB,sFAAqE;QAChE,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QAC/D,0FAA+G;QAArD,iKAAU,oCAAgC,IAAC;QACrG,4DAAqB;QACrB,gFAAoB;QAAA,wEAAY;QAAA,4DAAW;QAC/C,+HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAiB;QACb,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA6C;;QAAA,4DAAY;QAGpE,kFAAsD;QAClD,kFAA+B;QAAA,wDAAyC;;QAAA,4DAAa;QACrF,kFAA4B;QAAA,wDAAsC;;QAAA,4DAAa;QACnF,4DAAa;QACb,+HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACF,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA2C;;QAAA,4DAAY;QAClE,wEAAkD;QAClD,+HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA6C;;QAAA,4DAAY;QACpE,wEAAgD;QAChD,+HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACV,0EAAiB;QACb,2EAAmB;QACf,sFAAqE;QACjE,6EAAW;QAAA,wDAA6C;;QAAA,4DAAY;QACpE,wEAAgD;QAChD,+HAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAmB;QACf,uFAAqE;QACjE,8EAAW;QAAA,yDAAyC;;QAAA,4DAAY;QAChE,yEAAiD;QACjD,iIAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,4EAAmB;QACf,uFAAqE;QACjE,8EAAW;QAAA,yDAAmD;;QAAA,4DAAY;QAC1E,yEAAsD;QACtD,iIAEY;QAChB,4DAAiB;QACrB,4DAAM;QACN,4EAAmB;QACf,uFAAqE;QACjE,8EAAW;QAAA,yDAA6C;;QAAA,4DAAY;QACpE,yEAA+F;QAC/F,6FAAuI;QAAhF,0KAAkB,0BAAsB,IAAC;QAC5F,mIAEa;;QACb,4DAAmB;QACvB,iIAIY;QAChB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,qHAQM;QACN,qHAQM;QACN,qHAQM;QACN,4EAAmB;QACf,qFAAmE;QAAA,yDAA0C;;QAAA,4DAAe;QAChI,4DAAM;QACV,4DAAM;QACL,2EAAiB;QACd,4EAAwD;QAChD,8EAAW;QAAA,yDAAgD;;QAAA,4DAAY;QACvE,4EAA8E;QAC9E,iIAEY;QACpB,4DAAM;QACN,4EAAwD;QACpD,8EAAW;QAAA,yDAAkD;;QAAA,4DAAY;QACzE,4EAA4E;QAC5E,iIAEY;QAChB,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,4EAAwD;QAChD,8EAAW;QAAA,yDAAsD;;QAAA,4DAAY;QAC7E,4EAAoF;QACpF,iIAEY;QACpB,4DAAM;QACN,4EAAwD;QACpD,8EAAW;QAAA,yDAAwD;;QAAA,4DAAY;QAC/E,4EAAkF;QAClF,iIAEY;QAChB,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,4EAA0D;QACtD,+EACqD;QAAjC,8IAAS,0BAAsB,IAAC;QAAC,yDAAiC;;QAAA,4DAAS;QAC/F,+EAAoD;QAAnB,8IAAS,YAAQ,IAAC;QAAC,yDAAmC;;QAAA,4DAAS;QACpG,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAU;;;;;;QAhPyC,0DAAmC;QAAnC,sJAAmC;QAW1D,0DAAmC;QAAnC,uJAAmC;QAIrB,0DAA6B;QAA7B,0FAA6B;QAMW,0DAAmB;QAAnB,yFAAmB;QAOlC,0DAA4C;QAA5C,yKAA4C;QAIvD,0DAA4B;QAA5B,gFAA4B;QAML,0DAA0B;QAA1B,2JAA0B;QAM7C,0DAAkC;QAAlC,kGAAkC;QAO3C,0DAA4C;QAA5C,yKAA4C;QAC3B,0DAA4B;QAA5B,yFAA4B;QACP,0DAAoC;QAApC,iGAAoC;QAClD,0DAA0B;QAA1B,2JAA0B;QAIvB,0DAA+B;QAA/B,qGAA+B;QAUxD,0DAAgF;QAAhF,4NAAgF;QAI1E,0DAA4C;QAA5C,gKAA4C;QAI3C,0DAAoE;QAApE,oIAAoE;QAW7E,0DAA6C;QAA7C,iKAA6C;QAIrB,0DAAyC;QAAzC,6JAAyC;QAC5C,0DAAsC;QAAtC,0JAAsC;QAE1D,0DAAgE;QAAhE,gIAAgE;QAO7D,0DAA2C;QAA3C,wKAA2C;QAE1C,0DAAiE;QAAjE,iIAAiE;QAOlE,0DAA6C;QAA7C,0KAA6C;QAE5C,0DAA+D;QAA/D,+HAA+D;QASpE,0DAA6C;QAA7C,0KAA6C;QAE5C,0DAA+D;QAA/D,+HAA+D;QAOhE,0DAAyC;QAAzC,uKAAyC;QAExC,0DAAgE;QAAhE,gIAAgE;QAOjE,0DAAmD;QAAnD,iLAAmD;QAElD,0DAAqE;QAArE,qIAAqE;QAOtE,0DAA6C;QAA7C,2KAA6C;QAC5B,0DAA6B;QAA7B,0FAA6B;QACwC,0DAAqC;QAArC,kGAAqC;QACnG,0DAA2B;QAA3B,6JAA2B;QAI5B,0DAAgC;QAAhC,sGAAgC;QAStD,0DAAgB;QAAhB,gFAAgB;QAShB,0DAAgB;QAAhB,gFAAgB;QAShB,0DAAgB;QAAhB,gFAAgB;QAUmC,0DAA0C;QAA1C,+JAA0C;QAK9F,0DAAgD;QAAhD,8KAAgD;QACjD,0DAAiB;QAAjB,8EAAiB;QACf,0DAAsE;QAAtE,sIAAsE;QAK3E,0DAAkD;QAAlD,gLAAkD;QACnD,0DAAiB;QAAjB,8EAAiB;QACf,0DAAoE;QAApE,oIAAoE;QAOjE,0DAAsD;QAAtD,oLAAsD;QACvD,0DAAiB;QAAjB,8EAAiB;QACf,0DAA4E;QAA5E,4IAA4E;QAKjF,0DAAwD;QAAxD,uLAAwD;QACzD,0DAAiB;QAAjB,8EAAiB;QACf,0DAA0E;QAA1E,0IAA0E;QAO5D,0DAAmE;QAAnE,oIAAmE;QACxC,0DAAiC;QAAjC,uJAAiC;QAClC,0DAAmC;QAAnC,yJAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnOlE;;;;;;;;;;;;;;IC0D7B,yEAAgC;IAChC,qEAAyE;IACzE,4DAAK;;;IADW,0DAAsD;IAAtD,yLAAsD;;;;IAetE,uEAAM;IACN,6EAAiG;IAArC,ybAAoC;IAC5F,+EAA8C;IAAA,gEAC9C;IAAA,4DAAW;IACf,4DAAS;IACT,6EAAiH;IAAnD,2gBAAkD;IAC5G,+EAAgD;IAAA,kEAChD;IAAA,4DAAW;IACf,4DAAS;IACT,4DAAO;;;;IAc7B,0EAAyC;IACzC,yEAA+C;IAAC,0EAA2B;IACvE,0EAAyB;IACrB,0EAA6C;IAC3C,uDAAqC;;IAAA,4DAAM;IACjD,4DAAM;IACN,4DAAM;IACV,4DAAK;IACL,6EAA8F;IAAvC,2RAAS,kBAAc,aAAa,CAAC,IAAC;IACzF,2EAAyB;IAAA,wEAA0B;IAAA,iEAAK;IAAA,4DAAI;IAAA,4DAAO;IACvE,4DAAS;IACT,4DAAM;IACN,2EAAwB;IACpB,qEAAG;IAAA,wDAAqC;;IAAA,4DAAI;IAC5C,2EAA0B;IAC1B,2EAAyB;IACrB,8EAAyF;IAAjC,gVAAgC;IAAC,wDAAgC;;IAAA,4DAAS;IAClI,8EAAyD;IAAxB,4RAAS,iBAAa,IAAC;IAAC,wDAAmC;;IAAA,4DAAS;IACzG,4DAAM;IACN,4DAAM;IACV,4DAAM;;IAhBI,0DAAqC;IAArC,iKAAqC;IASxC,0DAAqC;IAArC,wJAAqC;IAGqD,0DAAgC;IAAhC,mJAAgC;IAChE,0DAAmC;IAAnC,uJAAmC;;ADtGvG,MAAM,oBAAoB;IAc/B,YAAqB,UAAsB,EAClC,MAAiB,EACjB,cAA8B,EAC7B,QAAqB,EAAS,MAAc,EAAU,YAAsB,EAC9E,aAA2B;QAJd,eAAU,GAAV,UAAU,CAAY;QAClC,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAC9E,kBAAa,GAAb,aAAa,CAAc;QAhBnC,YAAO,GAAG;YACR,EAAE,IAAI,EAAE,cAAc,EAAE;YACxB,EAAE,IAAI,EAAE,cAAc,EAAE;YACxB,EAAE,IAAI,EAAE,qBAAqB,EAAE;YAC/B,EAAC,IAAI,EAAE,eAAe,EAAC;YACvB,EAAC,IAAI,EAAE,aAAa,EAAC;SACtB,CAAC;QACF,SAAI,GAAC,EAAE,CAAC;QACR,iBAAY,GAAG,EAAE,CAAC;QAClB,iBAAY,GAAC,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAOxB,CAAC;IAKtC,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC;IACtD,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,cAAc,CAAC,MAAM,CAAC;aACjE,SAAS,CAAC,GAAG,GAAE;YACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5C,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACnC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC/E,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAChE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,yDAAyD;QACzD,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7C,yCAAyC;QACzC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACpC,kDAAkD;QAClD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,kDAAkD;QAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,IAAI;YACjD,yCAAyC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBAChC,oBAAoB;gBACpB,IACE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAC1D,CAAC,GAAG,EACJ;oBACA,gDAAgD;oBAChD,OAAO,IAAI,CAAC;iBACb;aACF;QACH,CAAC,CAAC,CAAC;QACH,gEAAgE;QAChE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,GAAG,EAAE,QAAQ;QACrB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,EAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,aAAa,CAAC,GAAG,EAAE,QAAQ,EAAC,YAAY;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,GAAC,GAAG,CAAC;IACvB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAC,cAAc,CAAC,WAAW,EAAC,cAAc,CAAC,MAAM,CAAC;aAC1G,SAAS,CAAC,GAAG,GAAE;YACd,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBACtD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;gBAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;QACH,CAAC,CAAC;IACJ,CAAC;;wFA3FU,oBAAoB;kHAApB,oBAAoB;kEAoBlB,uEAAkB;;;;;QC3CjC,6EAAyB;QACjB,yEAA6B;QAC3B,yEAA0B;QACxB,yEAAiB;QACf,yEAAqD;QACnD,wEAAyC;QACvC,wEAA4B;QAC1B,wEAAuB;QAAA,uDAAmC;;QAAA,4DAAK;QACjE,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EAAiB;QACf,0EAAuB;QACjB,0EAAkB;QAChB,2EAAqD;QACnD,2EAAkB;QAChB,2EAAkB;QAChB,2EAA8B;QAC5B,2EAAiC;QAC/B,0EAAiB;QACf,2EAAmB;QACjB,0EAAqC;QACnC,0EAAqB;QACnB,sEAAI;QACF,0EAAQ;QAAA,wDAAmC;;QAAA,4DAAS;QAAA,4DAAK;QAC7D,4DAAK;QACL,0EAA4B;QACxB,6EAA0B;QAAA,yEAAsC;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAQ;QAClF,6EAC0D;QAA1D,kJAAS,2BAAuB,IAAC;QADjC,4DAC0D;QAC9D,4DAAK;QACL,iEAOK;QACP,4DAAK;QACP,4DAAM;QACN,2EAAmB;QACjB,0EAA2B;QACzB,sEAAI;QACF,2EAA8B;QAC5B,8EAA+D;QAA1B,6IAAS,mBAAe,IAAC;QAC5D,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAC5C,4DAAS;QACX,4DAAM;QACR,4DAAK;QACL,sEAAI;QACF,2EAA8B;QAC5B,8EAAyD;QAApB,6IAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,oEAC5B;QAAA,4DAAW;QACb,4DAAS;QACX,4DAAM;QACR,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,yFAC+F;QAE/F,4FAAuF;QACvF,mIAIc;QACd,4DAAuB;QACvB,uFAAkI;;QAClI,uFAAkI;;QAClI,uFAAgJ;;QAChJ,uFAAoI;;QACpI,uFAAgI;;QAKhI,4FAA6F;;QAC7F,mIAWc;QACd,4DAAuB;QAC3B,4DAAgB;QACd,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAU;QACV,iNAsBc;;QA1HuB,0DAAmC;QAAnC,sJAAmC;QAmB9B,2DAAmC;QAAnC,uJAAmC;QAsChB,2DAAa;QAAb,0EAAa;QAGqB,0DAAa;QAAb,sEAAa;QAOhE,0DAAkD;QAAlD,2KAAkD;QAAqB,sEAAa;QACpF,0DAAkD;QAAlD,2KAAkD;QAAqB,sEAAa;QACpF,0DAAyD;QAAzD,kLAAyD;QAA4B,sEAAa;QAClG,0DAAmD;QAAnD,4KAAmD;QAAsB,sEAAa;QACtF,0DAAiD;QAAjD,0KAAiD;QAAoB,sEAAa;QAKlF,0DAAuC;QAAvC,gKAAuC;QAAkB,sEAAa;;;;;;;;;;;;;;;;;;;;;;AClFjE;AACsB;AACH;AACG;;;AAE7E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,sFAAoB;KAChC;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,mFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,sFAAoB;KAChC;IACD,IAAI;IACJ,2BAA2B;IAC3B,qCAAqC;IACrC,IAAI;CACL,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHAHtB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,oBAAoB,oFAFrB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BuB;AACmB;AACT;AACQ;AACC;AACT;AACO;AACL;AACJ;AACI;AACA;AACJ;AACM;AACM;AACJ;AACG;AACX;AACA;AACuB;AACjB;AACpB;AACuB;AAChE,0FAA0F;AAC1F,kGAAkG;AAC/C;AACG;AACiB;AACM;AACH;AACG;AAChB;AACA;AACN;;AAwChD,MAAM,aAAa;;0EAAb,aAAa;0GAAb,aAAa;+GAFb,CAAC,4DAAc,CAAC,YA1BlB,CAAC,uEAAkB,EAAC,mEAAc;YACzC,uEAAc;YACd,yDAAY;YACZ,wDAAW;YACX,gEAAmB;YACnB,oEAAc;YACd,4EAAkB;YAClB,6EAAkB;YAClB,oEAAc;YACd,2EAAiB;YACjB,sEAAe;YACf,kEAAa;YACb,sEAAe;YACf,kEAAa;YACb,wEAAgB;YAChB,sEAAe;YACf,8EAAmB;YACnB,0EAAiB;YACjB,kEAAa;YACb,kEAAa;YACb,6EAAuB;YACvB,yEAAoB;YACpB,yFAAwB,EAAC,wEAAgB;YACzC,oDAAa,EAAC,iEAAe;YAC7B,kFAAqB;SACtB;mIAGU,aAAa;QAnCtB,yBAAyB;QACzB,uBAAuB;QAEvB,sFAAoB;QACpB,mFAAmB;QACnB,sFAAoB,aAEZ,uEAAkB,EAAC,mEAAc;QACzC,uEAAc;QACd,yDAAY;QACZ,wDAAW;QACX,gEAAmB;QACnB,oEAAc;QACd,4EAAkB;QAClB,6EAAkB;QAClB,oEAAc;QACd,2EAAiB;QACjB,sEAAe;QACf,kEAAa;QACb,sEAAe;QACf,kEAAa;QACb,wEAAgB;QAChB,sEAAe;QACf,8EAAmB;QACnB,0EAAiB;QACjB,kEAAa;QACb,kEAAa;QACb,6EAAuB;QACvB,yEAAoB;QACpB,yFAAwB,EAAC,wEAAgB;QACzC,oDAAa,EAAC,iEAAe;QAC7B,kFAAqB;;;;;;;;;;;;;;;;;;;;AClEY;AAC0B;;;AAKxD,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,iBAAiB,CAAC,WAAW,EAAC,SAAS,EAAC,MAAM;QAC5C,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,8BAA8B,EAAC,EAAC,WAAW,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC;aAC7F,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,MAAM;QAC5B,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,oCAAoC,EAAC,EAAC,MAAM,EAAC,CAAC;aAC7E,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,MAAM;QACxB,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,gCAAgC,EAAC,EAAC,MAAM,EAAC,CAAC;aACzE,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI;aACf,GAAG,CAAM,GAAG,yEAAkB,8BAA8B,CAAC;aAC7D,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI;aACf,GAAG,CAAM,GAAG,yEAAkB,6BAA6B,CAAC;aAC5D,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAID,iBAAiB,CAAC,QAAQ;QACxB,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,8BAA8B,EAAC,QAAQ,CAAC;aACvE,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,MAAM;QAC5B,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,oCAAoC,EAAC,EAAC,MAAM,EAAC,CAAC;aAC7E,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,SAAS,EAAC,MAAM;QAC/B,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,6BAA6B,EAAC,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC;aAChF,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oBAAoB,CAAC,QAAQ;QAC3B,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,iCAAiC,EAAC,QAAQ,CAAC;aAC1E,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oBAAoB,CAAC,WAAW,EAAC,SAAS,EAAC,MAAM;QAC/C,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,iCAAiC,EAAC,EAAC,WAAW,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC;aAChG,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,sBAAsB,CAAC,MAAM;QAC3B,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAM,GAAG,yEAAkB,mCAAmC,EAAC,EAAC,MAAM,EAAC,CAAC;aAC5E,IAAI,CACH,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;4EApHU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM","file":"src_app_admin_package_package_module_ts-es2015.js","sourcesContent":["import { Component, OnInit,ViewChild,ChangeDetectorRef,ElementRef } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\nimport { LanguageService } from '../../../core/service/language.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {PackageService} from '../package.service';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteTrigger} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\n\n\nfunction autocompleteObjectValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (typeof control.value === 'string') {\n      return { 'invalidAutocompleteObject': { value: control.value } }\n    }\n    return null  /* valid option selected */\n  }\n}\n\n@Component({\n  selector: 'app-add-package',\n  templateUrl: './add-package.component.html',\n  styleUrls: ['./add-package.component.scss']\n})\nexport class AddPackageComponent implements OnInit {\n\n  @ViewChild('autocompleteTrigger') matACTrigger: MatAutocompleteTrigger;\n  @ViewChild('licenceInput') licenceInput: ElementRef<HTMLInputElement>;\n\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  license_selected= [];\n  show2Phase=false;\n  show3Phase=false;\n  clientCode;\n\n  addPackageForm:FormGroup;\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n  \n  licenseTypeData:any;\n  packageTypeData:any;\n  paymentPhaseData:any;\n\n  license_type = new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] }); \n  package_type= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });  \n  payment_phase= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });  \n\n  licenseTypeList: Observable<string[]>;\n  packageTypeList: Observable<string[]>;\n  paymentPhaseList: Observable<string[]>;\n\n  public Editor = ClassicEditor;\n  constructor(private cdRef:ChangeDetectorRef,private fb: FormBuilder,\n    private languageService:LanguageService,private toastrService: ToastrService,private packageService:PackageService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n      this.getPackageTypeList();\n      this.getLicenseClassList();\n      this.getPaymentPhases();\n      this.packageService.getClientCodeForFolder(sessionStorage.client)\n    .subscribe((res)=>{\n        this.clientCode=res['data'][0].client_code;\n    })\n    this.addPackageForm = this.fb.group({\n      package_price: ['', Validators.required],\n      package_offers:['', Validators.required],\n      package_english: ['', Validators.required],\n      package_malay: ['', Validators.required],\n      promo_discount: ['', Validators.required],\n      package_desc_english: ['', Validators.required],\n      package_desc_malay:['', Validators.required],\n      final_package_price:['', Validators.required],\n      first_phase_amount:[''],\n      second_phase_amount:[''],\n      third_phase_amount:[''],\n      package_phase_desc_english:['', Validators.required],\n      package_phase_desc_malay:['', Validators.required],\n      package_image:['', Validators.required],  \n      package_image_name:['', Validators.required],\n      global_view:[''],\n    });\n\n    this.languageService.languageChanged.subscribe(value => {\n      this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n      this.getPackageTypeList();\n      this.getLicenseClassList();\n      this.getPaymentPhases();\n    })\n  }\n  \n\n  getPackageTypeList(){\n    this.packageService.getPakageTypeList()\n    .subscribe(res=>{\n      this.packageTypeData=res['data'];\n      this.packageTypeList = this.package_type.valueChanges.pipe(\n        startWith(''),\n        map(value => (typeof value === 'string' ? value : value[this.translateVal])),\n        map(name => (name ? this._filterPackageType(name) : this.packageTypeData.slice())),\n      );\n    })\n  }\n  \n\n  getLicenseClassList(){\n    this.packageService.getLicenseClassList(sessionStorage.client)\n    .subscribe(res=>{\n      this.licenseTypeData=res['data'];\n      console.log(\"this.this.license_type=========\",this.license_type);\n      this.licenseTypeList = this.license_type.valueChanges.pipe(\n        startWith(''),\n        map((fruit: string | null) => fruit ? this._filterLicenseType(fruit) : this.licenseTypeData.slice()));\n    })\n  }\n\n  getPaymentPhases(){\n    this.packageService.getPaymentPhases()\n    .subscribe(res=>{\n      console.log(\"res['data']===0\",res['data']);\n      this.paymentPhaseData=res['data'];\n      this.paymentPhaseList = this.payment_phase.valueChanges.pipe(\n        startWith(''),\n        map(value => (typeof value === 'string' ? value : value[this.translateVal])),\n        map(name => (name ? this._filterpaymentPhase(name) : this.paymentPhaseData.slice())),\n      );\n    })\n  }\n\n  displayFn(user): string {\n    return user && user.license_class ? user.license_class : '';\n  }\n\n  displayFnPackageType(user): string {\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\n  }\n\n  displayFnPaymentPhase(user): string {\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\n  }\n\n  private _filterLicenseType(name): [] {\n    console.log(\"name=====\",name);\n    const filterValue = name.toLowerCase();\n    return this.licenseTypeData.filter(option => option.license_class.toLowerCase().includes(filterValue));\n  }\n\n  private _filterPackageType(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.packageTypeData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\n  }\n\n  \n  private _filterpaymentPhase(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.paymentPhaseData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    console.log(\"------------\",value)\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.license_selected.push(value);\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    this.license_type.setValue(null);\n  }\n\n  remove(license: string): void {\n    const index = this.license_selected.indexOf(license);\n\n    if (index >= 0) {\n      this.license_selected.splice(index, 1);\n    }    \n  }\n\n  selectedListType(event: MatAutocompleteSelectedEvent): void {\n    const newValue = event.option.viewValue;\n    console.log(\"newValue=======\",event.option.viewValue);\n    if (this.license_selected.includes(newValue)) {\n      this.license_selected = [...this.license_selected.filter(fruit=>fruit !== newValue)];\n    } else {\n      this.license_selected.push(event.option.viewValue);\n    }\n    this.licenceInput.nativeElement.value = '';\n    this.license_type.setValue(null);\n\n\n    if(this.license_selected.length > 1){\n      var packageObj=this.packageTypeData.filter((elem)=>{return elem.id==1});\n      this.package_type.setValue(packageObj[0])\n    }else{\n      var packageObj=this.packageTypeData.filter((elem)=>{return elem.id==2});\n      this.package_type.setValue(packageObj[0])\n    }\n    // keep the autocomplete opened after each item is picked.\n    requestAnimationFrame(()=>{\n      this.openAuto(this.matACTrigger);\n    })\n\n  }\n\n  selectedPaymentPhase(){\n    if(this.payment_phase.value.id == 2){\n      this.show2Phase=true;\n      this.show3Phase=false;\n    }else if(this.payment_phase.value.id == 3){\n      this.show2Phase=true;\n      this.show3Phase=true;\n    }else{\n      this.show2Phase=false;\n      this.show3Phase=false;\n    }\n  }\n\n  openAuto(trigger: MatAutocompleteTrigger) {\n    trigger.openPanel();\n    this.licenceInput.nativeElement.focus();\n    console.log(trigger);\n  }\n\n\n\n  public validation_msgs = {\n    'license_type': [\n      { type: 'invalidAutocompleteObject', message: 'License Type not recognized. Click one of the options.' },\n      { type: 'required', message: 'License Type is required.' }\n    ],\n    'package_type': [\n      { type: 'invalidAutocompleteObject', message: 'Package Type not recognized. Click one of the options.' },\n      { type: 'required', message: 'Package Type is required.' }\n    ],\n    'payment_phase': [\n      { type: 'invalidAutocompleteObject', message: 'Payment Phase not recognized. Click one of the options.' },\n      { type: 'required', message: 'Payment Phase is required.' }\n    ],\n  }\n\n  setPackageDetails(){\n    console.log(\"this.addPackageForm.value====\",this.addPackageForm.value,this.package_type,this.license_selected)\n    const formData = new FormData();\n    formData.append('baseRoot','root/'+this.clientCode+'/Package/'+this.addPackageForm.value.package_english);\n    formData.append('PackageFormData',JSON.stringify(this.addPackageForm.value));\n    formData.append('package_type',JSON.stringify(this.package_type.value));\n    formData.append('license_type',JSON.stringify(this.license_selected));\n    formData.append('payment_phase',this.payment_phase.value.id);\n    formData.append('authToken',sessionStorage.currentUser);\n    formData.append('client',sessionStorage.client);\n    formData.append('file',this.addPackageForm.value.package_image);\n    if(this.payment_phase.value.id == 2){\n      if(this.addPackageForm.value.first_phase_amount != '' && this.addPackageForm.value.second_phase_amount != ''){\n        this.packageService.setPackageDetails(formData)\n        .subscribe(res=>{\n          if(res['status'] == 'Success'){\n            this.toastrService.success(\"Registered Successfully!!\");\n            this.addPackageForm.reset();\n            this.router.navigate(['/admin/package/package-list']);\n          }else{\n            this.toastrService.error(res['status']);\n          }\n        })\n      }else{\n        this.toastrService.error(\"Please provide Phase Amounts\");\n      }\n    }else if(this.payment_phase.value.id == 3){\n      if(this.addPackageForm.value.first_phase_amount != '' && this.addPackageForm.value.second_phase_amount != '' && this.addPackageForm.value.third_phase_amount != ''){\n        this.packageService.setPackageDetails(formData)\n        .subscribe(res=>{\n          if(res['status'] == 'Success'){\n            this.toastrService.success(\"Registered Successfully!!\");\n            this.addPackageForm.reset();\n            this.router.navigate(['/admin/package/package-list']);\n          }else{\n            this.toastrService.error(res['status']);\n          }\n        })\n      }else{\n        this.toastrService.error(\"Please provide Phase Amounts\");\n      }\n    }else{\n      this.packageService.setPackageDetails(formData)\n      .subscribe(res=>{\n        if(res['status'] == 'Success'){\n          this.toastrService.success(\"Registered Successfully!!\");\n          this.addPackageForm.reset();\n          this.router.navigate(['/admin/package/package-list']);\n        }else{\n          this.toastrService.error(res['status']);\n        }\n      })\n    }\n   \n  }\n\n  onFileChangePackageImage(event){\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.addPackageForm.patchValue({\n          package_image:file\n        })\n        console.log(\"this.documentForm===\",this.addPackageForm)\n      }\n    }\n  }\n\n  goBack(){\n    this.router.navigate(['/admin/package/package-list']);\n  }\n\n}\n","<section class=\"content\">\n        <div class=\"container-fluid\">\n            <div class=\"block-header\">\n                <div class=\"row\">\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                        <ul class=\"breadcrumb breadcrumb-style \">\n                            <li class=\"breadcrumb-item\">\n                                <h4 class=\"page-title\">{{'PACKAGE.TITLE' | translate}}</h4>\n                            </li>\n                           \n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row clearfix\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                    <div class=\"card\">\n                        <div class=\"header\">\n                            <h2>{{'PACKAGE.TITLE' | translate}}</h2>\n                            \n                        </div>\n                        <div class=\"body\">\n                            <form class=\"m-4\" [formGroup]=\"addPackageForm\">\n                                <div class=\"row\">\n                                    <div class=\"col-4\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-chip-list #chipList aria-label=\"Fruit selection\">\n                                                    <mat-chip\n                                                        *ngFor=\"let licenseDt of license_selected\"\n                                                        [selectable]=\"selectable\"\n                                                        [removable]=\"removable\"\n                                                        (removed)=\"remove(licenseDt)\">\n                                                        {{licenseDt}}\n                                                        <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon> \n                                                    </mat-chip> \n                                                    <mat-label>{{'PACKAGE.LIST.LICENSE-TYPE' | translate}}*</mat-label>\n                                                    <input type=\"text\" matInput \n                                                    #licenceInput\n                                                    #autocompleteTrigger=\"matAutocompleteTrigger\"\n                                                    [matChipInputFor]=\"chipList\"\n                                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                                    (matChipInputTokenEnd)=\"add($event)\"\n                                                    [formControl]=\"license_type\" [matAutocomplete]=\"autoLicense\">\n                                            </mat-chip-list>\n                                            <mat-autocomplete #autoLicense=\"matAutocomplete\" (optionSelected)=\"selectedListType($event)\" autoActiveFirstOption>\n                                            <mat-option *ngFor=\"let option of licenseTypeList | async\" [value]=\"option.license_class\">\n                                                    <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\" [checked]=\"license_selected.indexOf(option.license_class) >= 0\"></mat-checkbox>\n                                                {{option.license_class}}\n                                            </mat-option>\n                                            </mat-autocomplete>\n                                            <button mat-icon-button matSuffix style=\"width: 34px; height: 34px;\" (click)=\"openAuto(autocompleteTrigger)\"> <mat-icon style=\"width: 34px;\">expand_more</mat-icon></button>\n                                            <mat-error *ngIf=\"license_selected.length == 0\">\n                                                        {{'PACKAGE.LIST.LICENSE-TYPE' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-TYPE' | translate}}*</mat-label>\n                                            <input type=\"text\" matInput [formControl]=\"package_type\" [matAutocomplete]=\"autoPackage\">                                            \n                                            <mat-autocomplete #autoPackage=\"matAutocomplete\" [displayWith]=\"displayFnPackageType\">\n                                                <mat-option *ngFor=\"let option of packageTypeList | async\" [value]=\"option\">\n                                                    {{option[translateVal]}}\n                                                </mat-option>\n                                                </mat-autocomplete>\n                                                <mat-error *ngFor=\"let validation of validation_msgs.package_type\">\n                                                    <div *ngIf=\"package_type.hasError(validation.type)\">\n                                                      {{validation.message}}\n                                                    </div>\n                                                </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-IMAGE' | translate}}</mat-label>\n                                                <ngx-mat-file-input formControlName=\"package_image_name\"  (change)=\"onFileChangePackageImage($event)\" required>\n                                                </ngx-mat-file-input>\n                                                <mat-icon matSuffix>cloud_upload</mat-icon>\n                                            <mat-error *ngIf=\"addPackageForm.get('package_image_name').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-IMAGE' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                        <div class=\"col-4\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                <mat-label>{{'PACKAGE.LIST.PACKAGE-OFFERS' | translate}}</mat-label>\n                                                <!-- <input matInput formControlName=\"package_offers\">     \n                                                                                        -->\n                                                <mat-select formControlName=\"package_offers\" required>\n                                                    <mat-option value=\"Affordable\">{{'PACKAGE.LIST.AFFORDABLE' | translate}}</mat-option>\n                                                    <mat-option value=\"Premium\">{{'PACKAGE.LIST.PREMIUM' | translate}}</mat-option>\n                                                </mat-select> \n                                                <mat-error *ngIf=\"addPackageForm.get('package_offers').hasError('required')\">\n                                                        {{'PACKAGE.LIST.PACKAGE-OFFERS' | translate}} is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> \n                                        <div class=\"col-4\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                <mat-label>{{'PACKAGE.LIST.PACKAGE-ENG' | translate}}*</mat-label>\n                                                <input matInput formControlName=\"package_english\">                                            \n                                                <mat-error *ngIf=\"addPackageForm.get('package_english').hasError('required')\">\n                                                        {{'PACKAGE.LIST.PACKAGE-ENG' | translate}} is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> \n                                        <div class=\"col-4\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                <mat-label>{{'PACKAGE.LIST.PACKAGE-MALAY' | translate}}*</mat-label>\n                                                <input matInput formControlName=\"package_malay\">                                            \n                                                <mat-error *ngIf=\"addPackageForm.get('package_malay').hasError('required')\">\n                                                        {{'PACKAGE.LIST.PACKAGE-MALAY' | translate}} is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        \n                                    </div>\n                                <div class=\"row\">\n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-PRICE' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"package_price\">                                            \n                                            <mat-error *ngIf=\"addPackageForm.get('package_price').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-PRICE' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PROMO-DIS' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"promo_discount\">                                            \n                                            <mat-error *ngIf=\"addPackageForm.get('promo_discount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PROMO-DIS' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.FIANL-PACKAGE-PRICE' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"final_package_price\">                                            \n                                            <mat-error *ngIf=\"addPackageForm.get('final_package_price').hasError('required')\">\n                                                    {{'PACKAGE.LIST.FIANL-PACKAGE-PRICE' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE' | translate}}*</mat-label>\n                                                <input type=\"text\" matInput [formControl]=\"payment_phase\" [matAutocomplete]=\"autoPaymentPhase\">                                            \n                                                <mat-autocomplete #autoPaymentPhase=\"matAutocomplete\"  (optionSelected)=\"selectedPaymentPhase()\" [displayWith]=\"displayFnPaymentPhase\">\n                                                    <mat-option *ngFor=\"let option of paymentPhaseList | async\" [value]=\"option\">\n                                                        {{option[translateVal]}}\n                                                    </mat-option>\n                                                    </mat-autocomplete>\n                                                <mat-error *ngFor=\"let validation of validation_msgs.payment_phase\">\n                                                    <div *ngIf=\"payment_phase.hasError(validation.type)\">\n                                                      {{validation.message}}\n                                                    </div>\n                                                </mat-error>  \n                                            </mat-form-field>\n                                        </div> \n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-3\" *ngIf=\"show2Phase\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE-AMT-1' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"first_phase_amount\">                                            \n                                            <mat-error *ngIf=\"addPackageForm.get('first_phase_amount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PAYMENT-PHASE-AMT-1' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\" *ngIf=\"show2Phase\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE-AMT-2' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"second_phase_amount\">                                            \n                                            <mat-error *ngIf=\"addPackageForm.get('second_phase_amount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PAYMENT-PHASE-AMT-2' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\" *ngIf=\"show3Phase\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE-AMT-3' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"third_phase_amount\">                                            \n                                            <mat-error *ngIf=\"addPackageForm.get('third_phase_amount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PAYMENT-PHASE-AMT-3' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <mat-checkbox class=\"example-margin\" formControlName=\"global_view\">{{'PACKAGE.LIST.GLOBAL-VIEW' | translate}}</mat-checkbox>     \n                                    </div>\n                                </div>\n                                 <div class=\"row\">\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-DESC-ENG' | translate}}*</mat-label>\n                                            <ckeditor [editor]=\"Editor\" formControlName=\"package_desc_english\"></ckeditor>\n                                            <mat-error *ngIf=\"addPackageForm.get('package_desc_english').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-DESC-ENG' | translate}} is required\n                                            </mat-error>\n                                    </div>\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                        <mat-label>{{'PACKAGE.LIST.PACKAGE-DESC-MALAY' | translate}}*</mat-label>\n                                        <ckeditor [editor]=\"Editor\" formControlName=\"package_desc_malay\"></ckeditor>\n                                        <mat-error *ngIf=\"addPackageForm.get('package_desc_malay').hasError('required')\">\n                                                {{'PACKAGE.LIST.PACKAGE-DESC-MALAY' | translate}} is required\n                                        </mat-error>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-PHASE-DESC-ENG' | translate}}*</mat-label>\n                                            <ckeditor [editor]=\"Editor\" formControlName=\"package_phase_desc_english\"></ckeditor>\n                                            <mat-error *ngIf=\"addPackageForm.get('package_phase_desc_english').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-PHASE-DESC-ENG' | translate}} is required\n                                            </mat-error>\n                                    </div>\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                        <mat-label>{{'PACKAGE.LIST.PACKAGE-PHASE-DESC-MALAY' | translate}}*</mat-label>\n                                        <ckeditor [editor]=\"Editor\" formControlName=\"package_phase_desc_malay\"></ckeditor>\n                                        <mat-error *ngIf=\"addPackageForm.get('package_phase_desc_malay').hasError('required')\">\n                                                {{'PACKAGE.LIST.PACKAGE-PHASE-DESC-MALAY' | translate}} is required\n                                        </mat-error>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"row\">\n                                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                        <button class=\"btn-space\" [disabled]=\"!addPackageForm.valid || license_selected.length == 0\" mat-raised-button\n                                            color=\"primary\" (click)=\"setPackageDetails()\"> {{'BUTTON.ADD-BTN' | translate}}</button>\n                                        <button type=\"button\" mat-button (click)=\"goBack()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>","import { Component, OnInit,ViewChild,ChangeDetectorRef,ElementRef } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\nimport { LanguageService } from '../../../core/service/language.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {PackageService} from '../package.service';\nimport {Router,ActivatedRoute} from '@angular/router'\nimport {MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteTrigger} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\n\n\nfunction autocompleteObjectValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (typeof control.value === 'string') {\n      return { 'invalidAutocompleteObject': { value: control.value } }\n    }\n    return null  /* valid option selected */\n  }\n}\n\n@Component({\n  selector: 'app-edit-package',\n  templateUrl: './edit-package.component.html',\n  styleUrls: ['./edit-package.component.scss']\n})\nexport class EditPackageComponent implements OnInit {\n\n  @ViewChild('autocompleteTrigger') matACTrigger: MatAutocompleteTrigger;\n  @ViewChild('licenceInput') licenceInput: ElementRef<HTMLInputElement>;\n\n  public Editor = ClassicEditor;\n\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  license_selected= [];\n  show2Phase=false;\n  show3Phase=false;\n  clientCode;\n  package_preview;\n\n  packageId; \n  editPackageForm:FormGroup;\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n  \n  licenseTypeData:any;\n  packageTypeData:any;\n  paymentPhaseData:any;\n\n  license_type = new FormControl('', { validators: [autocompleteObjectValidator()] }); \n  package_type= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });  \n  payment_phase= new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] });  \n\n  licenseTypeList: Observable<string[]>;\n  packageTypeList: Observable<string[]>;\n  paymentPhaseList: Observable<string[]>;\n\n  constructor(private cdRef:ChangeDetectorRef,private fb: FormBuilder,\n    private languageService:LanguageService,private toastrService: ToastrService,private router: Router,private route: ActivatedRoute,\n    private packageService:PackageService\n  ) {\n     this.packageId=this.route.snapshot.paramMap.get('id');\n     this.editPackageForm = this.fb.group({\n       id:[''],\n       package_offers:['',Validators.required],\n      package_price: ['', Validators.required],\n      prev_package_english: ['', Validators.required],\n      prev_package_malay: ['', Validators.required],\n      package_english: ['', Validators.required],\n      package_malay: ['', Validators.required],\n      promo_discount: ['', Validators.required],\n      package_desc_english: ['', Validators.required],\n      package_desc_malay:['', Validators.required],\n      final_package_price:['', Validators.required],\n      first_phase_amount:[''],\n      second_phase_amount:[''],\n      third_phase_amount:[''],\n      package_phase_desc_english:['', Validators.required],\n      package_phase_desc_malay:['', Validators.required],\n      package_image:['', Validators.required],\n      package_image_name:['', Validators.required],\n      global_view:[''],\n    });\n   }\n\n   \n\n  ngOnInit(): void {\n    \n    this.getPackageTypeList();\n    this.getLicenseClassList();\n   this.getPaymentPhases();\n   this.packageService.getClientCodeForFolder(sessionStorage.client)\n   .subscribe((res)=>{\n       this.clientCode=res['data'][0].client_code;\n   })\n    this.languageService.languageChanged.subscribe(value => {\n      this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n      this.getPackageTypeList();\n      this.getLicenseClassList();\n      this.getPaymentPhases();\n    })\n\n    this.packageService.getPackageToEdit(this.packageId,sessionStorage.client)\n    .subscribe(res=>{\n      let resObj=res['data'][0]\n        this.editPackageForm.patchValue({\n          id:resObj.id,\n          package_price: resObj.package_price,\n          prev_package_english: resObj.package_english,\n          prev_package_malay: resObj.package_malay,\n          package_english: resObj.package_english,\n          package_malay: resObj.package_malay,\n          promo_discount: resObj.promo_discount,\n          package_desc_english: resObj.package_desc_english,\n          package_desc_malay:resObj.package_desc_malay,\n          package_offers:resObj.package_offers,\n          final_package_price:resObj.final_package_price,\n          first_phase_amount:resObj.first_phase_amount,\n          second_phase_amount:resObj.second_phase_amount,\n          third_phase_amount:resObj.third_phase_amount,\n          package_phase_desc_english:resObj.package_phase_desc_english,\n          package_phase_desc_malay:resObj.package_phase_desc_malay,\n          package_image:resObj.package_image,\n          package_image_name:resObj.package_image,\n          global_view:resObj.global_view == 1 ? true : false,\n        });\n        var licenseObj=resObj.license_data;\n        var packageObj=this.packageTypeData.filter((elem)=>{return elem.id==resObj.package_type_id});\n        var paymentObj=this.paymentPhaseData.filter((elem)=>{return elem.id==resObj.payment_phase});\n        console.log(\"licenseObj--------\",licenseObj);\n        this.license_selected=resObj.license_list;\n        this.license_type.setValue(licenseObj);\n        this.package_type.setValue(packageObj[0]);\n        this.payment_phase.setValue(paymentObj[0]);\n        if(this.payment_phase.value.id == 2){\n          this.show2Phase=true;\n          this.show3Phase=false;\n        }else if(this.payment_phase.value.id == 3){\n          this.show2Phase=true;\n          this.show3Phase=true;\n        }else{\n          this.show2Phase=false;\n          this.show3Phase=false;\n        }\n    });\n  }\n\n  getPackageTypeList(){\n    this.packageService.getPakageTypeList()\n    .subscribe(res=>{\n      this.packageTypeData=res['data'];\n      this.packageTypeList = this.package_type.valueChanges.pipe(\n        startWith(''),\n        map(value => (typeof value === 'string' ? value : value[this.translateVal])),\n        map(name => (name ? this._filterPackageType(name) : this.packageTypeData.slice())),\n      );\n    })\n  }\n  \n  getPaymentPhases(){\n    this.packageService.getPaymentPhases()\n    .subscribe(res=>{\n      console.log(\"res['data']===0\",res['data']);\n      this.paymentPhaseData=res['data'];\n      this.paymentPhaseList = this.payment_phase.valueChanges.pipe(\n        startWith(''),\n        map(value => (typeof value === 'string' ? value : value[this.translateVal])),\n        map(name => (name ? this._filterpaymentPhase(name) : this.paymentPhaseData.slice())),\n      );\n    })\n  }\n  \n  getLicenseClassList(){\n    this.packageService.getLicenseClassList(sessionStorage.client)\n    .subscribe(res=>{\n      this.licenseTypeData=res['data'];\n      console.log(\"this.this.license_type=========\",this.license_type);\n      this.licenseTypeList = this.license_type.valueChanges.pipe(\n        startWith(''),\n        map((fruit: string | null) => fruit ? this._filterLicenseType(fruit) : this.licenseTypeData.slice()));\n    })\n  }\n\n  displayFn(user): string {\n    return user && user.license_class ? user.license_class : '';\n  }\n\n  displayFnPackageType(user): string {\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\n  }\n\n  displayFnPaymentPhase(user): string {\n    return user && user[(localStorage.lang == 'ml' ? 'malay' : 'english')] ? user[(localStorage.lang == 'ml' ? 'malay' : 'english')] : '';\n  }\n\n  private _filterLicenseType(name): [] {\n    console.log(\"name=====\",name);\n    const filterValue = name.toLowerCase();\n    return this.licenseTypeData.filter(option => option.license_class.toLowerCase().includes(filterValue));\n  }\n\n  private _filterPackageType(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.packageTypeData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\n  }\n\n  private _filterpaymentPhase(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.paymentPhaseData.filter(option => option[this.translateVal].toLowerCase().includes(filterValue));\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    console.log(\"------------\",value)\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.license_selected.push(value);\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    this.license_type.setValue(null);\n  }\n\n  remove(license: string): void {\n    const index = this.license_selected.indexOf(license);\n\n    if (index >= 0) {\n      this.license_selected.splice(index, 1);\n    }    \n  }\n\n  selectedListType(event: MatAutocompleteSelectedEvent): void {\n    const newValue = event.option.viewValue;\n    console.log(\"newValue=======\",event.option.viewValue);\n    if (this.license_selected.includes(newValue)) {\n      this.license_selected = [...this.license_selected.filter(fruit=>fruit !== newValue)];\n    } else {\n      this.license_selected.push(event.option.viewValue);\n    }\n    this.licenceInput.nativeElement.value = '';\n    this.license_type.setValue(null);\n\n\n    if(this.license_selected.length > 1){\n      var packageObj=this.packageTypeData.filter((elem)=>{return elem.id==1});\n      this.package_type.setValue(packageObj[0])\n    }else{\n      var packageObj=this.packageTypeData.filter((elem)=>{return elem.id==2});\n      this.package_type.setValue(packageObj[0])\n    }\n    // keep the autocomplete opened after each item is picked.\n    requestAnimationFrame(()=>{\n      this.openAuto(this.matACTrigger);\n    })\n\n  }\n\n  \n  selectedPaymentPhase(){\n    if(this.payment_phase.value.id == 2){\n      this.show2Phase=true;\n      this.show3Phase=false;\n    }else if(this.payment_phase.value.id == 3){\n      this.show2Phase=true;\n      this.show3Phase=true;\n    }else{\n      this.show2Phase=false;\n      this.show3Phase=false;\n    }\n  }\n\n  openAuto(trigger: MatAutocompleteTrigger) {\n    trigger.openPanel();\n    this.licenceInput.nativeElement.focus();\n    console.log(trigger);\n  }\n\n\n  public validation_msgs = {\n    'license_type': [\n      { type: 'invalidAutocompleteObject', message: 'License Type not recognized. Click one of the options.' },\n      { type: 'required', message: 'License Type is required.' }\n    ],\n    'package_type': [\n      { type: 'invalidAutocompleteObject', message: 'Package Type not recognized. Click one of the options.' },\n      { type: 'required', message: 'Package is required.' }\n    ],\n    'payment_phase': [\n      { type: 'invalidAutocompleteObject', message: 'Payment Phase not recognized. Click one of the options.' },\n      { type: 'required', message: 'Payment Phase is required.' }\n    ],\n  }\n\n  onFileChangePackageImage(event){\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.package_preview=reader.result;\n        this.editPackageForm.patchValue({\n          package_image:file\n        })\n        console.log(\"this.documentForm===\",this.editPackageForm)\n      }\n    }\n  }\n\n  goBack(){\n    this.router.navigate(['/admin/package/package-list']);\n  }\n\n  updatePackageDetails(){\n    const formData = new FormData();\n    formData.append('baseRoot','root/'+this.clientCode+'/Package/'+this.editPackageForm.value.package_english);\n    formData.append('PackageFormData',JSON.stringify(this.editPackageForm.value));\n    formData.append('package_type',JSON.stringify(this.package_type.value));\n    formData.append('license_type',JSON.stringify(this.license_selected));\n    formData.append('payment_phase',this.payment_phase.value.id);\n    formData.append('authToken',sessionStorage.currentUser);\n    formData.append('client',sessionStorage.client);\n    formData.append('file',this.editPackageForm.value.package_image);\n    this.packageService.updatePackageDetails(formData)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success(\"Updated Successfully!!\");\n        this.router.navigate(['/admin/package/package-list']);\n      }\n    })\n  }\n\n}\n","<section class=\"content\">\n        <div class=\"container-fluid\">\n            <div class=\"block-header\">\n                <div class=\"row\">\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                        <ul class=\"breadcrumb breadcrumb-style \">\n                            <li class=\"breadcrumb-item\">\n                                <h4 class=\"page-title\">{{'PACKAGE.EDITTITLE' | translate}}</h4>\n                            </li>\n                           \n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row clearfix\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                    <div class=\"card\">\n                        <div class=\"header\">\n                            <h2>{{'PACKAGE.EDITTITLE' | translate}}</h2>\n                            \n                        </div>\n                        <div class=\"body\">\n                            <form class=\"m-4\" [formGroup]=\"editPackageForm\">\n                                <div class=\"row\">\n                                    <div class=\"col-4\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                    <mat-chip-list #chipList aria-label=\"Fruit selection\">\n                                                            <mat-chip\n                                                                *ngFor=\"let licenseDt of license_selected\"\n                                                                [selectable]=\"selectable\"\n                                                                [removable]=\"removable\"\n                                                                (removed)=\"remove(licenseDt)\">\n                                                                {{licenseDt}}\n                                                                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon> \n                                                            </mat-chip> \n                                                            <mat-label>{{'PACKAGE.LIST.LICENSE-TYPE' | translate}}*</mat-label>\n                                                            <input type=\"text\" matInput \n                                                            #licenceInput\n                                                            #autocompleteTrigger=\"matAutocompleteTrigger\"\n                                                            [matChipInputFor]=\"chipList\"\n                                                            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                                            (matChipInputTokenEnd)=\"add($event)\"\n                                                            [formControl]=\"license_type\" [matAutocomplete]=\"autoLicense\">\n                                                    </mat-chip-list>\n                                                    <mat-autocomplete #autoLicense=\"matAutocomplete\" (optionSelected)=\"selectedListType($event)\" autoActiveFirstOption>\n                                                    <mat-option *ngFor=\"let option of licenseTypeList | async\" [value]=\"option.license_class\">\n                                                            <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\" [checked]=\"license_selected.indexOf(option.license_class) >= 0\"></mat-checkbox>\n                                                        {{option.license_class}}\n                                                    </mat-option>\n                                                    </mat-autocomplete>\n                                                    <button mat-icon-button matSuffix style=\"width: 34px; height: 34px;\" (click)=\"openAuto(autocompleteTrigger)\"> <mat-icon style=\"width: 34px;\">expand_more</mat-icon></button>\n                                                    <mat-error *ngIf=\"license_selected.length == 0\">\n                                                                {{'PACKAGE.LIST.LICENSE-TYPE' | translate}} is required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-TYPE' | translate}}*</mat-label>\n                                            <input type=\"text\" matInput [formControl]=\"package_type\" [matAutocomplete]=\"autoPackage\">                                            \n                                            <mat-autocomplete #autoPackage=\"matAutocomplete\" [displayWith]=\"displayFnPackageType\">\n                                                <mat-option *ngFor=\"let option of packageTypeList | async\" [value]=\"option\">\n                                                    {{option[translateVal]}}\n                                                </mat-option>\n                                                </mat-autocomplete>\n                                                <mat-error *ngFor=\"let validation of validation_msgs.package_type\">\n                                                    <div *ngIf=\"package_type.hasError(validation.type)\">\n                                                      {{validation.message}}\n                                                    </div>\n                                                </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <div class=\"row\">\n                                            <div class=\"col-6\">\n                                                    <img src=\"{{package_preview ? package_preview :editPackageForm.value.package_image}}\"  style=\"width:100%;height:50%\">\n                                            </div>\n                                            <div class=\"col-6\">\n                                               <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                    <mat-label>{{'PACKAGE.LIST.PACKAGE-IMAGE' | translate}}</mat-label>\n                                                        <ngx-mat-file-input formControlName=\"package_image_name\"  (change)=\"onFileChangePackageImage($event)\" required>\n                                                        </ngx-mat-file-input>\n                                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                                    <mat-error *ngIf=\"editPackageForm.get('package_image_name').hasError('required')\">\n                                                            {{'PACKAGE.LIST.PACKAGE-IMAGE' | translate}} is required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-4\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-OFFERS' | translate}}</mat-label>\n                                            <!-- <input matInput formControlName=\"package_offers\">     \n                                                                                    -->\n                                            <mat-select formControlName=\"package_offers\" required>\n                                                <mat-option value=\"Affordable\">{{'PACKAGE.LIST.AFFORDABLE' | translate}}</mat-option>\n                                                <mat-option value=\"Premium\">{{'PACKAGE.LIST.PREMIUM' | translate}}</mat-option>\n                                            </mat-select> \n                                            <mat-error *ngIf=\"editPackageForm.get('package_offers').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-OFFERS' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div> \n                                        <div class=\"col-4\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                <mat-label>{{'PACKAGE.LIST.PACKAGE-ENG' | translate}}*</mat-label>\n                                                <input matInput formControlName=\"package_english\">                                            \n                                                <mat-error *ngIf=\"editPackageForm.get('package_english').hasError('required')\">\n                                                        {{'PACKAGE.LIST.PACKAGE-ENG' | translate}} is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> \n                                        <div class=\"col-4\">\n                                            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                                <mat-label>{{'PACKAGE.LIST.PACKAGE-MALAY' | translate}}*</mat-label>\n                                                <input matInput formControlName=\"package_malay\">                                            \n                                                <mat-error *ngIf=\"editPackageForm.get('package_malay').hasError('required')\">\n                                                        {{'PACKAGE.LIST.PACKAGE-MALAY' | translate}} is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                <div class=\"row\">\n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-PRICE' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"package_price\">                                            \n                                            <mat-error *ngIf=\"editPackageForm.get('package_price').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-PRICE' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div> \n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PROMO-DIS' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"promo_discount\">                                            \n                                            <mat-error *ngIf=\"editPackageForm.get('promo_discount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PROMO-DIS' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.FIANL-PACKAGE-PRICE' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"final_package_price\">                                            \n                                            <mat-error *ngIf=\"editPackageForm.get('final_package_price').hasError('required')\">\n                                                    {{'PACKAGE.LIST.FIANL-PACKAGE-PRICE' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE' | translate}}*</mat-label>\n                                            <input type=\"text\" matInput [formControl]=\"payment_phase\" [matAutocomplete]=\"autoPaymentPhase\">                                            \n                                            <mat-autocomplete #autoPaymentPhase=\"matAutocomplete\"  (optionSelected)=\"selectedPaymentPhase()\" [displayWith]=\"displayFnPaymentPhase\">\n                                                <mat-option *ngFor=\"let option of paymentPhaseList | async\" [value]=\"option\">\n                                                    {{option[translateVal]}}\n                                                </mat-option>\n                                                </mat-autocomplete>\n                                            <mat-error *ngFor=\"let validation of validation_msgs.payment_phase\">\n                                                <div *ngIf=\"payment_phase.hasError(validation.type)\">\n                                                  {{validation.message}}\n                                                </div>\n                                            </mat-error>  \n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-3\" *ngIf=\"show2Phase\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE-AMT-1' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"first_phase_amount\">                                            \n                                            <mat-error *ngIf=\"editPackageForm.get('first_phase_amount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PAYMENT-PHASE-AMT-1' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\" *ngIf=\"show2Phase\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE-AMT-2' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"second_phase_amount\">                                            \n                                            <mat-error *ngIf=\"editPackageForm.get('second_phase_amount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PAYMENT-PHASE-AMT-2' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\" *ngIf=\"show3Phase\">\n                                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                            <mat-label>{{'PACKAGE.LIST.PAYMENT-PHASE-AMT-3' | translate}}*</mat-label>\n                                            <input matInput formControlName=\"third_phase_amount\">                                            \n                                            <mat-error *ngIf=\"editPackageForm.get('third_phase_amount').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PAYMENT-PHASE-AMT-3' | translate}} is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <mat-checkbox class=\"example-margin\" formControlName=\"global_view\">{{'PACKAGE.LIST.GLOBAL-VIEW' | translate}}</mat-checkbox>     \n                                    </div>\n                                </div>\n                                 <div class=\"row\">\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-DESC-ENG' | translate}}*</mat-label>\n                                            <ckeditor [editor]=\"Editor\" formControlName=\"package_desc_english\"></ckeditor>\n                                            <mat-error *ngIf=\"editPackageForm.get('package_desc_english').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-DESC-ENG' | translate}} is required\n                                            </mat-error>\n                                    </div>\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                        <mat-label>{{'PACKAGE.LIST.PACKAGE-DESC-MALAY' | translate}}*</mat-label>\n                                        <ckeditor [editor]=\"Editor\" formControlName=\"package_desc_malay\"></ckeditor>\n                                        <mat-error *ngIf=\"editPackageForm.get('package_desc_malay').hasError('required')\">\n                                                {{'PACKAGE.LIST.PACKAGE-DESC-MALAY' | translate}} is required\n                                        </mat-error>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-label>{{'PACKAGE.LIST.PACKAGE-PHASE-DESC-ENG' | translate}}*</mat-label>\n                                            <ckeditor [editor]=\"Editor\" formControlName=\"package_phase_desc_english\"></ckeditor>\n                                            <mat-error *ngIf=\"editPackageForm.get('package_phase_desc_english').hasError('required')\">\n                                                    {{'PACKAGE.LIST.PACKAGE-PHASE-DESC-ENG' | translate}} is required\n                                            </mat-error>\n                                    </div>\n                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                        <mat-label>{{'PACKAGE.LIST.PACKAGE-PHASE-DESC-MALAY' | translate}}*</mat-label>\n                                        <ckeditor [editor]=\"Editor\" formControlName=\"package_phase_desc_malay\"></ckeditor>\n                                        <mat-error *ngIf=\"editPackageForm.get('package_phase_desc_malay').hasError('required')\">\n                                                {{'PACKAGE.LIST.PACKAGE-PHASE-DESC-MALAY' | translate}} is required\n                                        </mat-error>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                        <button class=\"btn-space\" [disabled]=\"!editPackageForm.valid || license_selected.length == 0\" mat-raised-button\n                                            color=\"primary\" (click)=\"updatePackageDetails()\">{{'BUTTON.EDIT-BTN' | translate}}</button>\n                                        <button type=\"button\" mat-button (click)=\"goBack()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>","import { Component, OnInit, ViewChild  } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {PackageService} from '../package.service'\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-package-list',\n  templateUrl: './package-list.component.html',\n  styleUrls: ['./package-list.component.sass']\n})\n\n\n\nexport class PackageListComponent implements OnInit {\n\n  columns = [\n    { name: 'License Type' },\n    { name: 'Package Type' },\n    { name: 'Final Package Price' },\n    {name: 'Payment Phase'},\n    {name: 'Global View'},\n  ]; \n  data=[];\n  filteredData = [];\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n  rowToDelete;\n  \n  constructor(  public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public packageService: PackageService,\n    private snackBar: MatSnackBar,private router: Router, private modalService: NgbModal,\n  private toastrService:ToastrService) { }\n\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n    \n    \n    ngOnInit() {\n      this.loadData();\n    }\n    refresh() {\n      this.loadData();\n    }\n    addNewPackage() {\n      this.router.navigate(['/admin/package/add-package'])\n    }\n\n    loadData(){\n        this.packageService.getPackageListPerClient(sessionStorage.client)\n        .subscribe(res=>{\n          console.log(\"Pack data!!!!!!!!\",res['data'])\n          for(let i=0;i<res['data'].length;i++){\n            res['data'][i].global_view = res['data'][i]['global_view'] == 1 ? true : false;\n            res['data'][i].package_type = res['data'][i][this.translateVal];\n            res['data'][i].payment_phase = res['data'][i]['phase_'+this.translateVal];\n          }\n          this.data=res['data'];\n          this.filteredData=res['data'];\n        })\n    }\n\n    filterDatatable(event) {\n      // get the value of the key pressed and make it lowercase\n      const val = event.target.value.toLowerCase();\n      // get the amount of columns in the table\n      const colsAmt = this.columns.length;\n      // get the key names of each column in the dataset\n      const keys = Object.keys(this.filteredData[0]);\n      // assign filtered matches to the active datatable\n      this.data = this.filteredData.filter(function (item) {\n        // iterate through each row's column data\n        for (let i = 0; i < colsAmt; i++) {\n          // check for a match\n          if (\n            item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n            !val\n          ) {\n            // found match, return true to add to result set\n            return true;\n          }\n        }\n      });\n      // whenever the filter changes, always go back to the first page\n      this.table.offset = 0;\n  }\n\n  editPackage(row, rowIndex){\n      console.log(\"rowww===\",row);\n      this.router.navigate(['/admin/package/edit-package',row.id]);\n  }\n\n  deletePackage(row, rowIndex,deleteRecord){\n    this.modalService.open(deleteRecord, { ariaLabelledBy: 'modal-basic-title' });\n    this.rowToDelete=row;\n  }\n\n  deletePackageDetails(){\n    this.packageService.deletePackageDetails(this.rowToDelete,sessionStorage.currentUser,sessionStorage.client)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Deleted Successfully!!!');\n        this.modalService.dismissAll();\n        this.loadData();\n      }\n    })\n  }\n\n}\n","<section class=\"content\">\n        <div class=\"container-fluid\">\n          <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">{{'PACKAGE.LISTTITLE' | translate}}</h4>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n                  <div class=\"mt-5\">\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                      <div class=\"card\">\n                        <div class=\"body\">\n                          <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                              <div class=\"row\">\n                                <div class=\"col-8\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                    <li class=\"dropdown\">\n                                      <h2>\n                                        <strong>{{'PACKAGE.LISTTITLE' | translate}}</strong></h2>\n                                    </li>\n                                    <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                        <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                        (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                    </li>\n                                    <li>\n                                      <!-- <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                                        <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                                          <mat-icon class=\"col-white\">delete\n                                          </mat-icon>\n                                        </button>\n                                      </div> -->\n                                    </li>\n                                  </ul>\n                                </div>\n                                <div class=\"col-4\">\n                                  <ul class=\"header-buttons\">\n                                    <li>\n                                      <div class=\"icon-button-demo\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"addNewPackage()\">\n                                          <mat-icon class=\"col-white\">add</mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                    <li>\n                                      <div class=\"icon-button-demo\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                          <mat-icon class=\"col-white\">refresh\n                                          </mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                              </div>\n                            </div>\n                            <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                            [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                            <!-- user image -->\n                            <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"package_image\" [width]=\"100\">\n                            <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                                <td class=\"table-img padding-0\">\n                                <img width=\"40\" src=\"{{ value ? value : 'assets/images/nologo.png' }}\" />\n                                </td>\n                            </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"{{'PACKAGE.LIST.LICENSE-TYPE' | translate}}\" prop=\"license_data\" [width]=\"130\"></ngx-datatable-column>\n                            <ngx-datatable-column name=\"{{'PACKAGE.LIST.PACKAGE-TYPE' | translate}}\" prop=\"package_type\" [width]=\"130\"></ngx-datatable-column>\n                            <ngx-datatable-column name=\"{{'PACKAGE.LIST.FIANL-PACKAGE-PRICE' | translate}}\" prop=\"final_package_price\" [width]=\"200\"></ngx-datatable-column>\n                            <ngx-datatable-column name=\"{{'PACKAGE.LIST.PAYMENT-PHASE' | translate}}\" prop=\"payment_phase\" [width]=\"200\"></ngx-datatable-column>\n                            <ngx-datatable-column name=\"{{'PACKAGE.LIST.GLOBAL-VIEW' | translate}}\" prop=\"global_view\" [width]=\"200\"></ngx-datatable-column>\n                            \n                            <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\n                                            </ngx-datatable-column> -->\n                            <!-- action buttons -->\n                            <ngx-datatable-column name=\"{{'PACKAGE.ACTION' | translate}}\" sortable=\"false\" [width]=\"120\">\n                            <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                                <span>\n                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editPackage(row, rowIndex)'>\n                                    <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                    </mat-icon>\n                                </button>\n                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deletePackage(row,rowIndex,deleteRecord)'>\n                                    <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                    </mat-icon>\n                                </button>\n                                </span>\n                            </ng-template>\n                            </ngx-datatable-column>\n                        </ngx-datatable>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <ng-template #deleteRecord let-modal>\n          <div class=\"modal-header deleteRowModal\">\n          <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n              <div class=\"modal-about\">\n                  <div class=\"font-weight-bold p-t-10 font-17\">\n                    {{'PACKAGE.DELETETITLE' | translate}}</div>\n              </div>\n              </div>\n          </h4>\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n              <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n          </button>\n          </div>\n          <div class=\"modal-body\">\n              <p>{{'BUTTON.CONFIRMATION' | translate}}</p>\n              <div class=\"modal-footer\">\n              <div class=\"button-demo\">\n                  <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deletePackageDetails()\">{{'BUTTON.DEL-BTN' | translate}}</button>\n                  <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n              </div>\n              </div>\n          </div>\n      </ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PackageListComponent } from './package-list/package-list.component';\r\nimport { AddPackageComponent } from './add-package/add-package.component';\r\nimport { EditPackageComponent } from './edit-package/edit-package.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'package-list',\r\n    component: PackageListComponent\r\n  },\r\n  {\r\n    path: 'add-package',\r\n    component: AddPackageComponent\r\n  },\r\n  {\r\n    path: 'edit-package/:id',\r\n    component: EditPackageComponent\r\n  },\r\n  // {\r\n  //   path: 'about-student',\r\n  //   component: AboutStudentComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PackageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { PackageRoutingModule } from './package-routing.module';\r\n// import { DeleteDialogComponent } from './all-students/dialogs/delete/delete.component';\r\n// import { FormDialogComponent } from './all-students/dialogs/form-dialog/form-dialog.component';\r\nimport { PackageService } from './package.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { PackageListComponent } from './package-list/package-list.component';\r\nimport { AddPackageComponent } from './add-package/add-package.component';\r\nimport { EditPackageComponent } from './edit-package/edit-package.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // DeleteDialogComponent,\r\n    // FormDialogComponent,\r\n  \r\n    PackageListComponent,\r\n    AddPackageComponent,\r\n    EditPackageComponent\r\n  ],\r\n  imports: [NgxDatatableModule,MatChipsModule,\r\n    CKEditorModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    PackageRoutingModule,\r\n    MatProgressSpinnerModule,MatStepperModule,\r\n    NgxMaskModule,TranslateModule,\r\n    MatAutocompleteModule\r\n  ],\r\n  providers: [PackageService],\r\n})\r\nexport class PackageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PackageService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  setLicenseDetails(licenseData,authToken,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/setLicenseDetails`,{licenseData,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getLicenseListPerClient(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getLicenseListPerClient`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getLicenseClassList(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getLicenseClassList`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPakageTypeList(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getPakageTypeList`)\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPaymentPhases(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getPaymentPhases`)\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n\r\n  setPackageDetails(formData){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/setPackageDetails`,formData)\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPackageListPerClient(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getPackageListPerClient`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPackageToEdit(packageId,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getPackageToEdit`,{packageId,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  updatePackageDetails(formData){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/updatePackageDetails`,formData)\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  deletePackageDetails(rowToDelete,authToken,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/deletePackageDetails`,{rowToDelete,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getClientCodeForFolder(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getClientCodeForFolder`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}