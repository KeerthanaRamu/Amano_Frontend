{"version":3,"sources":["webpack:///src/app/admin/employee/employee-list/employee-list.component.html","webpack:///src/app/admin/employee/employee-list/employee-list.component.ts","webpack:///src/app/admin/employee/employee-routing.module.ts","webpack:///src/app/admin/employee/employee.module.ts","webpack:///src/app/admin/employee/employee.service.ts"],"names":["EmployeeListComponent","fb","employeeService","modalService","toastrService","data","filteredData","hide","columns","name","getClientList","getEmployeeList","getRoleList","addEmployee","group","client_id","sessionStorage","client","Validators","user_name","password","role","img","mobile_no","email_id","editEmployee","id","subscribe","res","console","log","roleList","clientList","content","open","ariaLabelledBy","size","event","reader","FileReader","target","files","length","file","readAsDataURL","onload","patchValue","result","setEmployeeDetails","value","success","dismissAll","error","row","rowIndex","role_id","updateUserDetails","rowToDelete","deleteEmployeeDetails","val","toLowerCase","colsAmt","keys","Object","filter","item","i","toString","indexOf","table","offset","DatatableComponent","filterDatatable","addRow","routes","path","component","EmployeeRoutingModule","RouterModule","EmployeeModule","EmployeeService","CommonModule","MatAutocompleteModule","NgxDatatableModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatSelectModule","FormsModule","ReactiveFormsModule","MaterialFileInputModule","TranslateModule","NgxEchartsModule","echarts","PerfectScrollbarModule","MatIconModule","NgApexchartsModule","MatButtonModule","MatMenuModule","http","get","environment","pipe","map","post","userData"],"mappings":"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","file":"src_app_admin_employee_employee_module_ts-es5.js","sourcesContent":["<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">{{'EMPLOYEE.LISTTITLE' | translate}}</h4>\n                  </li>\n                  <!-- <li class=\"breadcrumb-item bcrumb-1\">\n                    <a routerLink=\"/admin/dashboard/main\">\n                      <i class=\"fas fa-home\"></i> Home</a>\n                  </li>\n                  <li class=\"breadcrumb-item bcrumb-2\">   \n                    <a href=\"#\" onClick=\"return false;\">Clients</a>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <div class=\"card\">\n                <div class=\"body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                    <div class=\"ngxTableHeader\">\n                        <ul class=\"header-buttons-left ms-0 mb-0\">\n                        <li class=\"dropdown\">\n                            <h2>\n                            <strong>{{'EMPLOYEE.LISTTITLE' | translate}}</strong></h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </li>\n                        </ul>\n                        <ul class=\"header-buttons\">\n                        <li>\n                            <button mat-mini-fab color=\"primary\" (click)='addRow(addRecord)'>\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                        </li>\n                        </ul>\n                    </div>\n                    <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                        <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"img\" [width]=\"100\">\n                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                            <td class=\"table-img padding-0\">\n                            <img width=\"40\" src=\"{{ value ? value : 'assets/images/nouser.png' }}\" />\n                            </td>\n                        </ng-template>\n                        </ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.LIST.NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.LIST.USERNAME' | translate}}\" prop=\"user_name\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.LIST.ROLE' | translate}}\" prop=\"role\" [width]=\"200\"></ngx-datatable-column>\n                        <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\n                                        </ngx-datatable-column> -->\n                        <!-- action buttons -->\n                        <ngx-datatable-column name=\"{{'EMPLOYEE.ACTION' | translate}}\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editRow(row, rowIndex, editRecord)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteRow(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column>\n                    </ngx-datatable>\n                    <!-- Add Record Modal Window -->\n                    <ng-template #addRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                            <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'EMPLOYEE.TITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form class=\"register-form\" [formGroup]=\"addEmployee\" (ngSubmit)=\"setEmployeeDetails()\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.ROLE' | translate}}</mat-label>\n                                        <mat-select formControlName=\"role\" required>\n                                                <mat-option *ngFor=\"let option of roleList\" [value]=\"option.id\">\n                                                    {{option.role}}\n                                                  </mat-option>\n                                        </mat-select> \n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.NAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"addEmployee.get('name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.NAME' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.USERNAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"user_name\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"addEmployee.get('user_name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.USERNAME' | translate}} is required\n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.PASSWORD' | translate}}</mat-label>\n                                        <input  matInput\n                                        [type]=\"hide ? 'password' : 'text'\"\n                                        formControlName=\"password\" required>\n                                        <a\n                                        class=\"show-pwd-icon\"\n                                        href=\"#\"\n                                        onClick=\"return false;\"\n                                        matSuffix\n                                        (click)=\"hide = !hide\"\n                                        [attr.aria-label]=\"'Hide password'\"\n                                        [attr.aria-pressed]=\"hide\"\n                                      >\n                                        <mat-icon>{{\n                                          hide ? \"visibility_off\" : \"visibility\"\n                                        }}</mat-icon>\n                                      </a>\n                                        <mat-error *ngIf=\"addEmployee.get('password').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.PASSWORD' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.MOBILENO' | translate}}</mat-label>\n                                        <input matInput formControlName=\"mobile_no\">\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.EMAILID' | translate}}</mat-label>\n                                        <input matInput formControlName=\"email_id\">\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"addEmployee.get('email_id').hasError('email') && addEmployee.get('email_id').touched\">\n                                            Please enter a valid email address \n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"{{'EMPLOYEE.LIST.PROFILE-IMG' | translate}}\" (change)=\"onFileChange($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                <button class=\"btn-space\" [disabled]=\"!addEmployee.valid\" mat-raised-button\n                                color=\"primary\">{{'BUTTON.ADD-BTN' | translate}}</button>\n                                <button type=\"button\" mat-button (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n                    <!-- Edit Record Modal Window -->\n                    <ng-template #editRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'EMPLOYEE.EDITTITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form [formGroup]=\"editEmployee\" (ngSubmit)=\"updateEmployeeDetails()\">\n                            <div class=\"input-field col s12 d-none\">\n                            <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.ROLE' | translate}}</mat-label>\n                                        <mat-select formControlName=\"role\" required>\n                                            <mat-option *ngFor=\"let option of roleList\" [value]=\"option.id\">\n                                                {{option.role}}\n                                              </mat-option>\n                                        </mat-select> \n                                        </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.NAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"editEmployee.get('name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.NAME' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.USERNAME' | translate}}</mat-label>\n                                        <input matInput formControlName=\"user_name\" readonly required>\n                                        <mat-icon matSuffix>face</mat-icon>\n                                        <mat-error *ngIf=\"editEmployee.get('user_name').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.USERNAME' | translate}} is required\n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.PASSWORD' | translate}}</mat-label>\n                                        <input  matInput\n                                        [type]=\"hide ? 'password' : 'text'\"\n                                        formControlName=\"password\" required>\n                                        <a\n                                        class=\"show-pwd-icon\"\n                                        href=\"#\"\n                                        onClick=\"return false;\"\n                                        matSuffix\n                                        (click)=\"hide = !hide\"\n                                        [attr.aria-label]=\"'Hide password'\"\n                                        [attr.aria-pressed]=\"hide\"\n                                      >\n                                        <mat-icon>{{\n                                          hide ? \"visibility_off\" : \"visibility\"\n                                        }}</mat-icon>\n                                      </a>\n                                        <mat-error *ngIf=\"editEmployee.get('password').hasError('required')\">\n                                            {{'EMPLOYEE.LIST.PASSWORD' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.MOBILENO' | translate}}</mat-label>\n                                        <input matInput formControlName=\"mobile_no\">\n                                        <mat-icon matSuffix>phone</mat-icon>\n                                      </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>{{'EMPLOYEE.LIST.EMAILID' | translate}}</mat-label>\n                                        <input matInput formControlName=\"email_id\">\n                                        <mat-icon matSuffix>email</mat-icon>\n                                        <mat-error *ngIf=\"editEmployee.get('email_id').hasError('email') && editEmployee.get('email_id').touched\">\n                                            Please enter a valid {{'EMPLOYEE.LIST.EMAILID' | translate}}\n                                        </mat-error>\n                                      </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">  \n                                    <mat-form-field class=\"example-full-width\">\n                                        <ngx-mat-file-input  placeholder=\"{{'EMPLOYEE.LIST.PROFILE-IMG' | translate}}\" (change)=\"onFileChangeUpdate($event)\">\n                                        </ngx-mat-file-input>\n                                        <mat-icon matSuffix>cloud_upload</mat-icon>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\">{{'BUTTON.EDIT-BTN' | translate}}</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n\n\n                    <ng-template #deleteRecord let-modal>\n                        <div class=\"modal-header deleteRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'EMPLOYEE.DELETETITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>{{'BUTTON.CONFIRMATION' | translate}}</p>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deleteEmployeeDetails()\">{{'BUTTON.DEL-BTN' | translate}}</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { EmployeeService } from '../employee.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n  \n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n \n  data=[];\n  filteredData = [];\n  addEmployee:FormGroup;\n  editEmployee:FormGroup;\n  rowToDelete: any;\n  roleList:any;\n\n  \n  clientList;\n  hide = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private employeeService:EmployeeService,\n    private modalService: NgbModal,\n    private toastrService: ToastrService,) { }\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ngOnInit(): void {\n    this.getClientList();\n    this.getEmployeeList();\n    this.getRoleList();\n    this.addEmployee = this.fb.group({\n      client_id: [sessionStorage.client,Validators.required],\n      name: ['',Validators.required],\n      user_name: ['',Validators.required],\n      password: ['',Validators.required],\n      role: ['',Validators.required],\n      img:[''],\n      mobile_no:[''],\n      email_id:['',[Validators.required, Validators.email, Validators.minLength(5)]]\n    });\n\n    this.editEmployee = this.fb.group({\n      id:[''],\n      client_id: [sessionStorage.client,Validators.required],\n      name: ['',Validators.required],\n      user_name: ['',Validators.required],\n      password: ['',Validators.required],\n      role: ['',Validators.required],\n      img:[''],\n      mobile_no:[''],\n      email_id:['']\n    });\n  }\n\n  columns = [\n    { name: 'Name' },\n    { name: 'User Name' },\n    { name: 'Role' },\n  ]; \n\n  getRoleList(){\n    this.employeeService.getRoleList()\n    .subscribe(res=>{\n      console.log(\"client--------\",res);\n      this.roleList=res;\n    })\n  }\n\n  getClientList(){\n    this.employeeService.getClientList()\n    .subscribe(res=>{\n      console.log(\"client--------\",res);\n      this.clientList=res;\n    })\n  }\n\n  getEmployeeList(){\n    this.employeeService.getEmployeeList(sessionStorage.client)\n    .subscribe(res=>{\n      console.log(\"empppppp--------\",res);\n      this.data=res;\n      this.filteredData=res;\n    })\n  }\n\n  addRow(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size:'lg' });\n  }\n\n  onFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.addEmployee.patchValue({\n          'img':reader.result\n        })\n      }\n    }\n  }\n\n  setEmployeeDetails(){\n    this.employeeService.setEmployeeDetails(this.addEmployee.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Created Successfully!!');\n        this.getEmployeeList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title',size:'lg' });\n    this.editEmployee.patchValue({\n      id: row.id,\n      client_id: sessionStorage.client,\n      name: row.name,\n      user_name: row.user_name,\n      password: row.password,\n      role: row.role_id,\n      img:row.img,\n      mobile_no:row.mobile_no,\n      email_id:row.email_id\n    });  \n  }\n\n  onFileChangeUpdate(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.editEmployee.patchValue({\n          'img':reader.result\n        })\n      }\n    }\n  }\n\n  updateEmployeeDetails(){\n    this.employeeService.updateUserDetails(this.editEmployee.value)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Updated Successfully!!');\n        this.getEmployeeList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n  \n  deleteRow(row,rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n    this.rowToDelete=row;\n  }\n\n  deleteEmployeeDetails(){\n    this.employeeService.deleteEmployeeDetails(this.rowToDelete)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Deleted Successfully!!');\n        this.getEmployeeList();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  filterDatatable(event) {\n      // get the value of the key pressed and make it lowercase\n      const val = event.target.value.toLowerCase();\n      // get the amount of columns in the table\n      const colsAmt = this.columns.length;\n      // get the key names of each column in the dataset\n      const keys = Object.keys(this.filteredData[0]);\n      // assign filtered matches to the active datatable\n      this.data = this.filteredData.filter(function (item) {\n        // iterate through each row's column data\n        for (let i = 0; i < colsAmt; i++) {\n          // check for a match\n          if (\n            item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n            !val\n          ) {\n            // found match, return true to add to result set\n            return true;\n          }\n        }\n      });\n      // whenever the filter changes, always go back to the first page\n      this.table.offset = 0;\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'employee-list',\r\n    component: EmployeeListComponent,\r\n  },\r\n  // {\r\n  //   path: 'dashboard2',\r\n  //   component: Dashboard2Component,\r\n  // }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EmployeeRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { EmployeeRoutingModule } from './employee-routing.module';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport {EmployeeService} from './employee.service'\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeeListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,MatAutocompleteModule,NgxDatatableModule,\r\n    MatFormFieldModule,MatInputModule,MatSnackBarModule,MatSelectModule,FormsModule,\r\n    ReactiveFormsModule,MaterialFileInputModule,\r\n    EmployeeRoutingModule,TranslateModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n  ],providers: [EmployeeService],\r\n})\r\nexport class EmployeeModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  getClientList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getClientList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getEmployeeList(client) {\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/getEmployeeList`,{client})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  setEmployeeDetails(userData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/setEmployeeDetails`,{userData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateUserDetails(userData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/updateUserDetails`,{userData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteEmployeeDetails(userData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/superAdmin/deleteEmployeeDetails`,{userData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getRoleList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/superAdmin/getRoleList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n"]}