{"version":3,"sources":["webpack:///src/app/admin/schedule/add-schedule/add-schedule.component.html","webpack:///src/app/admin/schedule/add-schedule/add-schedule.component.ts","webpack:///src/app/admin/schedule/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/schedule/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/schedule/schedule-routing.module.ts","webpack:///src/app/admin/schedule/schedule.model.ts","webpack:///src/app/admin/schedule/schedule.module.ts","webpack:///src/app/admin/schedule/schedule.service.ts"],"names":["AddScheduleComponent","fb","dialog","calendarService","snackBar","filterOptions","calendarData","filterItems","calendarOptions","headerToolbar","left","center","right","initialView","weekends","editable","selectable","selectMirror","dayMaxEvents","select","handleDateSelect","bind","eventClick","handleEventClick","eventsSet","handleEvents","dialogTitle","calendar","Calendar","addCusForm","createCalendarForm","getScheduleList","getScheduleDetails","sessionStorage","client","subscribe","res","console","log","i","length","push","title","status","start","Date","startDate","end","endDate","className","schedule_color","id","lead_time","schedule_name","schedule_id","schedule_view","schedule_view_assignment","schedule_assignment","calendarEvents","tempEvents","events","scheduleList","checked","selectInfo","addNewEvent","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","action","direction","subs","sink","afterClosed","result","event","filter","splice","indexOf","filterEvent","element","list","x","map","y","includes","clickInfo","row","_def","extendedProps","reset","eventIndex","slice","singleEvent","Object","assign","groupId","category","details","group","Validators","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","autocompleteObjectValidator","control","value","toastrService","showDeleteBtn","removable","separatorKeysCodes","ENTER","COMMA","viewAssign_selected","FormControl","validators","formControl","getScheduleViewAssignList","ViewAssignList","calendarForm","editContactForm","createContactForm","hasError","calendarFm","deleteScheduleDetails","currentUser","success","close","setScheduleDetails","updateScheduleDetails","viewAssignTypeData","viewAssignTypeList","valueChanges","pipe","startWith","fruit","_filterviewAssignType","user","viewAssign_class","name","filterValue","toLowerCase","option","input","trim","setValue","viewAssign","index","trigger","openPanel","licenceInput","nativeElement","focus","newValue","viewValue","requestAnimationFrame","openAuto","matACTrigger","MAT_DIALOG_DATA","routes","path","component","ScheduleRoutingModule","RouterModule","getRandomID","schedule_owner","formatDate","S4","Math","random","toString","substring","FullCalendarModule","ScheduleModule","ScheduleService","NgxDatatableModule","MatChipsModule","CKEditorModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MatMenuModule","MaterialFileInputModule","MatProgressSpinnerModule","MatStepperModule","NgxMaskModule","TranslateModule","MatAutocompleteModule","OwlDateTimeModule","OwlNativeDateTimeModule","http","API_URL","httpOptions","headers","HttpHeaders","dataChange","BehaviorSubject","dialogData","get","catchError","errorHandler","error","errorMessage","ErrorEvent","message","throwError","post","environment","authToken"],"mappings":"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","file":"src_app_admin_schedule_schedule_module_ts-es5.js","sourcesContent":["<section class=\"content\">\n        <div class=\"container-fluid\">\n          <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">{{'SCHEDULE.TITLE' | translate}}</h4>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-2 col-sm-12 p-l-30\">\n                      <div class=\"m-b-25\">\n                        <!-- <button mat-raised-button color=\"primary\" (click)=\"addNewEvent()\">Add Event</button> -->\n                      </div>\n                      <!-- <p>My Calendars</p> -->\n                      <div class=\"filter-container\">\n                        <ul>\n                          <li *ngFor=\"let filter of scheduleList\">\n                            <mat-checkbox [checked]=\"filter.checked\" [value]=\"filter.status\" color=\"primary\"\n                              (change)=\"changeCategory($event, filter)\">\n                              {{filter.status}}\n                            </mat-checkbox>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <div class=\"col-md-10 col-sm-12\">\n                      <div class=\"panel-body\">\n                        <full-calendar [options]='calendarOptions'>\n                        </full-calendar>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      ","import { Component, ViewChild, OnInit } from '@angular/core';\nimport {\n  CalendarOptions,\n  DateSelectArg,\n  EventClickArg,\n  EventApi,\n} from '@fullcalendar/angular';\nimport { EventInput } from '@fullcalendar/angular';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ScheduleService } from '../schedule.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { FormDialogComponent } from '../dialogs/form-dialog/form-dialog.component';\nimport { Calendar } from '../schedule.model';\nimport { UnsubscribeOnDestroyAdapter } from '../../../shared/UnsubscribeOnDestroyAdapter';\nimport { formatDate } from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-schedule',\n  templateUrl: './add-schedule.component.html',\n  styleUrls: ['./add-schedule.component.scss']\n})\nexport class AddScheduleComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n  @ViewChild('calendar', { static: false })\n  calendar: Calendar | null;\n  public addCusForm: FormGroup;\n  scheduleList;\n\n  dialogTitle: string;\n  filterOptions = 'All';\n  calendarData=[];\n  filterItems =[]\n\n  calendarEvents: EventInput[];\n  tempEvents: EventInput[];\n\n  constructor(\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    public calendarService: ScheduleService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n    this.dialogTitle = 'Add New Event';\n    this.calendar = new Calendar({});\n    this.addCusForm = this.createCalendarForm(this.calendar);\n    this.getScheduleList();\n\n  }\n\n  public ngOnInit(): void {\n    \n    this.getScheduleDetails();\n    \n  }\n\n  getScheduleDetails(){\n    this.calendarData=[];\n    this.calendarService.getScheduleDetails(sessionStorage.client)\n    .subscribe(res=>{\n      console.log(\"----res['data']----\",res['data'])\n      for(let i=0;i<res['data'].length;i++){\n        this.calendarData.push({\n          // id: res['data'][i].id,\n          title: res['data'][i].status,\n          start: new Date(res['data'][i].startDate),\n          end: new Date(res['data'][i].endDate),  \n          className: res['data'][i].schedule_color,\n          // groupId: res['data'][i].schedule_view,\n          id: res['data'][i].id,\n          lead_time: res['data'][i].lead_time,\n          schedule_name: res['data'][i].schedule_id,\n          // schedule_owner:res['data'][i].schedule_owner,\n          schedule_view:res['data'][i].schedule_view,\n          schedule_view_assignment:res['data'][i].schedule_assignment,\n          startDate: new Date(res['data'][i].startDate),\n          endDate: new Date(res['data'][i].endDate)\n        })\n      }\n      this.calendarEvents=this.calendarData;\n      this.tempEvents = this.calendarEvents;\n      this.calendarOptions.events = this.calendarEvents;\n    })\n  }\n\n  getScheduleList(){\n    this.calendarService.getScheduleList()\n    .subscribe(res=>{\n        this.scheduleList=res['data'];\n        for(let i=0;i<this.scheduleList.length;i++){\n          this.scheduleList[i].checked=true;\n          this.filterItems.push(this.scheduleList[i].status)\n        }\n    })\n  }\n\n  calendarOptions: CalendarOptions = {\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\n    },\n    initialView: 'dayGridMonth',\n    weekends: true,\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    select: this.handleDateSelect.bind(this),\n    eventClick: this.handleEventClick.bind(this),\n    eventsSet: this.handleEvents.bind(this),\n  };\n\n  handleDateSelect(selectInfo: DateSelectArg) {\n    console.log(\"0--------0000----------\",selectInfo,this.calendar);\n    // this.calendar['start']=selectInfo.startStr;\n    this.addNewEvent(selectInfo);\n  }\n\n  addNewEvent(selectInfo) {\n    console.log(\"this.calendar!!!!!!!\",this.calendar)\n    let tempDirection;\n    if (localStorage.getItem('isRtl') === 'true') {\n      tempDirection = 'rtl';\n    } else {\n      tempDirection = 'ltr';\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        calendar: selectInfo,\n        action: 'add',\n      },\n      direction: tempDirection,\n    });\n\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'submit') {\n        this.getScheduleDetails();\n      }\n    });\n  }\n\n  changeCategory(event: MatCheckboxChange, filter) {\n    console.log(\"---------\",filter)\n    if (event.checked) {\n      this.filterItems.push(filter.status);\n    } else {\n      this.filterItems.splice(this.filterItems.indexOf(filter.status), 1);\n    }\n    this.filterEvent(this.filterItems);\n  }\n\n  filterEvent(element) {\n    const list = this.calendarEvents.filter((x) =>\n      element.map((y) => y).includes(x.title)\n    );\n\n    this.calendarOptions.events = list;\n  }\n\n  handleEventClick(clickInfo: EventClickArg) {\n    this.eventClick(clickInfo);\n  }\n\n  eventClick(row) {\n    console.log(\"row===\",row.event._def.extendedProps);\n    const calendarData: any = {\n      id: row.event.id,\n      title: row.event.title,\n      lead_time: row.event._def.extendedProps.lead_time,\n      schedule_name: row.event._def.extendedProps.schedule_name,\n      // schedule_owner:row.event._def.extendedProps.schedule_owner,\n      schedule_view:row.event._def.extendedProps.schedule_view,\n      schedule_view_assignment:row.event._def.extendedProps.schedule_view_assignment,\n      startDate: row.event.start,\n      endDate: row.event.end\n    };\n\n    let tempDirection;\n    if (localStorage.getItem('isRtl') === 'true') {\n      tempDirection = 'rtl';\n    } else {\n      tempDirection = 'ltr';\n    }\n\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        calendar: calendarData,\n        action: 'edit',\n      },\n      direction: tempDirection,\n    });\n\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'submit') {\n        this.getScheduleDetails();\n        this.addCusForm.reset();\n      } else if (result === 'delete') {\n        this.getScheduleDetails();\n      }\n    });\n  }\n\n  editEvent(eventIndex, calendarData) {\n    const calendarEvents = this.calendarEvents.slice();\n    const singleEvent = Object.assign({}, calendarEvents[eventIndex]);\n    singleEvent.id = calendarData.id;\n    singleEvent.title = calendarData.title;\n    singleEvent.start = calendarData.startDate;\n    singleEvent.end = calendarData.endDate;\n    singleEvent.className = '';\n    singleEvent.groupId = calendarData.category;\n    singleEvent.details = calendarData.details;\n    calendarEvents[eventIndex] = singleEvent;\n    this.calendarEvents = calendarEvents; // reassign the array\n\n    this.calendarOptions.events = calendarEvents;\n  }\n\n  handleEvents(events: EventApi[]) {\n    // this.currentEvents = events;\n  }\n\n  createCalendarForm(calendar): FormGroup {\n    return this.fb.group({\n      id: [calendar.id],\n      lead_time: [\n        calendar.lead_time,\n        [Validators.required, Validators.pattern('[a-zA-Z]+([a-zA-Z ]+)*')],\n      ],\n      schedule_name: [calendar.schedule_name],\n      // schedule_owner:[calendar.schedule_owner],\n      schedule_view: [calendar.schedule_view],\n      schedule_view_assignment:[calendar.schedule_view_assignment],\n      startDate: [calendar.startDate, [Validators.required]],\n      endDate: [calendar.endDate, [Validators.required]],\n    });\n  }\n\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n\n\n\n}\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 p-l-10 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"calendarForm\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>{{'SCHEDULE.LIST.SCHEDULE' | translate}}</mat-label>\r\n                <mat-select formControlName=\"schedule_name\" required>\r\n                    <mat-option *ngFor=\"let option of scheduleList\" [value]=\"option.id\">\r\n                      {{option.status}}\r\n                    </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>{{'SCHEDULE.LIST.LEAD-TIME' | translate}}</mat-label>\r\n            <input matInput formControlName=\"lead_time\" required>\r\n            <mat-icon matSuffix>turned_in_not</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"row\">\r\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n              <mat-label>Define Schedule owner</mat-label>\r\n              <mat-select formControlName=\"schedule_owner\" required>\r\n                <mat-option [value]=\"'Driving Institute'\">\r\n                    Driving Institute\r\n                </mat-option>\r\n                <mat-option [value]=\"'JPJ or External'\">\r\n                    JPJ or External\r\n                </mat-option>\r\n                <mat-option [value]=\"'Driving School'\">\r\n                    Driving School\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div> -->\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>{{'SCHEDULE.LIST.SCHEDULE-VIEW' | translate}}</mat-label>\r\n                <mat-select formControlName=\"schedule_view\" (selectionChange)=\"getScheduleViewAssignList()\" required>\r\n                  <mat-option [value]=\"'All'\">\r\n                      All\r\n                  </mat-option>\r\n                  <mat-option [value]=\"'Instructor'\">\r\n                      Instructor\r\n                  </mat-option>\r\n                  <mat-option [value]=\"'QTI'\">\r\n                      QTI\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"calendarForm.value.schedule_view != 'All' && calendarForm.value.schedule_view != ''\">\r\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n            <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n              <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n                <mat-chip\r\n                    *ngFor=\"let viewdt of viewAssign_selected\"\r\n                    [selectable]=\"selectable\"\r\n                    [removable]=\"removable\"\r\n                    (removed)=\"remove(viewdt)\">\r\n                    {{viewdt}}\r\n                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon> \r\n                </mat-chip> \r\n                <mat-label>{{'SCHEDULE.LIST.ASSIGNMENT' | translate}}*</mat-label>\r\n                  <input type=\"text\" matInput \r\n                  #licenceInput\r\n                  #autocompleteTrigger=\"matAutocompleteTrigger\"\r\n                  [matChipInputFor]=\"chipList\"\r\n                  [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                  (matChipInputTokenEnd)=\"add($event)\"\r\n                  [formControl]=\"schedule_view_assignment\" [matAutocomplete]=\"autoView\">\r\n                </mat-chip-list>\r\n                <mat-autocomplete #autoView=\"matAutocomplete\" (optionSelected)=\"selectedViewAssignment($event)\" autoActiveFirstOption>\r\n                <mat-option *ngFor=\"let option of viewAssignTypeList | async\" [value]=\"option.name\">\r\n                        <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\" [checked]=\"viewAssign_selected.indexOf(option.name) >= 0\"></mat-checkbox>\r\n                    {{option.name}}\r\n                </mat-option>\r\n                </mat-autocomplete>\r\n                <button mat-icon-button matSuffix style=\"width: 34px; height: 34px;\" (click)=\"openAuto(autocompleteTrigger)\"> <mat-icon style=\"width: 34px;\">expand_more</mat-icon></button>\r\n              <!-- <mat-select formControlName=\"schedule_view_assignment\" required>\r\n                <mat-option *ngFor=\"let option of ViewAssignList\" [value]=\"option.id\">\r\n                    {{option.name}}\r\n                </mat-option>\r\n              </mat-select> -->\r\n            </mat-form-field>\r\n          </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>{{'SCHEDULE.LIST.START-DATE' | translate}}</mat-label>\r\n            <input matInput formControlName=\"startDate\" [owlDateTimeTrigger]=\"startDate\" [owlDateTime]=\"startDate\"\r\n              placeholder=\"Choose a date\" required>\r\n            <mat-icon matSuffix [owlDateTimeTrigger]=\"startDate\" class=\"date-icon\">today</mat-icon>\r\n            <owl-date-time #startDate></owl-date-time>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>{{'SCHEDULE.LIST.END-DATE' | translate}}</mat-label>\r\n            <input matInput formControlName=\"endDate\" [owlDateTimeTrigger]=\"endDate\" [owlDateTime]=\"endDate\"\r\n              placeholder=\"Choose a date\" required>\r\n            <mat-icon matSuffix [owlDateTimeTrigger]=\"endDate\" class=\"date-icon\">today</mat-icon>\r\n            <owl-date-time #endDate></owl-date-time>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-10 col-lg-10 col-md-12 col-sm-12\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!calendarForm.valid\"\r\n              (click)=\"setScheduleDetails()\">{{'BUTTON.ADD-BTN' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"dialogRef.close()\" tabindex=\"-1\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12\">\r\n          <div class=\"example-button-row\" *ngIf=\"showDeleteBtn\">\r\n            <button mat-mini-fab aria-label color=\"warn\" (click)=\"deleteEvent()\">\r\n              <mat-icon class=\"font-20\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject , ViewChild, ElementRef } from '@angular/core';\r\nimport { ScheduleService } from '../../schedule.service';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\n\r\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\r\n\r\nimport { Calendar } from '../../schedule.model';\r\nimport { formatDate } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteTrigger} from '@angular/material/autocomplete';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass']\r\n})\r\n\r\n\r\nexport class FormDialogComponent {\r\n\r\n  @ViewChild('autocompleteTrigger') matACTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('licenceInput') licenceInput: ElementRef<HTMLInputElement>;\r\n\r\n  action: string;\r\n  dialogTitle: string;\r\n  calendarForm: FormGroup;\r\n  calendar: Calendar;\r\n  showDeleteBtn = false;\r\n  ViewAssignList;\r\n  scheduleList;\r\n\r\n  selectable = true;\r\n  removable = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  viewAssign_selected= [];\r\n\r\n  viewAssignTypeData:any;\r\n\r\n  schedule_view_assignment = new FormControl('', { validators: [autocompleteObjectValidator(), Validators.required] }); \r\n\r\n  viewAssignTypeList: Observable<string[]>;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public calendarService: ScheduleService,\r\n    private fb: FormBuilder,private toastrService: ToastrService,\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n     \r\n      this.dialogTitle = data.calendar.title;\r\n      this.calendar = data.calendar;\r\n      this.showDeleteBtn = true;\r\n      if(this.calendar.schedule_view != 'All'){\r\n        this.calendarService.getScheduleViewAssignList(this.calendar.schedule_view,sessionStorage.client)\r\n        .subscribe(res=>{\r\n            this.ViewAssignList=res['data'];\r\n            console.log(\"this.ViewAssignList====\",this.ViewAssignList)\r\n        })\r\n      }\r\n      this.calendarForm = this.editContactForm();\r\n    } else {\r\n      console.log(\"newwww--------datad====\",data);\r\n      this.dialogTitle = 'New Event';\r\n      this.calendar = new Calendar({});\r\n      this.showDeleteBtn = false;\r\n      this.calendarForm = this.createContactForm(data.calendar);\r\n    }\r\n    \r\n    this.getScheduleList();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(calendarFm): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.calendar.id],\r\n      lead_time: [\r\n        this.calendar.lead_time,\r\n        [Validators.required]\r\n      ],\r\n      schedule_name: [this.calendar.schedule_name],\r\n      // schedule_owner: [this.calendar.schedule_owner],\r\n      schedule_view: [this.calendar.schedule_view],\r\n      // schedule_view_assignment: [this.calendar.schedule_view_assignment],\r\n      startDate: [calendarFm.start,\r\n      [Validators.required]\r\n      ],\r\n      endDate: [calendarFm.start,\r\n      [Validators.required]\r\n      ]\r\n    });\r\n  }\r\n\r\n  editContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.calendar.id],\r\n      lead_time: [\r\n        this.calendar.lead_time,\r\n        [Validators.required]\r\n      ],\r\n      schedule_name: [this.calendar.schedule_name],\r\n      // schedule_owner: [this.calendar.schedule_owner],\r\n      schedule_view: [this.calendar.schedule_view],\r\n      // schedule_view_assignment: [this.calendar.schedule_view_assignment],\r\n      startDate: [this.calendar.startDate,\r\n      [Validators.required]\r\n      ],\r\n      endDate: [this.calendar.endDate,\r\n      [Validators.required]\r\n      ]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  deleteEvent() {\r\n    this.calendarService.deleteScheduleDetails(this.calendarForm.value,sessionStorage.currentUser,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      this.toastrService.success(\"Deleted Successfully!!!!\")\r\n      this.dialogRef.close('delete');\r\n    })\r\n    \r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n setScheduleDetails() {\r\n   if(this.action == 'add'){\r\n    this.calendarService.setScheduleDetails(this.calendarForm.value,sessionStorage.currentUser,sessionStorage.client)\r\n    .subscribe(res=>{\r\n      this.toastrService.success(\"Updated Successfully!!!!\")\r\n       this.dialogRef.close('submit');\r\n    })\r\n   }\r\n   \r\n   if(this.action == 'edit'){\r\n     console.log(\"this.calendarForm.value========\",this.calendarForm.value);\r\n    this.calendarService.updateScheduleDetails(this.calendarForm.value,sessionStorage.currentUser,sessionStorage.client)\r\n     .subscribe(res=>{\r\n      this.toastrService.success(\"Updated Successfully!!!!\")\r\n        this.dialogRef.close('submit');\r\n     })\r\n   }\r\n    \r\n  }\r\n\r\n\r\n  getScheduleViewAssignList(){\r\n    if(this.calendarForm.value.schedule_view != 'All'){\r\n      this.calendarService.getScheduleViewAssignList(this.calendarForm.value.schedule_view,sessionStorage.client)\r\n      .subscribe(res=>{\r\n          // this.ViewAssignList=res['data'];\r\n          // console.log(\"this.ViewAssignList====\",this.ViewAssignList);\r\n          this.viewAssignTypeData=res['data'];\r\n          console.log(\"this.this.schedule_view_assignment=========\",this.schedule_view_assignment);\r\n          this.viewAssignTypeList = this.schedule_view_assignment.valueChanges.pipe(\r\n            startWith(''),\r\n            map((fruit: string | null) => fruit ? this._filterviewAssignType(fruit) : this.viewAssignTypeData.slice()));\r\n        })\r\n    }\r\n  }\r\n\r\n  displayFn(user): string {\r\n    return user && user.viewAssign_class ? user.viewAssign_class : '';\r\n  }\r\n\r\n  private _filterviewAssignType(name): [] {\r\n    console.log(\"name=====\",name);\r\n    const filterValue = name.toLowerCase();\r\n    return this.viewAssignTypeData.filter(option => option.viewAssign_class.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    console.log(\"------------\",value)\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.viewAssign_selected.push(value);\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.schedule_view_assignment.setValue(null);\r\n  }\r\n\r\n  remove(viewAssign: string): void {\r\n    const index = this.viewAssign_selected.indexOf(viewAssign);\r\n\r\n    if (index >= 0) {\r\n      this.viewAssign_selected.splice(index, 1);\r\n    }    \r\n  }\r\n\r\n  openAuto(trigger: MatAutocompleteTrigger) {\r\n    trigger.openPanel();\r\n    this.licenceInput.nativeElement.focus();\r\n    console.log(trigger);\r\n  }\r\n\r\n  selectedViewAssignment(event: MatAutocompleteSelectedEvent): void {\r\n    const newValue = event.option.viewValue;\r\n    console.log(\"newValue=======\",event.option.viewValue);\r\n    if (this.viewAssign_selected.includes(newValue)) {\r\n      this.viewAssign_selected = [...this.viewAssign_selected.filter(fruit=>fruit !== newValue)];\r\n    } else {\r\n      this.viewAssign_selected.push(event.option.viewValue);\r\n    }\r\n    this.licenceInput.nativeElement.value = '';\r\n    this.schedule_view_assignment.setValue(null);\r\n    // keep the autocomplete opened after each item is picked.\r\n    requestAnimationFrame(()=>{\r\n      this.openAuto(this.matACTrigger);\r\n    })\r\n\r\n  }\r\n\r\n\r\n  getScheduleList(){\r\n    this.calendarService.getScheduleList()\r\n    .subscribe(res=>{\r\n        this.scheduleList=res['data'];\r\n        console.log(\"this.ViewAssignList====\",this.ViewAssignList)\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddScheduleComponent } from './add-schedule/add-schedule.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'schedule-list',\r\n    component: AddScheduleComponent\r\n  },\r\n  // {\r\n  //   path: 'edit-package/:id',\r\n  //   component: EditScheduleComponent\r\n  // },\r\n  // {\r\n  //   path: 'about-student',\r\n  //   component: AboutStudentComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ScheduleRoutingModule {}\r\n","import { formatDate } from '@angular/common';\r\nexport class Calendar {\r\n    id: number;\r\n    lead_time: string;\r\n    schedule_name: string;\r\n    schedule_owner:string;\r\n    schedule_view:string;\r\n    schedule_view_assignment:string;\r\n    startDate: string;\r\n    endDate: string;\r\n\r\n    constructor(calendar) {\r\n        {\r\n            this.id = calendar.id || this.getRandomID();\r\n            this.lead_time = calendar.lead_time || '';\r\n            this.schedule_name = calendar.schedule_name || '';\r\n            this.schedule_owner = calendar.schedule_owner || '';\r\n            this.schedule_view = calendar.schedule_view || '';\r\n            this.schedule_view_assignment = calendar.schedule_view_assignment || '';\r\n            this.startDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n            this.endDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n        }\r\n    }\r\n    public getRandomID(): string {\r\n        const S4 = () => {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return S4() + S4();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { ScheduleRoutingModule } from './schedule-routing.module';\r\nimport { ScheduleService } from './schedule.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { FullCalendarModule } from \"@fullcalendar/angular\";\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from \"ng-pick-datetime\";  \r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport { FormDialogComponent as calFormComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\n\r\nimport { AddScheduleComponent } from './add-schedule/add-schedule.component';\r\n\r\n\r\n\r\nFullCalendarModule.registerPlugins([\r\n  dayGridPlugin,\r\n  timeGridPlugin,\r\n  listPlugin,\r\n  interactionPlugin,\r\n]);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddScheduleComponent,calFormComponent\r\n  ],\r\n  imports: [NgxDatatableModule,MatChipsModule,\r\n    CKEditorModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    ScheduleRoutingModule,\r\n    MatProgressSpinnerModule,MatStepperModule,\r\n    NgxMaskModule,TranslateModule,\r\n    MatAutocompleteModule,\r\n    FullCalendarModule, OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n  ],\r\n  providers: [ScheduleService],\r\n})\r\nexport class ScheduleModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Calendar } from \"./schedule.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { environment } from '../../../environments/environment'\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ScheduleService {\r\n\r\n  private readonly API_URL = \"assets/data/calendar.json\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  dataChange: BehaviorSubject<Calendar[]> = new BehaviorSubject<Calendar[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private http: HttpClient) {}\r\n  get data(): Calendar[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  getAllCalendars(): Observable<Calendar[]> {\r\n    return this.http\r\n      .get<Calendar[]>(this.API_URL)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n\r\n  deleteCalendar(calendar: Calendar): void {\r\n    this.dialogData = calendar;\r\n  }\r\n  errorHandler(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  getScheduleViewAssignList(schedule_view,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getScheduleViewAssignList`,{schedule_view,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getScheduleList(){\r\n    return this.http\r\n    .get<any>(`${environment.apiUrl}/webRoutes/getScheduleList`)\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  setScheduleDetails(calendarData,authToken,client){\r\n    //this.dialogData = calendar;\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/setScheduleDetails`,{calendarData,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getScheduleDetails(client){\r\n    //this.dialogData = calendar;\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getScheduleDetails`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateScheduleDetails(calendarData,authToken,client){\r\n    //this.dialogData = calendar;\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/updateScheduleDetails`,{calendarData,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteScheduleDetails(calendarData,authToken,client){\r\n    //this.dialogData = calendar;\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/deleteScheduleDetails`,{calendarData,authToken,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n"]}