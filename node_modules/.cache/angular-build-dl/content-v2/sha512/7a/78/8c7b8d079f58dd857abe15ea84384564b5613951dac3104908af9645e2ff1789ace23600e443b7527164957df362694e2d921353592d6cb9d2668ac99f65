{"version":3,"sources":["webpack:///src/app/clerk/reports/reports-routing.module.ts","webpack:///src/app/clerk/reports/reports.module.ts","webpack:///src/app/clerk/reports/reports.service.ts","webpack:///src/app/clerk/reports/sales-report/sales-report.component.html","webpack:///src/app/clerk/reports/sales-report/sales-report.component.ts"],"names":["routes","path","component","SalesReportComponent","ReportsRoutingModule","RouterModule","ReportsModule","ReportsService","NgxSpinnerModule","MatCardModule","MatRadioModule","NgxDatatableModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatDatepickerModule","MatCheckboxModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","MatAutocompleteModule","http","client","post","environment","pipe","map","res","reportService","toastrService","fb","columns","name","data","filteredData","translateVal","localStorage","lang","today","Date","fileName","getCurrentDaySalesReport","sessionStorage","subscribe","i","length","package_english","english","event","val","target","value","toLowerCase","colsAmt","keys","Object","filter","item","toString","indexOf","table","offset","options","fieldSeparator","quoteStrings","decimalseparator","showLabels","showTitle","title","format","useBom","noDownload","headers","console","log","result","malay","package_malay","profile_img","rest","ngxCsv","DatatableComponent","refresh"],"mappings":"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","file":"src_app_clerk_reports_reports_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SalesReportComponent } from './sales-report/sales-report.component';\r\n// import { RegistrationReportComponent } from './registration-report/registration-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'sales-report',\r\n    component: SalesReportComponent\r\n  },\r\n  // {\r\n  //   path: 'registration-report',\r\n  //   component: RegistrationReportComponent\r\n  // },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport {ReportsService} from './reports.service';\r\nimport {ReportsRoutingModule} from './reports-routing.module';\r\nimport { SalesReportComponent } from './sales-report/sales-report.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  \r\n    SalesReportComponent\r\n  ],\r\n  imports: [\r\n    NgxSpinnerModule,MatCardModule,MatRadioModule,\r\n    NgxDatatableModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ,TranslateModule,\r\n    MatAutocompleteModule,ReportsRoutingModule\r\n  ],\r\n  providers: [ReportsService],\r\n})\r\nexport class ReportsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ReportsService {\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n\r\n  getCurrentDaySalesReport(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/report/getCurrentDaySalesReport`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"block-header\">\n        <div class=\"row\">\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <ul class=\"breadcrumb breadcrumb-style \">\n              <li class=\"breadcrumb-item\">\n                <h4 class=\"page-title\">{{'SALES-REPORT.TITLE' | translate}}</h4>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n              <div class=\"mt-5\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div class=\"card\">\n                    <div class=\"body\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                            <div class=\"row\">\n                                <div class=\"col-8\"></div>\n                                <div class=\"col-2\" style=\"padding: 10px;\">\n                                  <button mat-raised-button (click)=\"export()\" class=\"btn btn-success\">{{'BUTTON.EXCEL-BTN' | translate}}\n                                    <i class=\"fas fa-file-excel\"></i>\n                                  </button>\n                                  <!-- <a csvLink [data]=\"data\">Download</a> -->\n                                </div>\n                                <div class=\"col-2\">\n                                  <ul class=\"header-buttons\">\n                                    <li>\n                                      <div class=\"icon-button-demo\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                          <mat-icon class=\"col-white\">refresh\n                                          </mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                        <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"profile_img\" [width]=\"100\">\n                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                            <td class=\"table-img padding-0\">\n                            <img width=\"40\" src=\"{{ value ? value : 'assets/images/nologo.png' }}\" />\n                            </td>\n                        </ng-template>\n                        </ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.STUDENT-NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.NRIC' | translate}}\" prop=\"nric_number\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.PASSPORT' | translate}}\" prop=\"passport_number\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.TRAN-NO' | translate}}\" prop=\"registration_no\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.PACKAGE' | translate}}\" prop=\"package_english\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.PAYMENT-PHASE' | translate}}\" prop=\"english\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'SALES-REPORT.LIST.AMOUNT-PAID' | translate}}\" prop=\"payment_amount\" [width]=\"200\"></ngx-datatable-column>\n                    </ngx-datatable>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ReportsService } from '../reports.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-sales-report',\n  templateUrl: './sales-report.component.html',\n  styleUrls: ['./sales-report.component.sass']\n})\nexport class SalesReportComponent implements OnInit {\n\n  // regReportForm: FormGroup;\n\n  constructor(private reportService:ReportsService,private toastrService:ToastrService,private fb: FormBuilder,) {\n\n    // this.regReportForm = this.fb.group({\n    //   from_date: [new Date()],\n    //   to_date: [new Date()],\n    // });\n   }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  columns = [\n    { name: 'Name' },\n    { name: 'NRIC Number' },\n    { name: 'Passport Number' },\n    {name: 'Gender'},\n    {name: 'Mobile'},\n    {name: 'Email'},\n    {name: 'Status'},\n  ]; \n\n \n\n  data=[];\n  filteredData = [];\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n  today=new Date();\n  fileName= 'Sales-report-'+this.today+'.xlsx';  \n\n  ngOnInit(): void {\n    this.getCurrentDaySalesReport();\n  }\n\n  refresh() {\n    this.getCurrentDaySalesReport();\n  }\n\n  getCurrentDaySalesReport(){\n      this.reportService.getCurrentDaySalesReport(sessionStorage.client)\n      .subscribe((res)=>{\n        for(let i=0;i<res['data'].length;i++){\n          res['data'][i].package_english = res['data'][i]['package_'+this.translateVal];\n          res['data'][i].english = res['data'][i][this.translateVal];\n        }\n        this.data=res['data'];\n        this.filteredData=res['data'];\n      })\n  }\n\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n\n  export(){\n    if(this.filteredData.length > 0){\n      var options = { \n        fieldSeparator: ',',\n        quoteStrings: '\"',\n        decimalseparator: '.',\n        showLabels: true, \n        showTitle: true,\n        title: 'Sales Report - '+moment(new Date()).format('YYYY-MM-DD'),\n        useBom: true,\n        noDownload: false,\n        headers: [\"Student Name\", \"NRIC Number\", \"Passport Number\",\"Transaction Number\",\"Package\",\"Payment Phase\",\"Amount Paid\"]\n      };\n      let fileName='Sales_Report_'+moment(new Date()).format('YYYY-MM-DD');\n      console.log(\"this.filteredData========\",this.filteredData,fileName);\n      const result = this.filteredData.map(({malay,package_malay,profile_img,...rest}) => ({...rest}));\n      new ngxCsv(result, fileName, options);\n    }\n\n\n  }\n\n}\n\n"]}