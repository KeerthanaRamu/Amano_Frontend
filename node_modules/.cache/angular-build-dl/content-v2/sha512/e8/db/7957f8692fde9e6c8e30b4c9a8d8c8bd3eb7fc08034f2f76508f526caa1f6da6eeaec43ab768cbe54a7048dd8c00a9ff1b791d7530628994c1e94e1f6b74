{"version":3,"sources":["webpack:///src/app/admin/message/message-routing.module.ts","webpack:///src/app/admin/message/message.module.ts","webpack:///src/app/admin/message/message.service.ts","webpack:///src/app/admin/message/message/message.component.html","webpack:///src/app/admin/message/message/message.component.ts"],"names":["routes","path","component","MessageComponent","MessageRoutingModule","RouterModule","MessageModule","MessageService","CommonModule","MatAutocompleteModule","NgxDatatableModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatSelectModule","FormsModule","ReactiveFormsModule","MaterialFileInputModule","TranslateModule","NgxEchartsModule","echarts","PerfectScrollbarModule","MatIconModule","NgApexchartsModule","MatButtonModule","MatMenuModule","http","get","environment","pipe","map","res","msg_status","client","post","msgData","authToken","fb","messageService","modalService","toastrService","data","filteredData","hide","columns","name","getMessageList","getMessageDetails","addMessageForm","group","message_type","Validators","message_english","message_malay","editMessageForm","id","subscribe","console","log","messageList","content","open","ariaLabelledBy","size","checkMessagetExists","value","sessionStorage","error","patchValue","setMessageDetails","currentUser","success","dismissAll","row","rowIndex","status_id","updateMessageDetails","rowToDelete","deleteMessageDetails","event","val","target","toLowerCase","colsAmt","length","keys","Object","filter","item","i","toString","indexOf","table","offset","DatatableComponent","filterDatatable","addRow"],"mappings":"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","file":"src_app_admin_message_message_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MessageComponent } from './message/message.component';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MessageComponent,\r\n  },\r\n  // {\r\n  //   path: 'dashboard2',\r\n  //   component: Dashboard2Component,\r\n  // }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MessageRoutingModule {}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MessageRoutingModule } from './message-routing.module';\r\n// import { Dashboard2Component } from './dashboard2/dashboard2.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MessageService } from './message.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MessageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,MatAutocompleteModule,NgxDatatableModule,\r\n    MatFormFieldModule,MatInputModule,MatSnackBarModule,MatSelectModule,FormsModule,\r\n    ReactiveFormsModule,MaterialFileInputModule,\r\n    MessageRoutingModule,TranslateModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n  ],providers: [MessageService],\r\n})\r\nexport class MessageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  getMessageList() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/webRoutes/getMessageList`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  \r\n  getMessageDetails() {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/webRoutes/getMessageDetails`)\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  \r\n  checkMessagetExists(msg_status,client){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/webRoutes/checkMessagetExists`,{msg_status,client})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  setMessageDetails(msgData,authToken,client){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/webRoutes/setMessageDetails`,{msgData,authToken,client})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateMessageDetails(msgData,authToken,client){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/webRoutes/updateMessageDetails`,{msgData,authToken,client})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteMessageDetails(msgData){\r\n    return this.http\r\n      .post<any>(`${environment.apiUrl}/webRoutes/deleteMessageDetails`,{msgData})\r\n      .pipe(\r\n        map((res) => {\r\n          // localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n          // this.currentEmployeeSubject.next(user);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n \r\n\r\n}\r\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <ul class=\"breadcrumb breadcrumb-style \">\n                  <li class=\"breadcrumb-item\">\n                    <h4 class=\"page-title\">{{'MESSAGE.LISTTITLE' | translate}}</h4>\n                  </li>\n                  <!-- <li class=\"breadcrumb-item bcrumb-1\">\n                    <a routerLink=\"/admin/dashboard/main\">\n                      <i class=\"fas fa-home\"></i> Home</a>\n                  </li>\n                  <li class=\"breadcrumb-item bcrumb-2\">   \n                    <a href=\"#\" onClick=\"return false;\">Clients</a>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <div class=\"card\">\n                <div class=\"body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                    <div class=\"ngxTableHeader\">\n                        <ul class=\"header-buttons-left ms-0 mb-0\">\n                        <li class=\"dropdown\">\n                            <h2>\n                            <strong>{{'MESSAGE.LISTTITLE' | translate}}</strong></h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </li>\n                        </ul>\n                        <ul class=\"header-buttons\">\n                        <li>\n                            <button mat-mini-fab color=\"primary\" (click)='addRow(addRecord)'>\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                        </li>\n                        </ul>\n                    </div>\n                    <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        \n                        <ngx-datatable-column name=\"{{'MESSAGE.LIST.MESSAGE-TYPE' | translate}}\" prop=\"status\" [width]=\"130\"></ngx-datatable-column>\n                        <!-- <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\">\n                                        </ngx-datatable-column> -->\n                        <!-- action buttons -->\n                        <ngx-datatable-column name=\"{{'MESSAGE.ACTION' | translate}}\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editRow(row, rowIndex, editRecord)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteRow(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column>\n                    </ngx-datatable>\n                    <!-- Add Record Modal Window -->\n                    <ng-template #addRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                            <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'MESSAGE.TITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form class=\"register-form\" [formGroup]=\"addMessageForm\" (ngSubmit)=\"setMessageDetails()\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'MESSAGE.LIST.MESSAGE-TYPE' | translate}}</mat-label>\n                                        <mat-select formControlName=\"message_type\" (selectionChange)=\"checkMessagetExists()\" required>\n                                                <mat-option *ngFor=\"let option of messageList\" [value]=\"option.id\">\n                                                    {{option.status}}\n                                                  </mat-option>\n                                        </mat-select> \n                                      </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'MESSAGE.LIST.MESSAGE-ENG' | translate}}</mat-label>\n                                        <textarea matInput formControlName=\"message_english\" style=\"height: 100px;\" required></textarea>\n                                        <mat-icon matSuffix>message</mat-icon>\n                                        <mat-error *ngIf=\"addMessageForm.get('message_english').hasError('required')\">\n                                            {{'MESSAGE.LIST.MESSAGE-ENG' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'MESSAGE.LIST.MESSAGE-MALAY' | translate}}</mat-label>\n                                        <textarea matInput formControlName=\"message_malay\" style=\"height: 100px;\" required></textarea>\n                                        <mat-icon matSuffix>message</mat-icon>\n                                        <mat-error *ngIf=\"addMessageForm.get('message_malay').hasError('required')\">\n                                            {{'MESSAGE.LIST.MESSAGE-MALAY' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                <button class=\"btn-space\" [disabled]=\"!addMessageForm.valid\" mat-raised-button\n                                color=\"primary\">{{'BUTTON.ADD-BTN' | translate}}</button>\n                                <button type=\"button\" mat-button (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n                    <!-- Edit Record Modal Window -->\n                    <ng-template #editRecord let-modal>\n                        <div class=\"modal-header editRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'MESSAGE.EDITTITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                        <form [formGroup]=\"editMessageForm\" (ngSubmit)=\"updateMessageDetails()\">\n                            <div class=\"input-field col s12 d-none\">\n                            <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'MESSAGE.LIST.MESSAGE-TYPE' | translate}}</mat-label>\n                                        <mat-select formControlName=\"message_type\" (selectionChange)=\"checkRetestExists()\" required>\n                                                <mat-option *ngFor=\"let option of messageList\" [value]=\"option.id\">\n                                                    {{option.status}}\n                                                  </mat-option>\n                                        </mat-select> \n                                      </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'MESSAGE.LIST.MESSAGE-ENG' | translate}}</mat-label>\n                                        <textarea matInput formControlName=\"message_english\" style=\"height: 100px;\" required></textarea>\n                                        <mat-icon matSuffix>message</mat-icon>\n                                        <mat-error *ngIf=\"editMessageForm.get('message_english').hasError('required')\">\n                                            {{'MESSAGE.LIST.MESSAGE-ENG' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'MESSAGE.LIST.MESSAGE-MALAY' | translate}}</mat-label>\n                                        <textarea matInput formControlName=\"message_malay\" style=\"height: 100px;\" required></textarea>\n                                        <mat-icon matSuffix>message</mat-icon>\n                                        <mat-error *ngIf=\"editMessageForm.get('message_malay').hasError('required')\">\n                                            {{'MESSAGE.LIST.MESSAGE-MALAY' | translate}} is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                           \n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\">{{'BUTTON.EDIT-BTN' | translate}}</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </form>\n                        </div>\n                    </ng-template>\n\n\n                    <ng-template #deleteRecord let-modal>\n                        <div class=\"modal-header deleteRowModal\">\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"> <div class=\"modal-header \">\n                            <div class=\"modal-about\">\n                                <div class=\"font-weight-bold p-t-10 font-17\">\n                                    {{'MESSAGE.DELETETITLE' | translate}}</div>\n                            </div>\n                            </div>\n                        </h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                        </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>{{'BUTTON.CONFIRMATION' | translate}}</p>\n                            <div class=\"modal-footer\">\n                            <div class=\"button-demo\">\n                                <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"deleteMessageDetails()\">{{'BUTTON.DEL-BTN' | translate}}</button>\n                                <button mat-button type=\"button\" (click)=\"modal.close()\">{{'BUTTON.CANCEL-BTN' | translate}}</button>\n                            </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { MessageService } from '../message.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n  \n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n \n  data=[];\n  filteredData = [];\n  addMessageForm:FormGroup;\n  editMessageForm:FormGroup;\n  rowToDelete: any;\n  messageList:any;\n\n  hide = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private messageService:MessageService,\n    private modalService: NgbModal,\n    private toastrService: ToastrService,) { }\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ngOnInit(): void {\n    this.getMessageList();\n    this.getMessageDetails();\n    this.addMessageForm = this.fb.group({\n      message_type: ['',Validators.required],\n      message_english: ['',Validators.required],\n      message_malay: ['',Validators.required],\n    });\n\n    this.editMessageForm = this.fb.group({\n      id:[''],\n      message_type: ['',Validators.required],\n      message_english: ['',Validators.required],\n      message_malay: ['',Validators.required],\n    });\n  }\n\n  columns = [\n    { name: 'Message Type' }\n  ]; \n\n  getMessageList(){\n    this.messageService.getMessageList()\n    .subscribe(res=>{\n      console.log(\"getMessageList--------\",res);\n      this.messageList=res['data'];\n    })\n  }\n\n\n  getMessageDetails(){\n    this.messageService.getMessageDetails()\n    .subscribe(res=>{\n      console.log(\"getRetestDetails--------\",res);\n      this.data=res['data'];\n      this.filteredData=res['data'];\n    })\n  }\n\n  \n\n  addRow(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', size:'lg' });\n  }\n\n  checkMessagetExists(){\n    this.messageService.checkMessagetExists(this.addMessageForm.value.message_type,sessionStorage.client)\n    .subscribe(res=>{\n        if(res['status'] == 'Exists'){\n          this.toastrService.error('Already Exists!!!');\n          this.addMessageForm.patchValue({\n            'message_type':''\n          })\n        }\n    })\n  }\n  \n\n  setMessageDetails(){\n    this.messageService.setMessageDetails(this.addMessageForm.value,sessionStorage.currentUser,sessionStorage.client)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Created Successfully!!');\n        this.getMessageDetails();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title',size:'lg' });\n    console.log(\"row====\",row)\n    this.editMessageForm.patchValue({\n      id: row.id,\n      message_type: row.status_id,\n      message_english: row.message_english,\n      message_malay: row.message_malay,\n    });  \n  }\n\n  \n\n  updateMessageDetails(){\n    this.messageService.updateMessageDetails(this.editMessageForm.value,sessionStorage.currentUser,sessionStorage.client)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Updated Successfully!!');\n        this.getMessageDetails();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n  \n  deleteRow(row,rowIndex, content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n    this.rowToDelete=row;\n  }\n\n  deleteMessageDetails(){\n    this.messageService.deleteMessageDetails(this.rowToDelete)\n    .subscribe(res=>{\n      if(res['status'] == 'Success'){\n        this.toastrService.success('Deleted Successfully!!');\n        this.getMessageDetails();\n        this.modalService.dismissAll()\n      }else{\n        this.toastrService.error(res['status']);\n      }\n    })\n  }\n\n  filterDatatable(event) {\n      // get the value of the key pressed and make it lowercase\n      const val = event.target.value.toLowerCase();\n      // get the amount of columns in the table\n      const colsAmt = this.columns.length;\n      // get the key names of each column in the dataset\n      const keys = Object.keys(this.filteredData[0]);\n      // assign filtered matches to the active datatable\n      this.data = this.filteredData.filter(function (item) {\n        // iterate through each row's column data\n        for (let i = 0; i < colsAmt; i++) {\n          // check for a match\n          if (\n            item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n            !val\n          ) {\n            // found match, return true to add to result set\n            return true;\n          }\n        }\n      });\n      // whenever the filter changes, always go back to the first page\n      this.table.offset = 0;\n  }\n\n}\n"]}