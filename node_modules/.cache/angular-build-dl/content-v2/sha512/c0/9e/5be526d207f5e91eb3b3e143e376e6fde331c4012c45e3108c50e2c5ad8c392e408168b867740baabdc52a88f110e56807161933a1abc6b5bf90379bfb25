{"version":3,"sources":["./src/app/clerk/refund-process/refund-process-routing.module.ts","./src/app/clerk/refund-process/refund-process.module.ts","./src/app/clerk/refund-process/refund-process.service.ts","./src/app/clerk/refund-process/refund/refund.component.ts","./src/app/clerk/refund-process/refund/refund.component.html"],"names":[],"mappings":"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","file":"src_app_clerk_refund-process_refund-process_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RefundComponent } from './refund/refund.component'; \r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'refund-process',\r\n    component: RefundComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RefundProcessRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { RefundProcessService } from './refund-process.service'; \r\nimport { RefundProcessRoutingModule } from './refund-process-routing.module';\nimport { RefundComponent } from './refund/refund.component'; \r\n\r\n@NgModule({\r\n  declarations: [\r\n  \n    RefundComponent\n  ],\r\n  imports: [\r\n    NgxSpinnerModule,MatCardModule,MatRadioModule,\r\n    NgxDatatableModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ,TranslateModule,\r\n    MatAutocompleteModule,RefundProcessRoutingModule\r\n  ],\r\n  providers: [RefundProcessService],\r\n})\r\nexport class RefundProcessModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RefundProcessService {\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n\r\n  getNRICNumberToApplyRefund(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getNRICNumberToApplyRefund`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPassportNumberToApplyRefund(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getPassportNumberToApplyRefund`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getRefundDetailsForStudents(studentdt,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getRefundDetailsForStudents`,{studentdt,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit,ViewChild,ChangeDetectorRef } from '@angular/core';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\nimport { LanguageService } from '../../../core/service/language.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {RefundProcessService} from '../refund-process.service'\nimport {Router,ActivatedRoute} from '@angular/router'\n\nfunction autocompleteObjectValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (typeof control.value === 'string') {\n      return { 'invalidAutocompleteObject': { value: control.value } }\n    }\n    return null  /* valid option selected */\n  }\n}\n\n\n@Component({\n  selector: 'app-refund',\n  templateUrl: './refund.component.html',\n  styleUrls: ['./refund.component.sass']\n})\nexport class RefundComponent implements OnInit {\n\n  selectProfileForm:FormGroup;\n\n  nricNumberData:any;\n  passportNumberData:any;\n  translateVal;\n  data:any;\n\n  columns = [\n    { name: 'Student Name' },\n    { name: 'Transaction Number' },\n    { name: 'Package' },\n    {name: 'Package Type'},\n    {name: 'Package Amount'},\n    {name: 'Payment Status'},\n    {name: 'Amount Paid'},\n    {name: 'Status'},\n    {name: 'Refund Amount'},\n  ]; \n\n  constructor(private cdRef:ChangeDetectorRef,private fb: FormBuilder,\n    private languageService:LanguageService,private toastrService: ToastrService,private refundProcessService:RefundProcessService,\n    private router: Router,private route: ActivatedRoute,) {\n     \n    }\n\n  nric_number= new FormControl('', { validators: [autocompleteObjectValidator()] });\n  passport_number= new FormControl('', { validators: [autocompleteObjectValidator()] });\n\n\n  nricNumberList: Observable<string[]>;\n  passportNumberList: Observable<string[]>;\n\n\n    public validation_msgs = {\n      'nric_number': [\n        { type: 'invalidAutocompleteObject', message: 'NRIC Number not recognized. Click one of the options.' }\n      ],\n      'passport_number': [\n        { type: 'invalidAutocompleteObject', message: 'Passport Number not recognized. Click one of the options.' }\n      ]\n    }\n\n  ngOnInit(): void {\n\n    this.getNRICNumberToApplyLicense();\n    this.getPassportNumberToApplyLicense();\n    \n    this.languageService.languageChanged.subscribe(value => {\n      this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n    });\n\n  }\n\n  getNRICNumberToApplyLicense(){\n    this.refundProcessService.getNRICNumberToApplyRefund(sessionStorage.client)\n      .subscribe(res=>{\n        this.nricNumberData=res;\n        this.nricNumberList = this.nric_number.valueChanges.pipe(\n          startWith(''),\n          map(value => (typeof value === 'string' ? value : value.nric_number)),\n          map(name => (name ? this._filterNricNumber(name) : this.nricNumberData.slice())),\n        );\n      })\n  }\n\n  getPassportNumberToApplyLicense(){\n    this.refundProcessService.getPassportNumberToApplyRefund(sessionStorage.client)\n      .subscribe(res=>{\n        this.passportNumberData=res;\n        this.passportNumberList = this.passport_number.valueChanges.pipe(\n          startWith(''),\n          map(value => (typeof value === 'string' ? value : value.passport_number)),\n          map(name => (name ? this._filterPassportNumber(name) : this.passportNumberData.slice())),\n        );\n      })\n  }\n\n  displayFnNRICNUmber(user): string {\n    return user && user.nric_number ? user.nric_number : '';\n  }\n\n  displayFnPassportNumber(user): string {\n    return user && user.passport_number ? user.passport_number : '';\n  }\n\n  private _filterNricNumber(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.nricNumberData.filter(option => option.nric_number.toLowerCase().includes(filterValue));\n  }\n\n  private _filterPassportNumber(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.passportNumberData.filter(option => option.passport_number.toLowerCase().includes(filterValue));\n  }\n\n  selectedNricNumber(event){\n    console.log(\"event.option.value.id===\",event.option.value.id);\n    if(event.option.value.id){\n      this.passport_number.setValue('');\n      this.refundProcessService.getRefundDetailsForStudents(event.option.value.id,sessionStorage.client)\n      .subscribe((res)=>{\n          console.log(\"re----nric-----------\",res);\n          this.data=res;\n      })\n    }\n  }\n\n  selectedPassportNumber(event){\n    console.log(\"event.option.value.id===\",event.option.value.id);\n    if(event.option.value.id){\n      this.nric_number.setValue('');\n      this.refundProcessService.getRefundDetailsForStudents(event.option.value.id,sessionStorage.client)\n      .subscribe((res)=>{\n          console.log(\"re----nric-----------\",res); \n          this.data=res;\n      })\n    }\n  }\n\n\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <h2>{{'REFUND-PROCESS.TITLE'| translate}}</h2>\n                        \n                    </div>\n                    <div class=\"body\">\n                        <form class=\"m-4\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>{{'REFUND-PROCESS.LIST.NRIC-NUMBER' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"nric_number\" [matAutocomplete]=\"autoNric\" >\n                                        <mat-autocomplete #autoNric=\"matAutocomplete\" [displayWith]=\"displayFnNRICNUmber\" (optionSelected)=\"selectedNricNumber($event)\">\n                                        <mat-option *ngFor=\"let option of nricNumberList | async\" [value]=\"option\">\n                                            {{option.nric_number}}\n                                        </mat-option>\n                                        </mat-autocomplete>\n                                        <mat-error *ngFor=\"let validation of validation_msgs.nric_number\">\n                                            <div *ngIf=\"nric_number.hasError(validation.type)\">\n                                              {{validation.message}}\n                                            </div>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>{{'REFUND-PROCESS.LIST.PASSPORT-NUMBER' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"passport_number\" [matAutocomplete]=\"autoPassport\">\n                                        <mat-autocomplete #autoPassport=\"matAutocomplete\" [displayWith]=\"displayFnPassportNumber\" (optionSelected)=\"selectedPassportNumber($event)\">\n                                        <mat-option *ngFor=\"let option of passportNumberList | async\" [value]=\"option\">\n                                            {{option.passport_number}}\n                                        </mat-option>\n                                        </mat-autocomplete>\n                                        <mat-error *ngFor=\"let validation of validation_msgs.passport_number\">\n                                            <div *ngIf=\"passport_number.hasError(validation.type)\">\n                                              {{validation.message}}\n                                            </div>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </form>\n                        <div class=\"row\" *ngIf=\"data\">\n                            <div class=\"col-md-12\">\n                                  <div class=\"mt-5\">\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                      <div class=\"card\">\n                                        <div class=\"body\">\n                                          <div class=\"table-responsive\">\n                                            <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                                            [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                                            <!-- user image -->\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.STUDENT-NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.TRAN-NO' | translate}}\" prop=\"registration_no\" [width]=\"130\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PACKAGE' | translate}}\" prop=\"package_english\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PACKAGE-TYPE' | translate}}\" prop=\"english\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PACKAGE-AMOUNT' | translate}}\" prop=\"final_package_price\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PAYMENT-STATUS' | translate}}\" prop=\"payment_status\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.AMOUNT-PAID' | translate}}\" prop=\"amountPaid\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.STATUS' | translate}}\" prop=\"status\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.REFUND-AMOUNT' | translate}}\" prop=\"refund_amount\" [width]=\"200\"></ngx-datatable-column>\n\n                                        </ngx-datatable>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                            </div>\n                          </div>\n                        <div class=\"row\" *ngIf=\"data\" style=\"text-align: center;\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <button mat-raised-button  color=\"primary\">{{'BUTTON.CONFIRM-BTN' | translate}}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n "],"sourceRoot":"webpack:///"}