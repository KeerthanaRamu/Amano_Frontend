{"version":3,"sources":["webpack:///src/app/clerk/refund-process/refund-process-routing.module.ts","webpack:///src/app/clerk/refund-process/refund-process.module.ts","webpack:///src/app/clerk/refund-process/refund-process.service.ts","webpack:///src/app/clerk/refund-process/refund/refund.component.html","webpack:///src/app/clerk/refund-process/refund/refund.component.ts"],"names":["routes","path","component","RefundComponent","RefundProcessRoutingModule","RouterModule","RefundProcessModule","RefundProcessService","NgxSpinnerModule","MatCardModule","MatRadioModule","NgxDatatableModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatDatepickerModule","MatCheckboxModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","MatAutocompleteModule","http","client","post","environment","pipe","map","res","studentdt","autocompleteObjectValidator","control","value","cdRef","fb","languageService","toastrService","refundProcessService","router","route","columns","name","nric_number","FormControl","validators","passport_number","validation_msgs","type","message","getNRICNumberToApplyLicense","getPassportNumberToApplyLicense","languageChanged","subscribe","translateVal","localStorage","lang","getNRICNumberToApplyRefund","sessionStorage","nricNumberData","nricNumberList","valueChanges","startWith","_filterNricNumber","slice","getPassportNumberToApplyRefund","passportNumberData","passportNumberList","_filterPassportNumber","user","filterValue","toLowerCase","filter","option","includes","event","console","log","id","setValue","getRefundDetailsForStudents","data","selectedNricNumber","selectedPassportNumber"],"mappings":"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","file":"src_app_clerk_refund-process_refund-process_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RefundComponent } from './refund/refund.component'; \r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'refund-process',\r\n    component: RefundComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RefundProcessRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { RefundProcessService } from './refund-process.service'; \r\nimport { RefundProcessRoutingModule } from './refund-process-routing.module';\nimport { RefundComponent } from './refund/refund.component'; \r\n\r\n@NgModule({\r\n  declarations: [\r\n  \n    RefundComponent\n  ],\r\n  imports: [\r\n    NgxSpinnerModule,MatCardModule,MatRadioModule,\r\n    NgxDatatableModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ,TranslateModule,\r\n    MatAutocompleteModule,RefundProcessRoutingModule\r\n  ],\r\n  providers: [RefundProcessService],\r\n})\r\nexport class RefundProcessModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RefundProcessService {\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n\r\n  getNRICNumberToApplyRefund(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getNRICNumberToApplyRefund`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPassportNumberToApplyRefund(client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getPassportNumberToApplyRefund`,{client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getRefundDetailsForStudents(studentdt,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/webRoutes/getRefundDetailsForStudents`,{studentdt,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <h2>{{'REFUND-PROCESS.TITLE'| translate}}</h2>\n                        \n                    </div>\n                    <div class=\"body\">\n                        <form class=\"m-4\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>{{'REFUND-PROCESS.LIST.NRIC-NUMBER' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"nric_number\" [matAutocomplete]=\"autoNric\" >\n                                        <mat-autocomplete #autoNric=\"matAutocomplete\" [displayWith]=\"displayFnNRICNUmber\" (optionSelected)=\"selectedNricNumber($event)\">\n                                        <mat-option *ngFor=\"let option of nricNumberList | async\" [value]=\"option\">\n                                            {{option.nric_number}}\n                                        </mat-option>\n                                        </mat-autocomplete>\n                                        <mat-error *ngFor=\"let validation of validation_msgs.nric_number\">\n                                            <div *ngIf=\"nric_number.hasError(validation.type)\">\n                                              {{validation.message}}\n                                            </div>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>{{'REFUND-PROCESS.LIST.PASSPORT-NUMBER' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"passport_number\" [matAutocomplete]=\"autoPassport\">\n                                        <mat-autocomplete #autoPassport=\"matAutocomplete\" [displayWith]=\"displayFnPassportNumber\" (optionSelected)=\"selectedPassportNumber($event)\">\n                                        <mat-option *ngFor=\"let option of passportNumberList | async\" [value]=\"option\">\n                                            {{option.passport_number}}\n                                        </mat-option>\n                                        </mat-autocomplete>\n                                        <mat-error *ngFor=\"let validation of validation_msgs.passport_number\">\n                                            <div *ngIf=\"passport_number.hasError(validation.type)\">\n                                              {{validation.message}}\n                                            </div>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </form>\n                        <div class=\"row\" *ngIf=\"data\">\n                            <div class=\"col-md-12\">\n                                  <div class=\"mt-5\">\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                      <div class=\"card\">\n                                        <div class=\"body\">\n                                          <div class=\"table-responsive\">\n                                            <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                                            [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                                            <!-- user image -->\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.STUDENT-NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.TRAN-NO' | translate}}\" prop=\"registration_no\" [width]=\"130\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PACKAGE' | translate}}\" prop=\"package_english\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PACKAGE-TYPE' | translate}}\" prop=\"english\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PACKAGE-AMOUNT' | translate}}\" prop=\"final_package_price\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.PAYMENT-STATUS' | translate}}\" prop=\"payment_status\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.AMOUNT-PAID' | translate}}\" prop=\"amountPaid\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.STATUS' | translate}}\" prop=\"status\" [width]=\"200\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"{{'REFUND-PROCESS.LIST.REFUND-AMOUNT' | translate}}\" prop=\"refund_amount\" [width]=\"200\"></ngx-datatable-column>\n\n                                        </ngx-datatable>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                            </div>\n                          </div>\n                        <div class=\"row\" *ngIf=\"data\" style=\"text-align: center;\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <button mat-raised-button  color=\"primary\">{{'BUTTON.CONFIRM-BTN' | translate}}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n ","import { Component, OnInit,ViewChild,ChangeDetectorRef } from '@angular/core';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Observable,map, startWith,debounceTime,switchMap,of } from 'rxjs';\nimport { LanguageService } from '../../../core/service/language.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {RefundProcessService} from '../refund-process.service'\nimport {Router,ActivatedRoute} from '@angular/router'\n\nfunction autocompleteObjectValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (typeof control.value === 'string') {\n      return { 'invalidAutocompleteObject': { value: control.value } }\n    }\n    return null  /* valid option selected */\n  }\n}\n\n\n@Component({\n  selector: 'app-refund',\n  templateUrl: './refund.component.html',\n  styleUrls: ['./refund.component.sass']\n})\nexport class RefundComponent implements OnInit {\n\n  selectProfileForm:FormGroup;\n\n  nricNumberData:any;\n  passportNumberData:any;\n  translateVal;\n  data:any;\n\n  columns = [\n    { name: 'Student Name' },\n    { name: 'Transaction Number' },\n    { name: 'Package' },\n    {name: 'Package Type'},\n    {name: 'Package Amount'},\n    {name: 'Payment Status'},\n    {name: 'Amount Paid'},\n    {name: 'Status'},\n    {name: 'Refund Amount'},\n  ]; \n\n  constructor(private cdRef:ChangeDetectorRef,private fb: FormBuilder,\n    private languageService:LanguageService,private toastrService: ToastrService,private refundProcessService:RefundProcessService,\n    private router: Router,private route: ActivatedRoute,) {\n     \n    }\n\n  nric_number= new FormControl('', { validators: [autocompleteObjectValidator()] });\n  passport_number= new FormControl('', { validators: [autocompleteObjectValidator()] });\n\n\n  nricNumberList: Observable<string[]>;\n  passportNumberList: Observable<string[]>;\n\n\n    public validation_msgs = {\n      'nric_number': [\n        { type: 'invalidAutocompleteObject', message: 'NRIC Number not recognized. Click one of the options.' }\n      ],\n      'passport_number': [\n        { type: 'invalidAutocompleteObject', message: 'Passport Number not recognized. Click one of the options.' }\n      ]\n    }\n\n  ngOnInit(): void {\n\n    this.getNRICNumberToApplyLicense();\n    this.getPassportNumberToApplyLicense();\n    \n    this.languageService.languageChanged.subscribe(value => {\n      this.translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n    });\n\n  }\n\n  getNRICNumberToApplyLicense(){\n    this.refundProcessService.getNRICNumberToApplyRefund(sessionStorage.client)\n      .subscribe(res=>{\n        this.nricNumberData=res;\n        this.nricNumberList = this.nric_number.valueChanges.pipe(\n          startWith(''),\n          map(value => (typeof value === 'string' ? value : value.nric_number)),\n          map(name => (name ? this._filterNricNumber(name) : this.nricNumberData.slice())),\n        );\n      })\n  }\n\n  getPassportNumberToApplyLicense(){\n    this.refundProcessService.getPassportNumberToApplyRefund(sessionStorage.client)\n      .subscribe(res=>{\n        this.passportNumberData=res;\n        this.passportNumberList = this.passport_number.valueChanges.pipe(\n          startWith(''),\n          map(value => (typeof value === 'string' ? value : value.passport_number)),\n          map(name => (name ? this._filterPassportNumber(name) : this.passportNumberData.slice())),\n        );\n      })\n  }\n\n  displayFnNRICNUmber(user): string {\n    return user && user.nric_number ? user.nric_number : '';\n  }\n\n  displayFnPassportNumber(user): string {\n    return user && user.passport_number ? user.passport_number : '';\n  }\n\n  private _filterNricNumber(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.nricNumberData.filter(option => option.nric_number.toLowerCase().includes(filterValue));\n  }\n\n  private _filterPassportNumber(name: string): [] {\n    const filterValue = name.toLowerCase();\n    return this.passportNumberData.filter(option => option.passport_number.toLowerCase().includes(filterValue));\n  }\n\n  selectedNricNumber(event){\n    console.log(\"event.option.value.id===\",event.option.value.id);\n    if(event.option.value.id){\n      this.passport_number.setValue('');\n      this.refundProcessService.getRefundDetailsForStudents(event.option.value.id,sessionStorage.client)\n      .subscribe((res)=>{\n          console.log(\"re----nric-----------\",res);\n          this.data=res;\n      })\n    }\n  }\n\n  selectedPassportNumber(event){\n    console.log(\"event.option.value.id===\",event.option.value.id);\n    if(event.option.value.id){\n      this.nric_number.setValue('');\n      this.refundProcessService.getRefundDetailsForStudents(event.option.value.id,sessionStorage.client)\n      .subscribe((res)=>{\n          console.log(\"re----nric-----------\",res); \n          this.data=res;\n      })\n    }\n  }\n\n\n\n}\n"]}