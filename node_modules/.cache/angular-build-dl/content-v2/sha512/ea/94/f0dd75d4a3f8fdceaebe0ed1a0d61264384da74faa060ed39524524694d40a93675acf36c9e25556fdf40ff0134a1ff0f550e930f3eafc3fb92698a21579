{"version":3,"sources":["./src/app/admin/reports/registration-report/registration-report.component.ts","./src/app/admin/reports/registration-report/registration-report.component.html","./src/app/admin/reports/reports-routing.module.ts","./src/app/admin/reports/reports.module.ts","./src/app/admin/reports/reports.service.ts","./src/app/admin/reports/revenue-report/revenue-report.component.ts","./src/app/admin/reports/revenue-report/revenue-report.component.html"],"names":[],"mappings":"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","file":"src_app_admin_reports_reports_module_ts-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ReportsService } from '../reports.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-registration-report',\n  templateUrl: './registration-report.component.html',\n  styleUrls: ['./registration-report.component.sass']\n})\nexport class RegistrationReportComponent implements OnInit {\n\n  regReportForm: FormGroup;\n\n  constructor(private reportService:ReportsService,private toastrService:ToastrService,private fb: FormBuilder,) {\n\n    this.regReportForm = this.fb.group({\n      from_date: [new Date()],\n      to_date: [new Date()],\n    });\n   }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n \n\n\n  columns = [\n    { name: 'Name' },\n    { name: 'NRIC Number' },\n    { name: 'Passport Number' },\n    {name: 'Gender'},\n    {name: 'Mobile'},\n    {name: 'Email'},\n    {name: 'Status'},\n  ]; \n  data=[];\n  filteredData = [];\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n\n  ngOnInit(): void {\n    this.getRegistrationReportForAdmin();\n  }\n\n  refresh() {\n    this.getRegistrationReportForAdmin();\n  }\n\n  getRegistrationReportForAdmin(){\n    console.log(\"this.regReportForm.value===\",this.regReportForm.value)\n      this.reportService.getRegistrationReportForAdmin(this.regReportForm.value,sessionStorage.client)\n      .subscribe((res)=>{\n        for(let i=0;i<res['data'].length;i++){\n          res['data'][i].nric_english = res['data'][i]['nric_'+this.translateVal];\n          res['data'][i].placebirth_english = res['data'][i]['placebirth_'+this.translateVal];\n          res['data'][i].race_english = res['data'][i]['race_'+this.translateVal];\n          res['data'][i].pref_english = res['data'][i]['pref_'+this.translateVal];\n          res['data'][i].english = res['data'][i][this.translateVal];\n        }\n        this.data=res['data'];\n        this.filteredData=res['data'];\n      })\n  }\n\n  getRegistrationReport(){\n    this.getRegistrationReportForAdmin();\n  }\n\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n  exportToExcel(){\n    if(this.filteredData.length > 0){\n      var options = { \n        fieldSeparator: ',',\n        quoteStrings: '\"',\n        decimalseparator: '.',\n        showLabels: true, \n        showTitle: true,\n        title: 'Registration Report - '+moment(new Date()).format('YYYY-MM-DD'),\n        useBom: true,\n        noDownload: false,\n        headers: [\"Student Name\",\"NRIC Type\",\"NRIC Number\", \"Passport Number\",\"Date Of Birth\",\"Gender\",\"Place Of Birth\",\"Nationality\",\"NRIC Address\",\"Address 1\",\"Address 2\",\"Postal Code\",\"City\",\"State\",\"Email Address\",\"Moile Number\",\"Race\",\"Other Race\",\"Prefered Language\",\"Emergency Contact Name\",\"Emergency Contact Number\",\"Username\",\"Password\",\"Status\"]\n      };\n      let fileName='Registration_Report_'+moment(new Date()).format('YYYY-MM-DD');\n      console.log(\"this.filteredData========\",this.filteredData,fileName);\n      const result = this.filteredData.map(({id,profile_img,nric_malay,placebirth_malay,race_malay,pref_malay,english,...rest}) => ({...rest}));\n      new ngxCsv(result, fileName, options);\n    }\n    \n  }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"block-header\">\n        <div class=\"row\">\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <ul class=\"breadcrumb breadcrumb-style \">\n              <li class=\"breadcrumb-item\">\n                <h4 class=\"page-title\">{{'REGISTRATION-REPORT.TITLE' | translate}}</h4>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n              <div class=\"mt-5\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div class=\"card\">\n                    <div class=\"body\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <form  [formGroup]=\"regReportForm\">\n                            <div class=\"row\">\n                              <div class=\"col-4\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                      <mat-label>{{'REGISTRATION-REPORT.LIST.FROMDATE' | translate}}*</mat-label>\n                                      <input matInput [matDatepicker]=\"picker\" formControlName=\"from_date\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      <mat-datepicker #picker></mat-datepicker>\n                                      <mat-error *ngIf=\"regReportForm.get('from_date').hasError('required')\">\n                                              {{'REGISTRATION-REPORT.LIST.FROMDATE' | translate}} is required \n                                      </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-4\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                      <mat-label>{{'REGISTRATION-REPORT.LIST.TODATE' | translate}}*</mat-label>\n                                      <input matInput [matDatepicker]=\"topicker\" formControlName=\"to_date\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      <mat-datepicker #topicker></mat-datepicker>\n                                      <mat-error *ngIf=\"regReportForm.get('to_date').hasError('required')\">\n                                              {{'REGISTRATION-REPORT.LIST.TODATE' | translate}} is required \n                                      </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-2\" style=\"padding: 10px;\">\n                                  <button mat-raised-button  color=\"primary\" (click)=\"getRegistrationReport()\">{{'BUTTON.SEARCH-BTN' | translate}}</button>\n                                </div>\n                                <div class=\"col-1\" style=\"padding: 10px;\">\n                                  <button mat-raised-button (click)=\"exportToExcel()\" class=\"btn btn-success\">{{'BUTTON.EXCEL-BTN' | translate}}\n                                    <i class=\"fas fa-file-excel\"></i>\n                                  </button>                                \n                                </div>\n                                <div class=\"col-1\">\n                                  <ul class=\"header-buttons\">\n                                    <li>\n                                      <div class=\"icon-button-demo\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                          <mat-icon class=\"col-white\">refresh\n                                          </mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                            </div>\n                        </form>\n                        </div>\n                        <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                        <ngx-datatable-column name=\"Image\" sortable=\"false\" prop=\"profile_img\" [width]=\"100\">\n                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                            <td class=\"table-img padding-0\">\n                            <img width=\"40\" src=\"{{ value ? value : 'assets/images/nologo.png' }}\" />\n                            </td>\n                        </ng-template>\n                        </ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.NRIC' | translate}}\" prop=\"nric_number\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.PASSPORT' | translate}}\" prop=\"passport_number\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.MOBILENO' | translate}}\" prop=\"mobile_number\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.EMAIL' | translate}}\" prop=\"email_id\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.LIST.STATUS' | translate}}\" prop=\"status\" [width]=\"200\"></ngx-datatable-column>\n\n                        <!-- action buttons -->\n                        <!-- <ngx-datatable-column name=\"{{'STUDENT-REGISTRATION.ACTIONS' | translate}}\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='viewStudent(row, rowIndex)'>\n                                <mat-icon aria-label=\"View\" class=\"col-white\">visibility\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editStudent(row, rowIndex)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteStudent(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column> -->\n                    </ngx-datatable>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RevenueReportComponent } from './revenue-report/revenue-report.component';\r\nimport { RegistrationReportComponent } from './registration-report/registration-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'revenue-report',\r\n    component: RevenueReportComponent\r\n  },\r\n  {\r\n    path: 'registration-report',\r\n    component: RegistrationReportComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport {ReportsService} from './reports.service';\r\nimport {ReportsRoutingModule} from './reports-routing.module';\r\nimport { RevenueReportComponent } from './revenue-report/revenue-report.component';\r\nimport { RegistrationReportComponent } from './registration-report/registration-report.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  \r\n    RevenueReportComponent,\r\n       RegistrationReportComponent\r\n  ],\r\n  imports: [\r\n    NgxSpinnerModule,MatCardModule,MatRadioModule,\r\n    NgxDatatableModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,  \r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ,TranslateModule,\r\n    MatAutocompleteModule,ReportsRoutingModule\r\n  ],\r\n  providers: [ReportsService],\r\n})\r\nexport class ReportsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ReportsService {\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n\r\n  \r\n\r\n  getRegistrationReportForAdmin(dateObj,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/report/getRegistrationReportForAdmin`,{dateObj,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getRevenueReportForAdmin(dateObj,client){\r\n    return this.http\r\n    .post<any>(`${environment.apiUrl}/report/getRevenueReportForAdmin`,{dateObj,client})\r\n    .pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ReportsService } from '../reports.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {  FormBuilder, FormGroup, Validators,FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-revenue-report',\n  templateUrl: './revenue-report.component.html',\n  styleUrls: ['./revenue-report.component.sass']\n})\nexport class RevenueReportComponent implements OnInit {\n\n  regReportForm: FormGroup;\n\n  constructor(private reportService:ReportsService,private toastrService:ToastrService,private fb: FormBuilder,) {\n\n    this.regReportForm = this.fb.group({\n      from_date: [new Date()],\n      to_date: [new Date()],\n    });\n   }\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  columns = [\n    { name: 'Student Name' },\n    { name: 'Transaction Number' },\n    { name: 'Package' },\n    {name: 'Package Type'},\n    {name: 'Package Amount'},\n    {name: 'Payment Status'},\n    {name: 'Amount Paid'},\n    {name: 'Status'},\n  ]; \n  data=[];\n  filteredData = [];\n  translateVal=(localStorage.lang == 'ml' ? 'malay' : 'english');\n\n  ngOnInit(): void {\n    this.getRevenueReportForAdmin();\n  }\n\n  refresh() {\n    this.getRevenueReportForAdmin();\n  }\n\n  getRevenueReportForAdmin(){\n    console.log(\"this.regReportForm.value===\",this.regReportForm.value)\n      this.reportService.getRevenueReportForAdmin(this.regReportForm.value,sessionStorage.client)\n      .subscribe((res)=>{\n        for(let i=0;i<res['data'].length;i++){\n          res['data'][i].package_english = res['data'][i]['package_'+this.translateVal];\n          res['data'][i].english = res['data'][i][this.translateVal];\n        }\n        this.data=res['data'];\n        this.filteredData=res['data'];\n      })\n  }\n\n  getRevenueReport(){\n    this.getRevenueReportForAdmin();\n  }\n\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n\n  exportToExcel(){\n    if(this.filteredData.length > 0){\n      var options = { \n        fieldSeparator: ',',\n        quoteStrings: '\"',\n        decimalseparator: '.',\n        showLabels: true, \n        showTitle: true,\n        title: 'Revenue Report - '+moment(new Date()).format('YYYY-MM-DD'),\n        useBom: true,\n        noDownload: false,\n        headers: [\"Student Name\", \"Transaction No\", \"Package\",\"Payment Phase\",\"Package Amount\",\"Payment Status\",\"Amount Paid\",\"Status\"]\n      };\n      let fileName='Revenue_Report_'+moment(new Date()).format('YYYY-MM-DD');\n      console.log(\"this.filteredData========\",this.filteredData,fileName);\n      const result = this.filteredData.map(({id,malay,package_malay,...rest}) => ({...rest}));\n      console.log(\"result======\",result)\n      new ngxCsv(result, fileName, options);\n    }\n\n  }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"block-header\">\n        <div class=\"row\">\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <ul class=\"breadcrumb breadcrumb-style \">\n              <li class=\"breadcrumb-item\">\n                <h4 class=\"page-title\">{{'REVENUE-REPORT.TITLE' | translate}}</h4>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n              <div class=\"mt-5\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div class=\"card\">\n                    <div class=\"body\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <form  [formGroup]=\"regReportForm\">\n                            <div class=\"row\">\n                              <div class=\"col-4\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                      <mat-label>{{'REVENUE-REPORT.LIST.FROMDATE' | translate}}*</mat-label>\n                                      <input matInput [matDatepicker]=\"picker\" formControlName=\"from_date\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      <mat-datepicker #picker></mat-datepicker>\n                                      <mat-error *ngIf=\"regReportForm.get('from_date').hasError('required')\">\n                                              {{'REVENUE-REPORT.LIST.FROMDATE' | translate}} is required \n                                      </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-4\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                      <mat-label>{{'REVENUE-REPORT.LIST.TODATE' | translate}}*</mat-label>\n                                      <input matInput [matDatepicker]=\"topicker\" formControlName=\"to_date\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      <mat-datepicker #topicker></mat-datepicker>\n                                      <mat-error *ngIf=\"regReportForm.get('to_date').hasError('required')\">\n                                              {{'REVENUE-REPORT.LIST.TODATE' | translate}} is required \n                                      </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-2\" style=\"padding: 10px;\">\n                                  <button mat-raised-button  color=\"primary\" (click)=\"getRevenueReport()\">{{'BUTTON.SEARCH-BTN' | translate}}</button>\n                                </div>\n                                <div class=\"col-1\" style=\"padding: 10px;\">\n                                  <button mat-raised-button (click)=\"exportToExcel()\" class=\"btn btn-success\">{{'BUTTON.EXCEL-BTN' | translate}}\n                                    <i class=\"fas fa-file-excel\"></i>\n                                  </button>                                \n                                </div>\n                                <div class=\"col-1\">\n                                  <ul class=\"header-buttons\">\n                                    <li>\n                                      <div class=\"icon-button-demo\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                          <mat-icon class=\"col-white\">refresh\n                                          </mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                            </div>\n                        </form>\n                        </div>\n                        <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\" [sortType]=\"'multi'\"\n                        [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n                        <!-- user image -->\n                       \n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.STUDENT-NAME' | translate}}\" prop=\"name\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.TRAN-NO' | translate}}\" prop=\"registration_no\" [width]=\"130\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.PACKAGE' | translate}}\" prop=\"package_english\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.PACKAGE-TYPE' | translate}}\" prop=\"english\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.PACKAGE-AMOUNT' | translate}}\" prop=\"final_package_price\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.PAYMENT-STATUS' | translate}}\" prop=\"payment_status\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.AMOUNT-PAID' | translate}}\" prop=\"amountPaid\" [width]=\"200\"></ngx-datatable-column>\n                        <ngx-datatable-column name=\"{{'REVENUE-REPORT.LIST.STATUS' | translate}}\" prop=\"status\" [width]=\"200\"></ngx-datatable-column>\n\n                        <!-- action buttons -->\n                        <!-- <ngx-datatable-column name=\"{{'REVENUE-REPORT.ACTIONS' | translate}}\" sortable=\"false\" [width]=\"120\">\n                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                            <span>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='viewStudent(row, rowIndex)'>\n                                <mat-icon aria-label=\"View\" class=\"col-white\">visibility\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)='editStudent(row, rowIndex)'>\n                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\n                                </mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)='deleteStudent(row,rowIndex, deleteRecord)'>\n                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\n                                </mat-icon>\n                            </button>\n                            </span>\n                        </ng-template>\n                        </ngx-datatable-column> -->\n                    </ngx-datatable>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n        </div>\n      </div>\n    </div>\n  </section>\n"],"sourceRoot":"webpack:///"}