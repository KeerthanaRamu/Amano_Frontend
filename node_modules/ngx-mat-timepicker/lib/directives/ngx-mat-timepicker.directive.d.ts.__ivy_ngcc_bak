import { ElementRef, OnChanges, OnDestroy, SimpleChanges } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { NgxMatTimepickerComponent } from "../components/ngx-mat-timepicker/ngx-mat-timepicker.component";
import { DateTime } from "ts-luxon";
import { CdkOverlayOrigin } from "@angular/cdk/overlay";
import { MatFormField } from "@angular/material/form-field";
export declare class NgxMatTimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {
    private _elementRef;
    private _matFormField;
    private _locale;
    get element(): HTMLElement;
    get format(): number;
    set format(value: number);
    get max(): string | DateTime;
    set max(value: string | DateTime);
    get min(): string | DateTime;
    set min(value: string | DateTime);
    set timepicker(picker: NgxMatTimepickerComponent);
    get value(): string;
    set value(value: string);
    private set _defaultTime(value);
    cdkOverlayOrigin: CdkOverlayOrigin;
    disableClick: boolean;
    disabled: boolean;
    private _format;
    private _max;
    private _min;
    private _previousFormat;
    private _subsCtrl$;
    private _timepicker;
    private _value;
    constructor(_elementRef: ElementRef, _matFormField: MatFormField, _locale: string);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onClick(event: any): void;
    onTouched: () => void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    updateValue(value: string): void;
    writeValue(value: string): void;
    private _onChange;
    private _registerTimepicker;
    private _unregisterTimepicker;
    private _updateInputValue;
}
