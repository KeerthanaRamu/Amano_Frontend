import { EventEmitter, OnChanges, SimpleChanges, TemplateRef } from "@angular/core";
import { ThemePalette } from "@angular/material/core";
import { NgxMatTimepickerPeriods } from "../../models/ngx-mat-timepicker-periods.enum";
import { NgxMatTimepickerUnits } from "../../models/ngx-mat-timepicker-units.enum";
import { NgxMatTimepickerClockFace } from "../../models/ngx-mat-timepicker-clock-face.interface";
import { DateTime } from "ts-luxon";
import * as ɵngcc0 from '@angular/core';
export declare class NgxMatTimepickerDialComponent implements OnChanges {
    private _locale;
    activeTimeUnit: NgxMatTimepickerUnits;
    set color(newValue: ThemePalette);
    get color(): ThemePalette;
    editableHintTmpl: TemplateRef<Node>;
    format: number;
    hour: number | string;
    hourChanged: EventEmitter<NgxMatTimepickerClockFace>;
    hours: NgxMatTimepickerClockFace[];
    hoursOnly: boolean;
    isEditable: boolean;
    isHintVisible: boolean;
    maxTime: DateTime;
    meridiems: string[];
    minTime: DateTime;
    minute: number | string;
    minuteChanged: EventEmitter<NgxMatTimepickerClockFace>;
    minutes: NgxMatTimepickerClockFace[];
    minutesGap: number;
    period: NgxMatTimepickerPeriods;
    periodChanged: EventEmitter<NgxMatTimepickerPeriods>;
    timeUnit: typeof NgxMatTimepickerUnits;
    timeUnitChanged: EventEmitter<NgxMatTimepickerUnits>;
    private _color;
    constructor(_locale: string);
    changeHour(hour: NgxMatTimepickerClockFace): void;
    changeMinute(minute: NgxMatTimepickerClockFace): void;
    changePeriod(period: NgxMatTimepickerPeriods): void;
    changeTimeUnit(unit: NgxMatTimepickerUnits): void;
    hideHint(): void;
    ngOnChanges(changes: SimpleChanges): void;
    showHint(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxMatTimepickerDialComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgxMatTimepickerDialComponent, "ngx-mat-timepicker-dial", never, { "color": "color"; "activeTimeUnit": "activeTimeUnit"; "editableHintTmpl": "editableHintTmpl"; "format": "format"; "hour": "hour"; "hoursOnly": "hoursOnly"; "isEditable": "isEditable"; "maxTime": "maxTime"; "minTime": "minTime"; "minute": "minute"; "minutesGap": "minutesGap"; "period": "period"; }, { "hourChanged": "hourChanged"; "minuteChanged": "minuteChanged"; "periodChanged": "periodChanged"; "timeUnitChanged": "timeUnitChanged"; }, never, never>;
}

//# sourceMappingURL=ngx-mat-timepicker-dial.component.d.ts.map