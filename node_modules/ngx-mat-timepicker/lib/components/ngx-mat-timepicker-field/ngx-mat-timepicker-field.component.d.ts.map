{"version":3,"file":"ngx-mat-timepicker-field.component.d.ts","sources":["ngx-mat-timepicker-field.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit, TemplateRef } from \"@angular/core\";\r\nimport { ControlValueAccessor } from \"@angular/forms\";\r\nimport { MatSelectChange } from \"@angular/material/select\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\nimport { FloatLabelType } from \"@angular/material/form-field\";\r\nimport { NgxMatTimepickerService } from \"../../services/ngx-mat-timepicker.service\";\r\nimport { NgxMatTimepickerClockFace } from \"../../models/ngx-mat-timepicker-clock-face.interface\";\r\nimport { NgxMatTimepickerPeriods } from \"../../models/ngx-mat-timepicker-periods.enum\";\r\nimport { NgxMatTimepickerUnits } from \"../../models/ngx-mat-timepicker-units.enum\";\r\nimport { NgxMatTimepickerTheme } from \"../../models/ngx-mat-timepicker-theme.interface\";\r\nimport { DateTime } from \"ts-luxon\";\r\nimport { Observable } from \"rxjs\";\r\nexport declare class NgxMatTimepickerFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n    private _timepickerService;\r\n    private _locale;\r\n    get color(): ThemePalette;\r\n    set color(newValue: ThemePalette);\r\n    get defaultTime(): string;\r\n    set defaultTime(val: string);\r\n    get floatLabel(): FloatLabelType;\r\n    set floatLabel(newValue: FloatLabelType);\r\n    get format(): number;\r\n    set format(value: number);\r\n    get max(): string | DateTime;\r\n    set max(value: string | DateTime);\r\n    get min(): string | DateTime;\r\n    set min(value: string | DateTime);\r\n    cancelBtnTmpl: TemplateRef<Node>;\r\n    clockTheme: NgxMatTimepickerTheme;\r\n    confirmBtnTmpl: TemplateRef<Node>;\r\n    controlOnly: boolean;\r\n    disabled: boolean;\r\n    hour$: Observable<NgxMatTimepickerClockFace>;\r\n    hoursList: NgxMatTimepickerClockFace[];\r\n    isChangePeriodDisabled: boolean;\r\n    isTimeRangeSet: boolean;\r\n    maxHour: number;\r\n    minHour: number;\r\n    minute$: Observable<NgxMatTimepickerClockFace>;\r\n    minutesList: NgxMatTimepickerClockFace[];\r\n    period: NgxMatTimepickerPeriods;\r\n    periods: NgxMatTimepickerPeriods[];\r\n    timeChanged: EventEmitter<string>;\r\n    timepickerTime: string;\r\n    timeUnit: typeof NgxMatTimepickerUnits;\r\n    toggleIcon: TemplateRef<HTMLObjectElement>;\r\n    private _color;\r\n    private _defaultTime;\r\n    private _floatLabel;\r\n    private _format;\r\n    private _isDefaultTime;\r\n    private _isFirstTimeChange;\r\n    private _max;\r\n    private _min;\r\n    private _previousFormat;\r\n    private _selectedHour;\r\n    private _subsCtrl$;\r\n    constructor(_timepickerService: NgxMatTimepickerService, _locale: string);\r\n    changeHour(hour: number): void;\r\n    changeMinute(minute: number): void;\r\n    changePeriod(event: MatSelectChange): void;\r\n    ngOnDestroy(): void;\r\n    ngOnInit(): void;\r\n    onTimeSet(time: string): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(_fn_: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    writeValue(val: string): void;\r\n    private _changeDefaultTimeValue;\r\n    private _changeTime;\r\n    private _emitLocalTimeChange;\r\n    private _initTime;\r\n    private _isPeriodDisabled;\r\n    private _onChange;\r\n    private _resetTime;\r\n    private _updateAvailableHours;\r\n    private _updateAvailableMinutes;\r\n    private _updateAvailableTime;\r\n    private _updateTime;\r\n}\r\n"]}