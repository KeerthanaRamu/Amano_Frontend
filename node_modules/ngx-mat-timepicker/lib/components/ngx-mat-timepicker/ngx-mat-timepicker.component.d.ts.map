{"version":3,"file":"ngx-mat-timepicker.component.d.ts","sources":["ngx-mat-timepicker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\nimport { CdkOverlayOrigin, ConnectedPosition, Overlay } from \"@angular/cdk/overlay\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\nimport { SmpDomService } from \"smp-core-utils\";\r\nimport { NgxMatTimepickerEventService } from \"../../services/ngx-mat-timepicker-event.service\";\r\nimport { NgxMatTimepickerDirective } from \"../../directives/ngx-mat-timepicker.directive\";\r\nimport { NgxMatTimepickerRef } from \"../../models/ngx-mat-timepicker-ref.interface\";\r\nimport { NgxMatTimepickerTheme } from \"../../models/ngx-mat-timepicker-theme.interface\";\r\nimport { DateTime } from \"ts-luxon\";\r\nimport { Subject } from \"rxjs\";\r\nexport declare class NgxMatTimepickerComponent implements NgxMatTimepickerRef {\r\n    private _vcr;\r\n    private _eventService;\r\n    private _dialog;\r\n    private _overlay;\r\n    private _domService;\r\n    static nextId: number;\r\n    set color(newValue: ThemePalette);\r\n    get color(): ThemePalette;\r\n    get disabled(): boolean;\r\n    get format(): number;\r\n    set format(value: number);\r\n    get inputElement(): HTMLElement;\r\n    get maxTime(): DateTime;\r\n    get minTime(): DateTime;\r\n    get minutesGap(): number;\r\n    set minutesGap(gap: number);\r\n    get overlayOrigin(): CdkOverlayOrigin;\r\n    get time(): string;\r\n    set ngxMatTimepickerTheme(newValue: NgxMatTimepickerTheme);\r\n    appendToInput: boolean;\r\n    cancelBtnTmpl: TemplateRef<Node>;\r\n    closed: EventEmitter<void>;\r\n    confirmBtnTmpl: TemplateRef<Node>;\r\n    defaultTime: string;\r\n    disableAnimation: boolean;\r\n    editableHintTmpl: TemplateRef<Node>;\r\n    enableKeyboardInput: boolean;\r\n    hourSelected: EventEmitter<number>;\r\n    hoursOnly: boolean;\r\n    id: string;\r\n    isEsc: boolean;\r\n    max: DateTime;\r\n    min: DateTime;\r\n    opened: EventEmitter<void>;\r\n    overlayPositions: ConnectedPosition[];\r\n    preventOverlayClick: boolean;\r\n    showPicker: boolean;\r\n    theme: NgxMatTimepickerTheme;\r\n    timeChanged: EventEmitter<string>;\r\n    timepickerClass: string;\r\n    timeSet: EventEmitter<string>;\r\n    timeUpdated: Subject<string>;\r\n    private _color;\r\n    private _dialogRef;\r\n    private _format;\r\n    private _minutesGap;\r\n    private _ngxMatTimepickerTheme;\r\n    private _overlayRef;\r\n    private _timepickerInput;\r\n    constructor(_vcr: ViewContainerRef, _eventService: NgxMatTimepickerEventService, _dialog: MatDialog, _overlay: Overlay, _domService: SmpDomService);\r\n    close(): void;\r\n    open(): void;\r\n    /***\r\n     * Register an input with this timepicker.\r\n     * input - The timepicker input to register with this timepicker\r\n     */\r\n    registerInput(input: NgxMatTimepickerDirective): void;\r\n    unregisterInput(): void;\r\n    updateTime(time: string): void;\r\n}\r\n"]}