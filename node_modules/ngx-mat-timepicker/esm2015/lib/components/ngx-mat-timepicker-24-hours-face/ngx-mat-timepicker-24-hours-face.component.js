/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/ngx-mat-timepicker-24-hours-face/ngx-mat-timepicker-24-hours-face.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component } from "@angular/core";
//
import { NgxMatTimepickerHoursFaceDirective } from "../ngx-mat-timepicker-hours-face/ngx-mat-timepicker-hours-face.directive";
import { NgxMatTimepickerUtils } from "../../utils/ngx-mat-timepicker.utils";
export class NgxMatTimepicker24HoursFaceComponent extends NgxMatTimepickerHoursFaceDirective {
    constructor() {
        super();
        this.format = 24;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.hoursList = NgxMatTimepickerUtils.disableHours(this.hoursList, {
            min: this.minTime,
            max: this.maxTime,
            format: this.format
        });
    }
}
NgxMatTimepicker24HoursFaceComponent.decorators = [
    { type: Component, args: [{
                selector: "ngx-mat-timepicker-24-hours-face",
                template: "<ngx-mat-timepicker-face [color]=\"color\"\n                     [selectedTime]=\"selectedHour\"\n                     [faceTime]=\"hoursList\"\n                     [format]=\"format\"\n                     (timeChange)=\"hourChange.next($event)\"\n                     (timeSelected)=\"onTimeSelected($event)\"></ngx-mat-timepicker-face>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
NgxMatTimepicker24HoursFaceComponent.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC10aW1lcGlja2VyLTI0LWhvdXJzLWZhY2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW1hdC10aW1lcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbmd4LW1hdC10aW1lcGlja2VyLTI0LWhvdXJzLWZhY2Uvbmd4LW1hdC10aW1lcGlja2VyLTI0LWhvdXJzLWZhY2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFtQix1QkFBdUIsRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7O0FBRW5GLE9BQU8sRUFBQyxrQ0FBa0MsRUFBQyxNQUFNLDBFQUEwRSxDQUFDO0FBQzVILE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBUTNFLE1BQU0sT0FBTyxvQ0FBcUMsU0FBUSxrQ0FBa0M7SUFFeEY7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hFLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTztZQUNqQixHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU87WUFDakIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3RCLENBQUMsQ0FBQztJQUNQLENBQUM7OztZQW5CSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGtDQUFrQztnQkFDNUMsaVdBQThEO2dCQUM5RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNsRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJDb250ZW50SW5pdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbi8vXG5pbXBvcnQge05neE1hdFRpbWVwaWNrZXJIb3Vyc0ZhY2VEaXJlY3RpdmV9IGZyb20gXCIuLi9uZ3gtbWF0LXRpbWVwaWNrZXItaG91cnMtZmFjZS9uZ3gtbWF0LXRpbWVwaWNrZXItaG91cnMtZmFjZS5kaXJlY3RpdmVcIjtcbmltcG9ydCB7Tmd4TWF0VGltZXBpY2tlclV0aWxzfSBmcm9tIFwiLi4vLi4vdXRpbHMvbmd4LW1hdC10aW1lcGlja2VyLnV0aWxzXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcIm5neC1tYXQtdGltZXBpY2tlci0yNC1ob3Vycy1mYWNlXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwibmd4LW1hdC10aW1lcGlja2VyLTI0LWhvdXJzLWZhY2UuY29tcG9uZW50Lmh0bWxcIixcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcblxuZXhwb3J0IGNsYXNzIE5neE1hdFRpbWVwaWNrZXIyNEhvdXJzRmFjZUNvbXBvbmVudCBleHRlbmRzIE5neE1hdFRpbWVwaWNrZXJIb3Vyc0ZhY2VEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmZvcm1hdCA9IDI0O1xuICAgIH1cblxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAgICAgdGhpcy5ob3Vyc0xpc3QgPSBOZ3hNYXRUaW1lcGlja2VyVXRpbHMuZGlzYWJsZUhvdXJzKHRoaXMuaG91cnNMaXN0LCB7XG4gICAgICAgICAgICBtaW46IHRoaXMubWluVGltZSxcbiAgICAgICAgICAgIG1heDogdGhpcy5tYXhUaW1lLFxuICAgICAgICAgICAgZm9ybWF0OiB0aGlzLmZvcm1hdFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=