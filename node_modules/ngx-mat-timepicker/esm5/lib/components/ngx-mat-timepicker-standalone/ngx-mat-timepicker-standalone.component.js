/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/ngx-mat-timepicker-standalone/ngx-mat-timepicker-standalone.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
import { Component, Inject, ViewEncapsulation } from "@angular/core";
//
import { NgxMatTimepickerService } from "../../services/ngx-mat-timepicker.service";
import { NgxMatTimepickerEventService } from "../../services/ngx-mat-timepicker-event.service";
import { NgxMatTimepickerBaseDirective } from "../../directives/ngx-mat-timepicker-base.directive";
import { NGX_MAT_TIMEPICKER_LOCALE } from "../../tokens/ngx-mat-timepicker-time-locale.token";
import { NGX_MAT_TIMEPICKER_CONFIG } from "../../tokens/ngx-mat-timepicker-config.token";
var NgxMatTimepickerStandaloneComponent = /** @class */ (function (_super) {
    __extends(NgxMatTimepickerStandaloneComponent, _super);
    function NgxMatTimepickerStandaloneComponent(data, timepickerSrv, eventSrv, locale) {
        var _this = _super.call(this, timepickerSrv, eventSrv, locale, data) || this;
        _this.data = data;
        return _this;
    }
    /**
     * @return {?}
     */
    NgxMatTimepickerStandaloneComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.data.timepickerBaseRef.close();
    };
    NgxMatTimepickerStandaloneComponent.decorators = [
        { type: Component, args: [{
                    selector: "ngx-mat-timepicker-standalone",
                    template: "<ng-template #cancelBtnDefault>\n\t<button mat-button\n\t\t\t[color]=\"color\">CANCEL\n\t</button>\n</ng-template>\n<ng-template #confirmBtnDefault>\n\t<button mat-button\n\t\t\t[color]=\"color\">OK\n\t</button>\n</ng-template>\n<div cdkTrapFocus\n\t cdkTrapFocusAutoCapture>\n\t<ngx-mat-timepicker-content [appendToInput]=\"data.appendToInput\"\n\t\t\t\t\t\t\t\t[inputElement]=\"data.inputElement\"\n\t\t\t\t\t\t\t\t[ngxMatTimepickerTheme]=\"data.theme\">\n\t\t<div class=\"timepicker\"\n\t\t\t [ngClass]=\"data.timepickerClass\">\n\t\t\t<mat-toolbar [color]=\"color\"\n\t\t\t\t\t\t class=\"timepicker-header\">\n\t\t\t\t<ngx-mat-timepicker-dial [color]=\"color\"\n\t\t\t\t\t\t\t\t\t\t [format]=\"data.format\"\n\t\t\t\t\t\t\t\t\t\t [hour]=\"(selectedHour | async)?.time\"\n\t\t\t\t\t\t\t\t\t\t [minute]=\"(selectedMinute | async)?.time\"\n\t\t\t\t\t\t\t\t\t\t [period]=\"selectedPeriod | async\"\n\t\t\t\t\t\t\t\t\t\t [activeTimeUnit]=\"activeTimeUnit\"\n\t\t\t\t\t\t\t\t\t\t [minTime]=\"data.minTime\"\n\t\t\t\t\t\t\t\t\t\t [maxTime]=\"data.maxTime\"\n\t\t\t\t\t\t\t\t\t\t [isEditable]=\"data.enableKeyboardInput\"\n\t\t\t\t\t\t\t\t\t\t [editableHintTmpl]=\"data.editableHintTmpl\"\n\t\t\t\t\t\t\t\t\t\t [minutesGap]=\"data.minutesGap\"\n\t\t\t\t\t\t\t\t\t\t [hoursOnly]=\"data.hoursOnly\"\n\t\t\t\t\t\t\t\t\t\t (periodChanged)=\"changePeriod($event)\"\n\t\t\t\t\t\t\t\t\t\t (timeUnitChanged)=\"changeTimeUnit($event)\"\n\t\t\t\t\t\t\t\t\t\t (hourChanged)=\"onHourChange($event)\"\n\t\t\t\t\t\t\t\t\t\t (minuteChanged)=\"onMinuteChange($event)\">\n\t\t\t\t</ngx-mat-timepicker-dial>\n\t\t\t</mat-toolbar>\n\t\t\t<div class=\"timepicker__main-content\">\n\t\t\t\t<div class=\"timepicker__body\"\n\t\t\t\t\t [ngSwitch]=\"activeTimeUnit\">\n\t\t\t\t\t<div *ngSwitchCase=\"timeUnit.HOUR\">\n\t\t\t\t\t\t<ngx-mat-timepicker-24-hours-face *ngIf=\"data.format === 24;else ampmHours\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [color]=\"color\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  (hourChange)=\"onHourChange($event)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [selectedHour]=\"selectedHour | async\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [minTime]=\"data.minTime\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [maxTime]=\"data.maxTime\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [format]=\"data.format\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  (hourSelected)=\"onHourSelected($event)\"></ngx-mat-timepicker-24-hours-face>\n\t\t\t\t\t\t<ng-template #ampmHours>\n\t\t\t\t\t\t\t<ngx-mat-timepicker-12-hours-face\n\t\t\t\t\t\t\t\t\t[color]=\"color\"\n\t\t\t\t\t\t\t\t\t(hourChange)=\"onHourChange($event)\"\n\t\t\t\t\t\t\t\t\t[selectedHour]=\"selectedHour | async\"\n\t\t\t\t\t\t\t\t\t[period]=\"selectedPeriod | async\"\n\t\t\t\t\t\t\t\t\t[minTime]=\"data.minTime\"\n\t\t\t\t\t\t\t\t\t[maxTime]=\"data.maxTime\"\n\t\t\t\t\t\t\t\t\t(hourSelected)=\"onHourSelected($event)\"></ngx-mat-timepicker-12-hours-face>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ngx-mat-timepicker-minutes-face *ngSwitchCase=\"timeUnit.MINUTE\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [color]=\"color\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [selectedMinute]=\"selectedMinute | async\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [selectedHour]=\"(selectedHour | async)?.time\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [minTime]=\"data.minTime\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [maxTime]=\"data.maxTime\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [format]=\"data.format\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [period]=\"selectedPeriod | async\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t [minutesGap]=\"data.minutesGap\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t (minuteChange)=\"onMinuteChange($event)\"></ngx-mat-timepicker-minutes-face>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</ngx-mat-timepicker-content>\n\n\t<div class=\"ngx-mat-timepicker-standalone-actions\">\n\t\t<div (click)=\"close()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"data.cancelBtnTmpl ? data.cancelBtnTmpl : cancelBtnDefault\"></ng-container>\n\t\t</div>\n\t\t<div (click)=\"setTime()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"data.confirmBtnTmpl ? data.confirmBtnTmpl : confirmBtnDefault\"></ng-container>\n\t\t</div>\n\t</div>\n</div>\n",
                    // tslint:disable-next-line:no-host-metadata-property
                    host: {
                        "[class.mat-app-background]": "true"
                    },
                    encapsulation: ViewEncapsulation.None,
                    styles: ["ngx-mat-timepicker-standalone{display:block;border-radius:4px;box-shadow:0 0 5px 2px rgba(0,0,0,.25);overflow:hidden}ngx-mat-timepicker-standalone ngx-mat-timepicker-content{display:block}ngx-mat-timepicker-standalone ngx-mat-timepicker-content mat-toolbar.timepicker-header{display:flex;justify-content:center;align-items:center}ngx-mat-timepicker-standalone ngx-mat-timepicker-content .clock-face{margin:16px}ngx-mat-timepicker-standalone .ngx-mat-timepicker-standalone-actions{display:flex;flex-direction:row;justify-content:flex-end;padding:0 16px 16px}"]
                }] }
    ];
    /** @nocollapse */
    NgxMatTimepickerStandaloneComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [NGX_MAT_TIMEPICKER_CONFIG,] }] },
        { type: NgxMatTimepickerService },
        { type: NgxMatTimepickerEventService },
        { type: String, decorators: [{ type: Inject, args: [NGX_MAT_TIMEPICKER_LOCALE,] }] }
    ]; };
    return NgxMatTimepickerStandaloneComponent;
}(NgxMatTimepickerBaseDirective));
export { NgxMatTimepickerStandaloneComponent };
if (false) {
    /** @type {?} */
    NgxMatTimepickerStandaloneComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC10aW1lcGlja2VyLXN0YW5kYWxvbmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW1hdC10aW1lcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbmd4LW1hdC10aW1lcGlja2VyLXN0YW5kYWxvbmUvbmd4LW1hdC10aW1lcGlja2VyLXN0YW5kYWxvbmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUVuRSxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwyQ0FBMkMsQ0FBQztBQUNsRixPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUU3RixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxvREFBb0QsQ0FBQztBQUNqRyxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxtREFBbUQsQ0FBQztBQUM1RixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUV2RjtJQVV5RCx1REFBNkI7SUFFbEYsNkNBQXNELElBQTRCLEVBQ3RFLGFBQXNDLEVBQ3RDLFFBQXNDLEVBQ0gsTUFBYztRQUg3RCxZQUtJLGtCQUFNLGFBQWEsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxTQUMvQztRQU5xRCxVQUFJLEdBQUosSUFBSSxDQUF3Qjs7SUFNbEYsQ0FBQzs7OztJQUVELG1EQUFLOzs7SUFBTDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDeEMsQ0FBQzs7Z0JBdEJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsK0JBQStCO29CQUN6QywyOUhBQTJEOztvQkFHM0QsSUFBSSxFQUFFO3dCQUNKLDRCQUE0QixFQUFFLE1BQU07cUJBQ3JDO29CQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDeEM7Ozs7Z0RBR2dCLE1BQU0sU0FBQyx5QkFBeUI7Z0JBbkJ6Qyx1QkFBdUI7Z0JBQ3ZCLDRCQUE0Qjs2Q0FxQm5CLE1BQU0sU0FBQyx5QkFBeUI7O0lBUWpELDBDQUFDO0NBQUEsQUF2QkQsQ0FVeUQsNkJBQTZCLEdBYXJGO1NBYlksbUNBQW1DOzs7SUFFaEMsbURBQXNFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEluamVjdCwgVmlld0VuY2Fwc3VsYXRpb259IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG4vL1xuaW1wb3J0IHtOZ3hNYXRUaW1lcGlja2VyU2VydmljZX0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL25neC1tYXQtdGltZXBpY2tlci5zZXJ2aWNlXCI7XG5pbXBvcnQge05neE1hdFRpbWVwaWNrZXJFdmVudFNlcnZpY2V9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9uZ3gtbWF0LXRpbWVwaWNrZXItZXZlbnQuc2VydmljZVwiO1xuaW1wb3J0IHtOZ3hNYXRUaW1lcGlja2VyQ29uZmlnfSBmcm9tIFwiLi4vLi4vbW9kZWxzL25neC1tYXQtdGltZXBpY2tlci1jb25maWcuaW50ZXJmYWNlXCI7XG5pbXBvcnQge05neE1hdFRpbWVwaWNrZXJCYXNlRGlyZWN0aXZlfSBmcm9tIFwiLi4vLi4vZGlyZWN0aXZlcy9uZ3gtbWF0LXRpbWVwaWNrZXItYmFzZS5kaXJlY3RpdmVcIjtcbmltcG9ydCB7TkdYX01BVF9USU1FUElDS0VSX0xPQ0FMRX0gZnJvbSBcIi4uLy4uL3Rva2Vucy9uZ3gtbWF0LXRpbWVwaWNrZXItdGltZS1sb2NhbGUudG9rZW5cIjtcbmltcG9ydCB7TkdYX01BVF9USU1FUElDS0VSX0NPTkZJR30gZnJvbSBcIi4uLy4uL3Rva2Vucy9uZ3gtbWF0LXRpbWVwaWNrZXItY29uZmlnLnRva2VuXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcIm5neC1tYXQtdGltZXBpY2tlci1zdGFuZGFsb25lXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwibmd4LW1hdC10aW1lcGlja2VyLXN0YW5kYWxvbmUuY29tcG9uZW50Lmh0bWxcIixcbiAgICBzdHlsZVVybHM6IFtcIm5neC1tYXQtdGltZXBpY2tlci1zdGFuZGFsb25lLmNvbXBvbmVudC5zY3NzXCJdLFxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1ob3N0LW1ldGFkYXRhLXByb3BlcnR5XG4gICAgaG9zdDoge1xuICAgICAgXCJbY2xhc3MubWF0LWFwcC1iYWNrZ3JvdW5kXVwiOiBcInRydWVcIlxuICAgIH0sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hNYXRUaW1lcGlja2VyU3RhbmRhbG9uZUNvbXBvbmVudCBleHRlbmRzIE5neE1hdFRpbWVwaWNrZXJCYXNlRGlyZWN0aXZlIHtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoTkdYX01BVF9USU1FUElDS0VSX0NPTkZJRykgcHVibGljIGRhdGE6IE5neE1hdFRpbWVwaWNrZXJDb25maWcsXG4gICAgICAgICAgICAgICAgdGltZXBpY2tlclNydjogTmd4TWF0VGltZXBpY2tlclNlcnZpY2UsXG4gICAgICAgICAgICAgICAgZXZlbnRTcnY6IE5neE1hdFRpbWVwaWNrZXJFdmVudFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgQEluamVjdChOR1hfTUFUX1RJTUVQSUNLRVJfTE9DQUxFKSBsb2NhbGU6IHN0cmluZykge1xuXG4gICAgICAgIHN1cGVyKHRpbWVwaWNrZXJTcnYsIGV2ZW50U3J2LCBsb2NhbGUsIGRhdGEpO1xuICAgIH1cblxuICAgIGNsb3NlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmRhdGEudGltZXBpY2tlckJhc2VSZWYuY2xvc2UoKTtcbiAgICB9XG59XG4iXX0=