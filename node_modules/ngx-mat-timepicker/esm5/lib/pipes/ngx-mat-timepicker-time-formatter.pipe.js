/**
 * @fileoverview added by tsickle
 * Generated from: lib/pipes/ngx-mat-timepicker-time-formatter.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from "@angular/core";
//
import { NgxMatTimepickerUnits } from "../models/ngx-mat-timepicker-units.enum";
//
import { DateTime } from "ts-luxon";
var NgxMatTimepickerTimeFormatterPipe = /** @class */ (function () {
    function NgxMatTimepickerTimeFormatterPipe() {
    }
    /**
     * @param {?} time
     * @param {?} timeUnit
     * @return {?}
     */
    NgxMatTimepickerTimeFormatterPipe.prototype.transform = /**
     * @param {?} time
     * @param {?} timeUnit
     * @return {?}
     */
    function (time, timeUnit) {
        if (time == null || time === '') {
            return time;
        }
        switch (timeUnit) {
            case NgxMatTimepickerUnits.HOUR:
                return DateTime.fromObject({ hour: +time }).toFormat("HH");
            case NgxMatTimepickerUnits.MINUTE:
                return DateTime.fromObject({ minute: +time }).toFormat("mm");
            default:
                throw new Error("no such time unit");
        }
    };
    NgxMatTimepickerTimeFormatterPipe.decorators = [
        { type: Pipe, args: [{
                    name: "timeFormatter"
                },] }
    ];
    return NgxMatTimepickerTimeFormatterPipe;
}());
export { NgxMatTimepickerTimeFormatterPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC10aW1lcGlja2VyLXRpbWUtZm9ybWF0dGVyLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbWF0LXRpbWVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvcGlwZXMvbmd4LW1hdC10aW1lcGlja2VyLXRpbWUtZm9ybWF0dGVyLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFFcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7O0FBRWhGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFcEM7SUFBQTtJQW1CQSxDQUFDOzs7Ozs7SUFkRyxxREFBUzs7Ozs7SUFBVCxVQUFVLElBQXFCLEVBQUUsUUFBK0I7UUFDNUQsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7WUFDN0IsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELFFBQVEsUUFBUSxFQUFFO1lBQ2QsS0FBSyxxQkFBcUIsQ0FBQyxJQUFJO2dCQUMzQixPQUFPLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3RCxLQUFLLHFCQUFxQixDQUFDLE1BQU07Z0JBQzdCLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQy9EO2dCQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7O2dCQWpCSixJQUFJLFNBQUM7b0JBQ0YsSUFBSSxFQUFFLGVBQWU7aUJBQ3hCOztJQWlCRCx3Q0FBQztDQUFBLEFBbkJELElBbUJDO1NBaEJZLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLy9cbmltcG9ydCB7IE5neE1hdFRpbWVwaWNrZXJVbml0cyB9IGZyb20gXCIuLi9tb2RlbHMvbmd4LW1hdC10aW1lcGlja2VyLXVuaXRzLmVudW1cIjtcbi8vXG5pbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gXCJ0cy1sdXhvblwiO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogXCJ0aW1lRm9ybWF0dGVyXCJcbn0pXG5leHBvcnQgY2xhc3MgTmd4TWF0VGltZXBpY2tlclRpbWVGb3JtYXR0ZXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICB0cmFuc2Zvcm0odGltZTogbnVtYmVyIHwgc3RyaW5nLCB0aW1lVW5pdDogTmd4TWF0VGltZXBpY2tlclVuaXRzKTogYW55IHtcbiAgICAgICAgaWYgKHRpbWUgPT0gbnVsbCB8fCB0aW1lID09PSAnJykge1xuICAgICAgICAgICAgcmV0dXJuIHRpbWU7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoICh0aW1lVW5pdCkge1xuICAgICAgICAgICAgY2FzZSBOZ3hNYXRUaW1lcGlja2VyVW5pdHMuSE9VUjpcbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbU9iamVjdCh7aG91cjogK3RpbWV9KS50b0Zvcm1hdChcIkhIXCIpO1xuICAgICAgICAgICAgY2FzZSBOZ3hNYXRUaW1lcGlja2VyVW5pdHMuTUlOVVRFOlxuICAgICAgICAgICAgICAgIHJldHVybiBEYXRlVGltZS5mcm9tT2JqZWN0KHttaW51dGU6ICt0aW1lfSkudG9Gb3JtYXQoXCJtbVwiKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibm8gc3VjaCB0aW1lIHVuaXRcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==